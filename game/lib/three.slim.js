(function(o,_){'object'==typeof exports&&'undefined'!=typeof module?_(exports):'function'==typeof define&&define.amd?define(['exports'],_):_(o.THREE={})})(this,function(o){'use strict';function _(){}function M(ms,us){this.x=ms||0,this.y=us||0}function S(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length}function L(ms,us,fs,gs){this._x=ms||0,this._y=us||0,this._z=fs||0,this._w=gs===void 0?1:gs}function T(ms,us,fs){this.x=ms||0,this.y=us||0,this.z=fs||0}function P(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length}function A(ms,us,fs,gs,hs,xs,vs,_s,ys,bs){Object.defineProperty(this,'id',{value:Di++}),this.uuid=Ai.generateUUID(),this.name='',this.image=ms===void 0?A.DEFAULT_IMAGE:ms,this.mipmaps=[],this.mapping=us===void 0?A.DEFAULT_MAPPING:us,this.wrapS=fs===void 0?xr:fs,this.wrapT=gs===void 0?xr:gs,this.magFilter=hs===void 0?Sr:hs,this.minFilter=xs===void 0?wr:xs,this.anisotropy=ys===void 0?1:ys,this.format=vs===void 0?Or:vs,this.type=_s===void 0?Tr:_s,this.offset=new M(0,0),this.repeat=new M(1,1),this.center=new M(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new P,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=bs===void 0?vi:bs,this.version=0,this.onUpdate=null}function C(ms,us,fs,gs,hs,xs,vs,_s,ys,bs,Ms,Ss){A.call(this,null,xs,vs,_s,ys,bs,gs,hs,Ms,Ss),this.image={data:ms,width:us,height:fs},this.magFilter=ys===void 0?yr:ys,this.minFilter=bs===void 0?yr:bs,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function E(ms,us){this.min=ms===void 0?new T(+Infinity,+Infinity,+Infinity):ms,this.max=us===void 0?new T(-Infinity,-Infinity,-Infinity):us}function D(ms,us){this.center=ms===void 0?new T:ms,this.radius=us===void 0?0:us}function I(ms,us){this.normal=ms===void 0?new T(1,0,0):ms,this.constant=us===void 0?0:us}function N(ms,us,fs,gs,hs,xs){this.planes=[ms===void 0?new I:ms,us===void 0?new I:us,fs===void 0?new I:fs,gs===void 0?new I:gs,hs===void 0?new I:hs,xs===void 0?new I:xs]}function U(ms){var us={};for(var fs in ms)for(var gs in us[fs]={},ms[fs]){var hs=ms[fs][gs];us[fs][gs]=hs&&(hs.isColor||hs.isMatrix3||hs.isMatrix4||hs.isVector2||hs.isVector3||hs.isVector4||hs.isTexture)?hs.clone():Array.isArray(hs)?hs.slice():hs}return us}function R(ms){for(var us={},fs=0,gs;fs<ms.length;fs++)for(var hs in gs=U(ms[fs]),gs)us[hs]=gs[hs];return us}function F(ms,us,fs){return void 0===us&&void 0===fs?this.set(ms):this.setRGB(ms,us,fs)}function B(ms,us,fs,gs){this.x=ms||0,this.y=us||0,this.z=fs||0,this.w=gs===void 0?1:gs}function V(){function ms(hs,xs){!1===fs||(gs(hs,xs),us.requestAnimationFrame(ms))}var us=null,fs=!1,gs=null;return{start:function(){!0==fs||null==gs||(us.requestAnimationFrame(ms),fs=!0)},stop:function(){fs=!1},setAnimationLoop:function(hs){gs=hs},setContext:function(hs){us=hs}}}function O(ms){function us(_s,ys){var bs=_s.array,Ms=_s.dynamic?35048:35044,Ss=ms.createBuffer();ms.bindBuffer(ys,Ss),ms.bufferData(ys,bs,Ms),_s.onUploadCallback();var Ls=5126;if(bs instanceof Float32Array)Ls=5126;else if(bs instanceof Float64Array);else bs instanceof Uint16Array?Ls=5123:bs instanceof Int16Array?Ls=5122:bs instanceof Uint32Array?Ls=5125:bs instanceof Int32Array?Ls=5124:bs instanceof Int8Array?Ls=5120:bs instanceof Uint8Array&&(Ls=5121);return{buffer:Ss,type:Ls,bytesPerElement:bs.BYTES_PER_ELEMENT,version:_s.version}}function fs(_s,ys,bs){var Ms=ys.array,Ss=ys.updateRange;ms.bindBuffer(bs,_s),!1===ys.dynamic?ms.bufferData(bs,Ms,35044):-1===Ss.count?ms.bufferSubData(bs,0,Ms):0===Ss.count||(ms.bufferSubData(bs,Ss.offset*Ms.BYTES_PER_ELEMENT,Ms.subarray(Ss.offset,Ss.offset+Ss.count)),Ss.count=-1)}var vs=new WeakMap;return{get:function(_s){return _s.isInterleavedBufferAttribute&&(_s=_s.data),vs.get(_s)},remove:function(_s){_s.isInterleavedBufferAttribute&&(_s=_s.data);var ys=vs.get(_s);ys&&(ms.deleteBuffer(ys.buffer),vs.delete(_s))},update:function(_s,ys){_s.isInterleavedBufferAttribute&&(_s=_s.data);var bs=vs.get(_s);bs===void 0?vs.set(_s,us(_s,ys)):bs.version<_s.version&&(fs(bs.buffer,_s,ys),bs.version=_s.version)}}}function G(ms,us,fs,gs,hs,xs){this.a=ms,this.b=us,this.c=fs,this.normal=gs&&gs.isVector3?gs:new T,this.vertexNormals=Array.isArray(gs)?gs:[],this.color=hs&&hs.isColor?hs:new F,this.vertexColors=Array.isArray(hs)?hs:[],this.materialIndex=xs===void 0?0:xs}function W(ms,us,fs,gs){this._x=ms||0,this._y=us||0,this._z=fs||0,this._order=gs||W.DefaultOrder}function H(){this.mask=1}function X(){Object.defineProperty(this,'id',{value:Zo++}),this.uuid=Ai.generateUUID(),this.name='',this.type='Object3D',this.parent=null,this.children=[],this.up=X.DefaultUp.clone();var fs=new T,gs=new W,hs=new L,xs=new T(1,1,1);gs.onChange(function(){hs.setFromEuler(gs,!1)}),hs.onChange(function(){gs.setFromQuaternion(hs,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:fs},rotation:{configurable:!0,enumerable:!0,value:gs},quaternion:{configurable:!0,enumerable:!0,value:hs},scale:{configurable:!0,enumerable:!0,value:xs},modelViewMatrix:{value:new S},normalMatrix:{value:new P}}),this.matrix=new S,this.matrixWorld=new S,this.matrixAutoUpdate=X.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new H,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function Y(){Object.defineProperty(this,'id',{value:Jo+=2}),this.uuid=Ai.generateUUID(),this.name='',this.type='Geometry',this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function Z(ms,us,fs){if(Array.isArray(ms))throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');this.name='',this.array=ms,this.itemSize=us,this.count=ms===void 0?0:ms.length/us,this.normalized=!0===fs,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0}function J(ms,us,fs){Z.call(this,new Int8Array(ms),us,fs)}function Q(ms,us,fs){Z.call(this,new Uint8Array(ms),us,fs)}function K(ms,us,fs){Z.call(this,new Uint8ClampedArray(ms),us,fs)}function $(ms,us,fs){Z.call(this,new Int16Array(ms),us,fs)}function ee(ms,us,fs){Z.call(this,new Uint16Array(ms),us,fs)}function re(ms,us,fs){Z.call(this,new Int32Array(ms),us,fs)}function ie(ms,us,fs){Z.call(this,new Uint32Array(ms),us,fs)}function ne(ms,us,fs){Z.call(this,new Float32Array(ms),us,fs)}function oe(ms,us,fs){Z.call(this,new Float64Array(ms),us,fs)}function se(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function le(ms){if(0===ms.length)return-Infinity;for(var us=ms[0],fs=1,gs=ms.length;fs<gs;++fs)ms[fs]>us&&(us=ms[fs]);return us}function pe(){Object.defineProperty(this,'id',{value:Qo+=2}),this.uuid=Ai.generateUUID(),this.name='',this.type='BufferGeometry',this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:Infinity},this.userData={}}function ue(ms,us,fs,gs,hs,xs){Y.call(this),this.type='BoxGeometry',this.parameters={width:ms,height:us,depth:fs,widthSegments:gs,heightSegments:hs,depthSegments:xs},this.fromBufferGeometry(new fe(ms,us,fs,gs,hs,xs)),this.mergeVertices()}function fe(ms,us,fs,gs,hs,xs){function vs(Ts,Ps,As,Cs,Es,Ds,zs,Is,Ns,Us,Rs){var ks=Ns+1,Hs=0,Xs=0,js,qs,Ys=new T;for(qs=0;qs<Us+1;qs++){var Zs=qs*(zs/Us)-zs/2;for(js=0;js<ks;js++){var Js=js*(Ds/Ns)-Ds/2;Ys[Ts]=Js*Cs,Ys[Ps]=Zs*Es,Ys[As]=Is/2,bs.push(Ys.x,Ys.y,Ys.z),Ys[Ts]=0,Ys[Ps]=0,Ys[As]=0<Is?1:-1,Ms.push(Ys.x,Ys.y,Ys.z),Ss.push(js/Ns),Ss.push(1-qs/Us),Hs+=1}}for(qs=0;qs<Us;qs++)for(js=0;js<Ns;js++){var Qs=Ls+js+ks*qs,Ks=Ls+js+ks*(qs+1),$s=Ls+(js+1)+ks*(qs+1),el=Ls+(js+1)+ks*qs;ys.push(Qs,Ks,el),ys.push(Ks,$s,el),Xs+=6}_s.addGroup(ws,Xs,Rs),ws+=Xs,Ls+=Hs}pe.call(this),this.type='BoxBufferGeometry',this.parameters={width:ms,height:us,depth:fs,widthSegments:gs,heightSegments:hs,depthSegments:xs};var _s=this;ms=ms||1,us=us||1,fs=fs||1,gs=Math.floor(gs)||1,hs=Math.floor(hs)||1,xs=Math.floor(xs)||1;var ys=[],bs=[],Ms=[],Ss=[],Ls=0,ws=0;vs('z','y','x',-1,-1,fs,us,ms,xs,hs,0),vs('z','y','x',1,-1,fs,us,-ms,xs,hs,1),vs('x','z','y',1,1,ms,fs,us,gs,xs,2),vs('x','z','y',1,-1,ms,fs,-us,gs,xs,3),vs('x','y','z',1,-1,ms,us,fs,gs,hs,4),vs('x','y','z',-1,-1,ms,us,-fs,gs,hs,5),this.setIndex(ys),this.addAttribute('position',new ne(bs,3)),this.addAttribute('normal',new ne(Ms,3)),this.addAttribute('uv',new ne(Ss,2))}function ge(ms,us,fs,gs){Y.call(this),this.type='PlaneGeometry',this.parameters={width:ms,height:us,widthSegments:fs,heightSegments:gs},this.fromBufferGeometry(new he(ms,us,fs,gs)),this.mergeVertices()}function he(ms,us,fs,gs){pe.call(this),this.type='PlaneBufferGeometry',this.parameters={width:ms,height:us,widthSegments:fs,heightSegments:gs},ms=ms||1,us=us||1;var hs=ms/2,xs=us/2,vs=Math.floor(fs)||1,_s=Math.floor(gs)||1,ys=vs+1,Ms=ms/vs,Ss=us/_s,Ls,ws,Ts=[],Ps=[],As=[],Cs=[];for(ws=0;ws<_s+1;ws++){var Es=ws*Ss-xs;for(Ls=0;Ls<ys;Ls++){var Ds=Ls*Ms-hs;Ps.push(Ds,-Es,0),As.push(0,0,1),Cs.push(Ls/vs),Cs.push(1-ws/_s)}}for(ws=0;ws<_s;ws++)for(Ls=0;Ls<vs;Ls++){var zs=Ls+ys*ws,Is=Ls+ys*(ws+1),Ns=Ls+1+ys*(ws+1),Us=Ls+1+ys*ws;Ts.push(zs,Is,Us),Ts.push(Is,Ns,Us)}this.setIndex(Ts),this.addAttribute('position',new ne(Ps,3)),this.addAttribute('normal',new ne(As,3)),this.addAttribute('uv',new ne(Cs,2))}function xe(){Object.defineProperty(this,'id',{value:Ko++}),this.uuid=Ai.generateUUID(),this.name='',this.type='Material',this.fog=!0,this.lights=!0,this.blending=Sa,this.side=ha,this.flatShading=!1,this.vertexColors=ba,this.opacity=1,this.transparent=!1,this.blendSrc=Fa,this.blendDst=Ba,this.blendEquation=Aa,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ya,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.userData={},this.needsUpdate=!0}function ve(ms){xe.call(this),this.type='ShaderMaterial',this.defines={},this.uniforms={},this.vertexShader='void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}',this.fragmentShader='void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}',this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,ms!==void 0&&(ms.attributes!==void 0,this.setValues(ms))}function _e(ms,us){this.origin=ms===void 0?new T:ms,this.direction=us===void 0?new T:us}function ye(ms,us,fs){this.a=ms===void 0?new T:ms,this.b=us===void 0?new T:us,this.c=fs===void 0?new T:fs}function Me(ms){xe.call(this),this.type='MeshBasicMaterial',this.color=new F(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=$a,this.reflectivity=1,this.refractionRatio=0.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap='round',this.wireframeLinejoin='round',this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(ms)}function Se(ms,us){X.call(this),this.type='Mesh',this.geometry=ms===void 0?new pe:ms,this.material=us===void 0?new Me({color:16777215*Math.random()}):us,this.drawMode=gi,this.updateMorphTargets()}function Le(ms,us,fs,gs){function xs(Ls,ws){us.buffers.color.setClear(Ls.r,Ls.g,Ls.b,ws,gs)}var vs=new F(0),_s=0,ys,bs,Ms=null,Ss=0;return{getClearColor:function(){return vs},setClearColor:function(Ls,ws){vs.set(Ls),_s=ws===void 0?1:ws,xs(vs,_s)},getClearAlpha:function(){return _s},setClearAlpha:function(Ls){_s=Ls,xs(vs,_s)},render:function(Ls,ws,Ts,Ps){var As=ws.background;if(null===As?(xs(vs,_s),Ms=null,Ss=0):As&&As.isColor&&(xs(As,1),Ps=!0,Ms=null,Ss=0),(ms.autoClear||Ps)&&ms.clear(ms.autoClearColor,ms.autoClearDepth,ms.autoClearStencil),As&&(As.isCubeTexture||As.isWebGLRenderTargetCube)){void 0===bs&&(bs=new Se(new fe(1,1,1),new ve({type:'BackgroundCubeMaterial',uniforms:U(Yo.cube.uniforms),vertexShader:Yo.cube.vertexShader,fragmentShader:Yo.cube.fragmentShader,side:xa,depthTest:!0,depthWrite:!1,fog:!1})),bs.geometry.removeAttribute('normal'),bs.geometry.removeAttribute('uv'),bs.onBeforeRender=function(Es,Ds,zs){this.matrixWorld.copyPosition(zs.matrixWorld)},Object.defineProperty(bs.material,'map',{get:function(){return this.uniforms.tCube.value}}),fs.update(bs));var Cs=As.isWebGLRenderTargetCube?As.texture:As;bs.material.uniforms.tCube.value=Cs,bs.material.uniforms.tFlip.value=As.isWebGLRenderTargetCube?1:-1,(Ms!==As||Ss!==Cs.version)&&(bs.material.needsUpdate=!0,Ms=As,Ss=Cs.version),Ls.unshift(bs,bs.geometry,bs.material,0,null)}else As&&As.isTexture&&(void 0===ys&&(ys=new Se(new he(2,2),new ve({type:'BackgroundMaterial',uniforms:U(Yo.background.uniforms),vertexShader:Yo.background.vertexShader,fragmentShader:Yo.background.fragmentShader,side:ha,depthTest:!1,depthWrite:!1,fog:!1})),ys.geometry.removeAttribute('normal'),Object.defineProperty(ys.material,'map',{get:function(){return this.uniforms.t2D.value}}),fs.update(ys)),ys.material.uniforms.t2D.value=As,!0===As.matrixAutoUpdate&&As.updateMatrix(),ys.material.uniforms.uvTransform.value.copy(As.matrix),(Ms!==As||Ss!==As.version)&&(ys.material.needsUpdate=!0,Ms=As,Ss=As.version),Ls.unshift(ys,ys.geometry,ys.material,0,null))}}}function we(ms,us,fs,gs){var _s;this.setMode=function(ys){_s=ys},this.render=function(ys,bs){ms.drawArrays(_s,ys,bs),fs.update(bs,_s)},this.renderInstances=function(ys,bs,Ms){var Ss;if(gs.isWebGL2)Ss=ms;else if(Ss=us.get('ANGLE_instanced_arrays'),null===Ss)return;Ss[gs.isWebGL2?'drawArraysInstanced':'drawArraysInstancedANGLE'](_s,bs,Ms,ys.maxInstancedCount),fs.update(Ms,_s,ys.maxInstancedCount)}}function Te(ms,us,fs){function hs(Is){if('highp'===Is){if(0<ms.getShaderPrecisionFormat(35633,36338).precision&&0<ms.getShaderPrecisionFormat(35632,36338).precision)return'highp';Is='mediump'}return'mediump'===Is&&0<ms.getShaderPrecisionFormat(35633,36337).precision&&0<ms.getShaderPrecisionFormat(35632,36337).precision?'mediump':'lowp'}var xs,vs='undefined'!=typeof WebGL2RenderingContext&&ms instanceof WebGL2RenderingContext,_s=fs.precision===void 0?'highp':fs.precision,ys=hs(_s);ys!==_s&&(_s=ys);var bs=!0===fs.logarithmicDepthBuffer,Ms=ms.getParameter(34930),Ss=ms.getParameter(35660),Ls=ms.getParameter(3379),ws=ms.getParameter(34076),Ts=ms.getParameter(34921),Ps=ms.getParameter(36347),As=ms.getParameter(36348),Cs=ms.getParameter(36349),Es=0<Ss,Ds=vs||!!us.get('OES_texture_float');return{isWebGL2:vs,getMaxAnisotropy:function(){if(void 0!==xs)return xs;var Is=us.get('EXT_texture_filter_anisotropic');return xs=null===Is?0:ms.getParameter(Is.MAX_TEXTURE_MAX_ANISOTROPY_EXT),xs},getMaxPrecision:hs,precision:_s,logarithmicDepthBuffer:bs,maxTextures:Ms,maxVertexTextures:Ss,maxTextureSize:Ls,maxCubemapSize:ws,maxAttributes:Ts,maxVertexUniforms:Ps,maxVaryings:As,maxFragmentUniforms:Cs,vertexTextures:Es,floatFragmentTextures:Ds,floatVertexTextures:Es&&Ds}}function Pe(){function ms(){bs.value!==gs&&(bs.value=gs,bs.needsUpdate=0<hs),fs.numPlanes=hs,fs.numIntersection=0}function us(Ms,Ss,Ls,ws){var Ts=null===Ms?0:Ms.length,Ps=null;if(0!==Ts){if(Ps=bs.value,!0!==ws||null==Ps){var As=Ls+4*Ts,Cs=Ss.matrixWorldInverse;ys.getNormalMatrix(Cs),(null==Ps||Ps.length<As)&&(Ps=new Float32Array(As));for(var Es=0,Ds=Ls;Es!==Ts;++Es,Ds+=4)_s.copy(Ms[Es]).applyMatrix4(Cs,ys),_s.normal.toArray(Ps,Ds),Ps[Ds+3]=_s.constant}bs.value=Ps,bs.needsUpdate=!0}return fs.numPlanes=Ts,Ps}var fs=this,gs=null,hs=0,xs=!1,vs=!1,_s=new I,ys=new P,bs={value:null,needsUpdate:!1};this.uniform=bs,this.numPlanes=0,this.numIntersection=0,this.init=function(Ms,Ss,Ls){var ws=0!==Ms.length||Ss||0!=hs||xs;return xs=Ss,gs=us(Ms,Ls,0),hs=Ms.length,ws},this.beginShadows=function(){vs=!0,us(null)},this.endShadows=function(){vs=!1,ms()},this.setState=function(Ms,Ss,Ls,ws,Ts,Ps){if(!xs||null===Ms||0===Ms.length||vs&&!Ls)vs?us(null):ms();else{var As=vs?0:hs,Cs=4*As,Es=Ts.clippingState||null;bs.value=Es,Es=us(Ms,ws,Cs,Ps);for(var Ds=0;Ds!==Cs;++Ds)Es[Ds]=gs[Ds];Ts.clippingState=Es,this.numIntersection=Ss?this.numPlanes:0,this.numPlanes+=As}}}function Ae(ms){var us={};return{get:function(fs){if(void 0!==us[fs])return us[fs];var gs;if(gs='WEBGL_depth_texture'===fs?ms.getExtension('WEBGL_depth_texture')||ms.getExtension('MOZ_WEBGL_depth_texture')||ms.getExtension('WEBKIT_WEBGL_depth_texture'):'EXT_texture_filter_anisotropic'===fs?ms.getExtension('EXT_texture_filter_anisotropic')||ms.getExtension('MOZ_EXT_texture_filter_anisotropic')||ms.getExtension('WEBKIT_EXT_texture_filter_anisotropic'):'WEBGL_compressed_texture_s3tc'===fs?ms.getExtension('WEBGL_compressed_texture_s3tc')||ms.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||ms.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc'):'WEBGL_compressed_texture_pvrtc'===fs?ms.getExtension('WEBGL_compressed_texture_pvrtc')||ms.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'):ms.getExtension(fs),null===gs);return us[fs]=gs,gs}}}function Ce(ms,us,fs){function gs(bs){var Ms=bs.target,Ss=_s[Ms.id];for(var Ls in null!==Ss.index&&us.remove(Ss.index),Ss.attributes)us.remove(Ss.attributes[Ls]);Ms.removeEventListener('dispose',gs),delete _s[Ms.id];var ws=ys[Ss.id];ws&&(us.remove(ws),delete ys[Ss.id]),fs.memory.geometries--}var _s={},ys={};return{get:function(bs,Ms){var Ss=_s[Ms.id];return Ss?Ss:(Ms.addEventListener('dispose',gs),Ms.isBufferGeometry?Ss=Ms:Ms.isGeometry&&(void 0===Ms._bufferGeometry&&(Ms._bufferGeometry=new pe().setFromObject(bs)),Ss=Ms._bufferGeometry),_s[Ms.id]=Ss,fs.memory.geometries++,Ss)},update:function(bs){var Ms=bs.index,Ss=bs.attributes;for(var Ls in null!==Ms&&us.update(Ms,34963),Ss)us.update(Ss[Ls],34962);var ws=bs.morphAttributes;for(var Ls in ws)for(var Ts=ws[Ls],Ps=0,As=Ts.length;Ps<As;Ps++)us.update(Ts[Ps],34962)},getWireframeAttribute:function(bs){var Ms=ys[bs.id];if(Ms)return Ms;var Ss=[],Ls=bs.index,ws=bs.attributes;if(null!==Ls)for(var Ts=Ls.array,Ps=0,As=Ts.length;Ps<As;Ps+=3){var Cs=Ts[Ps+0],Es=Ts[Ps+1],Ds=Ts[Ps+2];Ss.push(Cs,Es,Es,Ds,Ds,Cs)}else for(var Ts=ws.position.array,Ps=0,As=Ts.length/3-1;Ps<As;Ps+=3){var Cs=Ps+0,Es=Ps+1,Ds=Ps+2;Ss.push(Cs,Es,Es,Ds,Ds,Cs)}return Ms=new(65535<le(Ss)?ie:ee)(Ss,1),us.update(Ms,34963),ys[bs.id]=Ms,Ms}}}function Ee(ms,us,fs,gs){var ys,bs,Ms;this.setMode=function(Ss){ys=Ss},this.setIndex=function(Ss){bs=Ss.type,Ms=Ss.bytesPerElement},this.render=function(Ss,Ls){ms.drawElements(ys,Ls,bs,Ss*Ms),fs.update(Ls,ys)},this.renderInstances=function(Ss,Ls,ws){var Ts;if(gs.isWebGL2)Ts=ms;else{var Ts=us.get('ANGLE_instanced_arrays');if(null===Ts)return}Ts[gs.isWebGL2?'drawElementsInstanced':'drawElementsInstancedANGLE'](ys,ws,bs,Ls*Ms,Ss.maxInstancedCount),fs.update(ws,ys,Ss.maxInstancedCount)}}function De(){var hs={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:hs,programs:null,autoReset:!0,reset:function(){hs.frame++,hs.calls=0,hs.triangles=0,hs.points=0,hs.lines=0},update:function(xs,vs,_s){switch(_s=_s||1,hs.calls++,vs){case 4:hs.triangles+=_s*(xs/3);break;case 5:case 6:hs.triangles+=_s*(xs-2);break;case 1:hs.lines+=_s*(xs/2);break;case 3:hs.lines+=_s*(xs-1);break;case 2:hs.lines+=_s*xs;break;case 0:hs.points+=_s*xs;break;default:}}}}function ze(ms,us){return Math.abs(us[1])-Math.abs(ms[1])}function Ie(ms){var fs={},gs=new Float32Array(8);return{update:function(hs,xs,vs,_s){var ys=hs.morphTargetInfluences,bs=ys.length,Ms=fs[xs.id];if(Ms===void 0){Ms=[];for(var Ss=0;Ss<bs;Ss++)Ms[Ss]=[Ss,0];fs[xs.id]=Ms}for(var Ls=vs.morphTargets&&xs.morphAttributes.position,ws=vs.morphNormals&&xs.morphAttributes.normal,Ss=0,Ts;Ss<bs;Ss++)Ts=Ms[Ss],0!==Ts[1]&&(Ls&&xs.removeAttribute('morphTarget'+Ss),ws&&xs.removeAttribute('morphNormal'+Ss));for(var Ss=0,Ts;Ss<bs;Ss++)Ts=Ms[Ss],Ts[0]=Ss,Ts[1]=ys[Ss];Ms.sort(ze);for(var Ss=0,Ts;8>Ss;Ss++){if(Ts=Ms[Ss],Ts){var Ps=Ts[0],As=Ts[1];if(As){Ls&&xs.addAttribute('morphTarget'+Ss,Ls[Ps]),ws&&xs.addAttribute('morphNormal'+Ss,ws[Ps]),gs[Ss]=As;continue}}gs[Ss]=0}_s.getUniforms().setValue(ms,'morphTargetInfluences',gs)}}}function Ne(ms,us){var hs={};return{update:function(xs){var vs=us.render.frame,_s=xs.geometry,ys=ms.get(xs,_s);return hs[ys.id]!==vs&&(_s.isGeometry&&ys.updateFromObject(xs),ms.update(ys),hs[ys.id]=vs),ys},dispose:function(){hs={}}}}function Ue(ms,us,fs,gs,hs,xs,vs,_s,ys,bs){ms=ms===void 0?[]:ms,us=us===void 0?dr:us,A.call(this,ms,us,fs,gs,hs,xs,vs,_s,ys,bs),this.flipY=!1}function Re(ms,us,fs,gs){A.call(this,null),this.image={data:ms,width:us,height:fs,depth:gs},this.magFilter=yr,this.minFilter=yr,this.generateMipmaps=!1,this.flipY=!1}function Fe(){this.seq=[],this.map={}}function Be(ms,us,fs){var gs=ms[0];if(0>=gs||0<gs)return ms;var hs=us*fs,xs=as[hs];if(void 0===xs&&(xs=new Float32Array(hs),as[hs]=xs),0!==us){gs.toArray(xs,0);for(var vs=1,_s=0;vs!==us;++vs)_s+=fs,ms[vs].toArray(xs,_s)}return xs}function Ve(ms,us){if(ms.length!==us.length)return!1;for(var fs=0,gs=ms.length;fs<gs;fs++)if(ms[fs]!==us[fs])return!1;return!0}function Oe(ms,us){for(var fs=0,gs=us.length;fs<gs;fs++)ms[fs]=us[fs]}function Ge(ms,us){var fs=rs[us];fs===void 0&&(fs=new Int32Array(us),rs[us]=fs);for(var gs=0;gs!==us;++gs)fs[gs]=ms.allocTextureUnit();return fs}function ke(ms,us){var fs=this.cache;fs[0]===us||(ms.uniform1f(this.addr,us),fs[0]=us)}function We(ms,us){var fs=this.cache;fs[0]===us||(ms.uniform1i(this.addr,us),fs[0]=us)}function He(ms,us){var fs=this.cache;if(us.x!==void 0)(fs[0]!==us.x||fs[1]!==us.y)&&(ms.uniform2f(this.addr,us.x,us.y),fs[0]=us.x,fs[1]=us.y);else{if(Ve(fs,us))return;ms.uniform2fv(this.addr,us),Oe(fs,us)}}function Xe(ms,us){var fs=this.cache;if(us.x!==void 0)(fs[0]!==us.x||fs[1]!==us.y||fs[2]!==us.z)&&(ms.uniform3f(this.addr,us.x,us.y,us.z),fs[0]=us.x,fs[1]=us.y,fs[2]=us.z);else if(us.r!==void 0)(fs[0]!==us.r||fs[1]!==us.g||fs[2]!==us.b)&&(ms.uniform3f(this.addr,us.r,us.g,us.b),fs[0]=us.r,fs[1]=us.g,fs[2]=us.b);else{if(Ve(fs,us))return;ms.uniform3fv(this.addr,us),Oe(fs,us)}}function je(ms,us){var fs=this.cache;if(us.x!==void 0)(fs[0]!==us.x||fs[1]!==us.y||fs[2]!==us.z||fs[3]!==us.w)&&(ms.uniform4f(this.addr,us.x,us.y,us.z,us.w),fs[0]=us.x,fs[1]=us.y,fs[2]=us.z,fs[3]=us.w);else{if(Ve(fs,us))return;ms.uniform4fv(this.addr,us),Oe(fs,us)}}function qe(ms,us){var fs=this.cache,gs=us.elements;if(gs===void 0){if(Ve(fs,us))return;ms.uniformMatrix2fv(this.addr,!1,us),Oe(fs,us)}else{if(Ve(fs,gs))return;os.set(gs),ms.uniformMatrix2fv(this.addr,!1,os),Oe(fs,gs)}}function Ye(ms,us){var fs=this.cache,gs=us.elements;if(gs===void 0){if(Ve(fs,us))return;ms.uniformMatrix3fv(this.addr,!1,us),Oe(fs,us)}else{if(Ve(fs,gs))return;ns.set(gs),ms.uniformMatrix3fv(this.addr,!1,ns),Oe(fs,gs)}}function Ze(ms,us){var fs=this.cache,gs=us.elements;if(gs===void 0){if(Ve(fs,us))return;ms.uniformMatrix4fv(this.addr,!1,us),Oe(fs,us)}else{if(Ve(fs,gs))return;is.set(gs),ms.uniformMatrix4fv(this.addr,!1,is),Oe(fs,gs)}}function Je(ms,us,fs){var gs=this.cache,hs=fs.allocTextureUnit();gs[0]!==hs&&(ms.uniform1i(this.addr,hs),gs[0]=hs),fs.setTexture2D(us||$o,hs)}function Qe(ms,us,fs){var gs=this.cache,hs=fs.allocTextureUnit();gs[0]!==hs&&(ms.uniform1i(this.addr,hs),gs[0]=hs),fs.setTexture3D(us||es,hs)}function Ke(ms,us,fs){var gs=this.cache,hs=fs.allocTextureUnit();gs[0]!==hs&&(ms.uniform1i(this.addr,hs),gs[0]=hs),fs.setTextureCube(us||ts,hs)}function $e(ms,us){var fs=this.cache;Ve(fs,us)||(ms.uniform2iv(this.addr,us),Oe(fs,us))}function et(ms,us){var fs=this.cache;Ve(fs,us)||(ms.uniform3iv(this.addr,us),Oe(fs,us))}function tt(ms,us){var fs=this.cache;Ve(fs,us)||(ms.uniform4iv(this.addr,us),Oe(fs,us))}function at(ms){return 5126===ms?ke:35664===ms?He:35665===ms?Xe:35666===ms?je:35674===ms?qe:35675===ms?Ye:35676===ms?Ze:35678===ms||36198===ms?Je:35679===ms?Qe:35680===ms?Ke:5124===ms||35670===ms?We:35667===ms||35671===ms?$e:35668===ms||35672===ms?et:35669===ms||35673===ms?tt:void 0}function rt(ms,us){var fs=this.cache;Ve(fs,us)||(ms.uniform1fv(this.addr,us),Oe(fs,us))}function it(ms,us){var fs=this.cache;Ve(fs,us)||(ms.uniform1iv(this.addr,us),Oe(fs,us))}function nt(ms,us){var fs=this.cache,gs=Be(us,this.size,2);Ve(fs,gs)||(ms.uniform2fv(this.addr,gs),this.updateCache(gs))}function ot(ms,us){var fs=this.cache,gs=Be(us,this.size,3);Ve(fs,gs)||(ms.uniform3fv(this.addr,gs),this.updateCache(gs))}function st(ms,us){var fs=this.cache,gs=Be(us,this.size,4);Ve(fs,gs)||(ms.uniform4fv(this.addr,gs),this.updateCache(gs))}function lt(ms,us){var fs=this.cache,gs=Be(us,this.size,4);Ve(fs,gs)||(ms.uniformMatrix2fv(this.addr,!1,gs),this.updateCache(gs))}function dt(ms,us){var fs=this.cache,gs=Be(us,this.size,9);Ve(fs,gs)||(ms.uniformMatrix3fv(this.addr,!1,gs),this.updateCache(gs))}function ct(ms,us){var fs=this.cache,gs=Be(us,this.size,16);Ve(fs,gs)||(ms.uniformMatrix4fv(this.addr,!1,gs),this.updateCache(gs))}function pt(ms,us,fs){var gs=this.cache,hs=us.length,xs=Ge(fs,hs);!1===Ve(gs,xs)&&(ms.uniform1iv(this.addr,xs),Oe(gs,xs));for(var vs=0;vs!==hs;++vs)fs.setTexture2D(us[vs]||$o,xs[vs])}function mt(ms,us,fs){var gs=this.cache,hs=us.length,xs=Ge(fs,hs);!1===Ve(gs,xs)&&(ms.uniform1iv(this.addr,xs),Oe(gs,xs));for(var vs=0;vs!==hs;++vs)fs.setTextureCube(us[vs]||ts,xs[vs])}function ut(ms){return 5126===ms?rt:35664===ms?nt:35665===ms?ot:35666===ms?st:35674===ms?lt:35675===ms?dt:35676===ms?ct:35678===ms?pt:35680===ms?mt:5124===ms||35670===ms?it:35667===ms||35671===ms?$e:35668===ms||35672===ms?et:35669===ms||35673===ms?tt:void 0}function ft(ms,us,fs){this.id=ms,this.addr=fs,this.cache=[],this.setValue=at(us.type)}function gt(ms,us,fs){this.id=ms,this.addr=fs,this.cache=[],this.size=us.size,this.setValue=ut(us.type)}function ht(ms){this.id=ms,Fe.call(this)}function xt(ms,us){ms.seq.push(us),ms.map[us.id]=us}function vt(ms,us,fs){var gs=ms.name,hs=gs.length;for(ss.lastIndex=0;;){var xs=ss.exec(gs),vs=ss.lastIndex,_s=xs[1],ys=']'===xs[2],bs=xs[3];if(ys&&(_s|=0),void 0===bs||'['===bs&&vs+2===hs){xt(fs,void 0===bs?new ft(_s,ms,us):new gt(_s,ms,us));break}else{var Ms=fs.map,Ss=Ms[_s];void 0===Ss&&(Ss=new ht(_s),xt(fs,Ss)),fs=Ss}}}function _t(ms,us,fs){Fe.call(this),this.renderer=fs;for(var gs=ms.getProgramParameter(us,35718),hs=0;hs<gs;++hs){var xs=ms.getActiveUniform(us,hs),vs=ms.getUniformLocation(us,xs.name);vt(xs,vs,this)}}function bt(ms,us,fs){var gs=ms.createShader(us);if(ms.shaderSource(gs,fs),ms.compileShader(gs),!1===ms.getShaderParameter(gs,35713),''!==ms.getShaderInfoLog(gs));return gs}function Mt(ms){switch(ms){case vi:return['Linear','( value )'];case 3001:return['sRGB','( value )'];case 3002:return['RGBE','( value )'];case 3004:return['RGBM','( value, 7.0 )'];case 3005:return['RGBM','( value, 16.0 )'];case 3006:return['RGBD','( value, 256.0 )'];case yi:return['Gamma','( value, float( GAMMA_FACTOR ) )'];default:throw new Error;}}function St(ms,us){var fs=Mt(us);return'vec4 '+ms+'( vec4 value ) { return '+fs[0]+'ToLinear'+fs[1]+'; }'}function Lt(ms,us){var fs=Mt(us);return'vec4 '+ms+'( vec4 value ) { return LinearTo'+fs[0]+fs[1]+'; }'}function wt(ms,us){var fs;switch(us){case rr:fs='Linear';break;case 2:fs='Reinhard';break;case 3:fs='Uncharted2';break;case 4:fs='OptimizedCineon';break;case 5:fs='ACESFilmic';break;default:throw new Error;}return'vec3 '+ms+'( vec3 color ) { return '+fs+'ToneMapping( color ); }'}function Tt(ms,us,fs){ms=ms||{};var gs=[ms.derivatives||us.envMapCubeUV||us.bumpMap||us.normalMap&&!us.objectSpaceNormalMap||us.flatShading?'#extension GL_OES_standard_derivatives : enable':'',(ms.fragDepth||us.logarithmicDepthBuffer)&&fs.get('EXT_frag_depth')?'#extension GL_EXT_frag_depth : enable':'',ms.drawBuffers&&fs.get('WEBGL_draw_buffers')?'#extension GL_EXT_draw_buffers : require':'',(ms.shaderTextureLOD||us.envMap)&&fs.get('EXT_shader_texture_lod')?'#extension GL_EXT_shader_texture_lod : enable':''];return gs.filter(Ct).join('\n')}function Pt(ms){var us=[];for(var fs in ms){var gs=ms[fs];!1===gs||us.push('#define '+fs+' '+gs)}return us.join('\n')}function At(ms,us){for(var fs={},gs=ms.getProgramParameter(us,35721),hs=0;hs<gs;hs++){var xs=ms.getActiveAttrib(us,hs),vs=xs.name;fs[vs]=ms.getAttribLocation(us,vs)}return fs}function Ct(ms){return''!==ms}function Et(ms,us){return ms.replace(/NUM_DIR_LIGHTS/g,us.numDirLights).replace(/NUM_SPOT_LIGHTS/g,us.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,us.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,us.numPointLights).replace(/NUM_HEMI_LIGHTS/g,us.numHemiLights)}function Dt(ms,us){return ms.replace(/NUM_CLIPPING_PLANES/g,us.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,us.numClippingPlanes-us.numClipIntersection)}function zt(ms){var fs=/^[ \t]*#include +<([\w\d./]+)>/gm;return ms.replace(fs,function(gs,hs){var xs=Xo[hs];if(xs===void 0)throw new Error;return zt(xs)})}function It(ms){var fs=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;return ms.replace(fs,function(gs,hs,xs,vs){for(var _s='',ys=parseInt(hs);ys<parseInt(xs);ys++)_s+=vs.replace(/\[ i \]/g,'[ '+ys+' ]');return _s})}function Nt(ms,us,fs,gs,hs,xs,vs){var _s=ms.context,ys=gs.defines,bs=hs.vertexShader,Ms=hs.fragmentShader,Ss='SHADOWMAP_TYPE_BASIC';xs.shadowMapType===fa?Ss='SHADOWMAP_TYPE_PCF':xs.shadowMapType===2&&(Ss='SHADOWMAP_TYPE_PCF_SOFT');var Ls='ENVMAP_TYPE_CUBE',ws='ENVMAP_MODE_REFLECTION',Ts='ENVMAP_BLENDING_MULTIPLY';if(xs.envMap){switch(gs.envMap.mapping){case dr:case cr:Ls='ENVMAP_TYPE_CUBE';break;case fr:case gr:Ls='ENVMAP_TYPE_CUBE_UV';break;case 303:case mr:Ls='ENVMAP_TYPE_EQUIREC';break;case 305:Ls='ENVMAP_TYPE_SPHERE';}switch(gs.envMap.mapping){case cr:case mr:ws='ENVMAP_MODE_REFRACTION';}switch(gs.combine){case $a:Ts='ENVMAP_BLENDING_MULTIPLY';break;case 1:Ts='ENVMAP_BLENDING_MIX';break;case 2:Ts='ENVMAP_BLENDING_ADD';}}var Ps=0<ms.gammaFactor?ms.gammaFactor:1,As=vs.isWebGL2?'':Tt(gs.extensions,xs,us),Cs=Pt(ys),Es=_s.createProgram(),Ds,zs;if(gs.isRawShaderMaterial?(Ds=[Cs].filter(Ct).join('\n'),0<Ds.length&&(Ds+='\n'),zs=[As,Cs].filter(Ct).join('\n'),0<zs.length&&(zs+='\n')):(Ds=['precision '+xs.precision+' float;','precision '+xs.precision+' int;','#define SHADER_NAME '+hs.name,Cs,xs.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+Ps,'#define MAX_BONES '+xs.maxBones,xs.useFog&&xs.fog?'#define USE_FOG':'',xs.useFog&&xs.fogExp?'#define FOG_EXP2':'',xs.map?'#define USE_MAP':'',xs.envMap?'#define USE_ENVMAP':'',xs.envMap?'#define '+ws:'',xs.lightMap?'#define USE_LIGHTMAP':'',xs.aoMap?'#define USE_AOMAP':'',xs.emissiveMap?'#define USE_EMISSIVEMAP':'',xs.bumpMap?'#define USE_BUMPMAP':'',xs.normalMap?'#define USE_NORMALMAP':'',xs.normalMap&&xs.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',xs.displacementMap&&xs.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',xs.specularMap?'#define USE_SPECULARMAP':'',xs.roughnessMap?'#define USE_ROUGHNESSMAP':'',xs.metalnessMap?'#define USE_METALNESSMAP':'',xs.alphaMap?'#define USE_ALPHAMAP':'',xs.vertexColors?'#define USE_COLOR':'',xs.flatShading?'#define FLAT_SHADED':'',xs.skinning?'#define USE_SKINNING':'',xs.useVertexTexture?'#define BONE_TEXTURE':'',xs.morphTargets?'#define USE_MORPHTARGETS':'',xs.morphNormals&&!1===xs.flatShading?'#define USE_MORPHNORMALS':'',xs.doubleSided?'#define DOUBLE_SIDED':'',xs.flipSided?'#define FLIP_SIDED':'',xs.shadowMapEnabled?'#define USE_SHADOWMAP':'',xs.shadowMapEnabled?'#define '+Ss:'',xs.sizeAttenuation?'#define USE_SIZEATTENUATION':'',xs.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',xs.logarithmicDepthBuffer&&(vs.isWebGL2||us.get('EXT_frag_depth'))?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_COLOR','\tattribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','\tattribute vec3 morphTarget0;','\tattribute vec3 morphTarget1;','\tattribute vec3 morphTarget2;','\tattribute vec3 morphTarget3;','\t#ifdef USE_MORPHNORMALS','\t\tattribute vec3 morphNormal0;','\t\tattribute vec3 morphNormal1;','\t\tattribute vec3 morphNormal2;','\t\tattribute vec3 morphNormal3;','\t#else','\t\tattribute vec3 morphTarget4;','\t\tattribute vec3 morphTarget5;','\t\tattribute vec3 morphTarget6;','\t\tattribute vec3 morphTarget7;','\t#endif','#endif','#ifdef USE_SKINNING','\tattribute vec4 skinIndex;','\tattribute vec4 skinWeight;','#endif','\n'].filter(Ct).join('\n'),zs=[As,'precision '+xs.precision+' float;','precision '+xs.precision+' int;','#define SHADER_NAME '+hs.name,Cs,xs.alphaTest?'#define ALPHATEST '+xs.alphaTest+(xs.alphaTest%1?'':'.0'):'','#define GAMMA_FACTOR '+Ps,xs.useFog&&xs.fog?'#define USE_FOG':'',xs.useFog&&xs.fogExp?'#define FOG_EXP2':'',xs.map?'#define USE_MAP':'',xs.matcap?'#define USE_MATCAP':'',xs.envMap?'#define USE_ENVMAP':'',xs.envMap?'#define '+Ls:'',xs.envMap?'#define '+ws:'',xs.envMap?'#define '+Ts:'',xs.lightMap?'#define USE_LIGHTMAP':'',xs.aoMap?'#define USE_AOMAP':'',xs.emissiveMap?'#define USE_EMISSIVEMAP':'',xs.bumpMap?'#define USE_BUMPMAP':'',xs.normalMap?'#define USE_NORMALMAP':'',xs.normalMap&&xs.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',xs.specularMap?'#define USE_SPECULARMAP':'',xs.roughnessMap?'#define USE_ROUGHNESSMAP':'',xs.metalnessMap?'#define USE_METALNESSMAP':'',xs.alphaMap?'#define USE_ALPHAMAP':'',xs.vertexColors?'#define USE_COLOR':'',xs.gradientMap?'#define USE_GRADIENTMAP':'',xs.flatShading?'#define FLAT_SHADED':'',xs.doubleSided?'#define DOUBLE_SIDED':'',xs.flipSided?'#define FLIP_SIDED':'',xs.shadowMapEnabled?'#define USE_SHADOWMAP':'',xs.shadowMapEnabled?'#define '+Ss:'',xs.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',xs.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',xs.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',xs.logarithmicDepthBuffer&&(vs.isWebGL2||us.get('EXT_frag_depth'))?'#define USE_LOGDEPTHBUF_EXT':'',xs.envMap&&(vs.isWebGL2||us.get('EXT_shader_texture_lod'))?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;',xs.toneMapping===ar?'':'#define TONE_MAPPING',xs.toneMapping===ar?'':Xo.tonemapping_pars_fragment,xs.toneMapping===ar?'':wt('toneMapping',xs.toneMapping),xs.dithering?'#define DITHERING':'',xs.outputEncoding||xs.mapEncoding||xs.matcapEncoding||xs.envMapEncoding||xs.emissiveMapEncoding?Xo.encodings_pars_fragment:'',xs.mapEncoding?St('mapTexelToLinear',xs.mapEncoding):'',xs.matcapEncoding?St('matcapTexelToLinear',xs.matcapEncoding):'',xs.envMapEncoding?St('envMapTexelToLinear',xs.envMapEncoding):'',xs.emissiveMapEncoding?St('emissiveMapTexelToLinear',xs.emissiveMapEncoding):'',xs.outputEncoding?Lt('linearToOutputTexel',xs.outputEncoding):'',xs.depthPacking?'#define DEPTH_PACKING '+gs.depthPacking:'','\n'].filter(Ct).join('\n')),bs=zt(bs),bs=Et(bs,xs),bs=Dt(bs,xs),Ms=zt(Ms),Ms=Et(Ms,xs),Ms=Dt(Ms,xs),bs=It(bs),Ms=It(Ms),vs.isWebGL2&&!gs.isRawShaderMaterial){var Is=!1,Ns=/^\s*#version\s+300\s+es\s*\n/;gs.isShaderMaterial&&null!==bs.match(Ns)&&null!==Ms.match(Ns)&&(Is=!0,bs=bs.replace(Ns,''),Ms=Ms.replace(Ns,'')),Ds=['#version 300 es\n','#define attribute in','#define varying out','#define texture2D texture'].join('\n')+'\n'+Ds,zs=['#version 300 es\n','#define varying in',Is?'':'out highp vec4 pc_fragColor;',Is?'':'#define gl_FragColor pc_fragColor','#define gl_FragDepthEXT gl_FragDepth','#define texture2D texture','#define textureCube texture','#define texture2DProj textureProj','#define texture2DLodEXT textureLod','#define texture2DProjLodEXT textureProjLod','#define textureCubeLodEXT textureLod','#define texture2DGradEXT textureGrad','#define texture2DProjGradEXT textureProjGrad','#define textureCubeGradEXT textureGrad'].join('\n')+'\n'+zs}var Us=Ds+bs,Rs=zs+Ms,Fs=bt(_s,35633,Us),Bs=bt(_s,35632,Rs);_s.attachShader(Es,Fs),_s.attachShader(Es,Bs),void 0===gs.index0AttributeName?!0===xs.morphTargets&&_s.bindAttribLocation(Es,0,'position'):_s.bindAttribLocation(Es,0,gs.index0AttributeName),_s.linkProgram(Es);var Vs=_s.getProgramInfoLog(Es).trim(),Os=_s.getShaderInfoLog(Fs).trim(),Gs=_s.getShaderInfoLog(Bs).trim(),ks=!0,Ws=!0;if(!1===_s.getProgramParameter(Es,35714))ks=!1;else if(''!==Vs);else(''===Os||''===Gs)&&(Ws=!1);Ws&&(this.diagnostics={runnable:ks,material:gs,programLog:Vs,vertexShader:{log:Os,prefix:Ds},fragmentShader:{log:Gs,prefix:zs}}),_s.deleteShader(Fs),_s.deleteShader(Bs);var Hs;this.getUniforms=function(){return void 0==Hs&&(Hs=new _t(_s,Es,ms)),Hs};var Xs;return this.getAttributes=function(){return void 0==Xs&&(Xs=At(_s,Es)),Xs},this.destroy=function(){_s.deleteProgram(Es),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return this.getUniforms()}},attributes:{get:function(){return this.getAttributes()}}}),this.name=hs.name,this.id=ls++,this.code=fs,this.usedTimes=1,this.program=Es,this.vertexShader=Fs,this.fragmentShader=Bs,this}function Ut(ms,us,fs){function gs(ys){var bs=ys.skeleton,Ms=bs.bones;if(fs.floatVertexTextures)return 1024;var Ss=fs.maxVertexUniforms,Ls=Math.floor((Ss-20)/4),ws=Math.min(Ls,Ms.length);return ws<Ms.length?0:ws}function hs(ys,bs){var Ms;return ys?ys.isTexture?Ms=ys.encoding:ys.isWebGLRenderTarget&&(Ms=ys.texture.encoding):Ms=vi,Ms===vi&&bs&&(Ms=yi),Ms}var xs=[],vs={MeshDepthMaterial:'depth',MeshDistanceMaterial:'distanceRGBA',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'phong',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',MeshMatcapMaterial:'matcap',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points',ShadowMaterial:'shadow',SpriteMaterial:'sprite'},_s=['precision','supportsVertexTextures','map','mapEncoding','matcap','matcapEncoding','envMap','envMapMode','envMapEncoding','lightMap','aoMap','emissiveMap','emissiveMapEncoding','bumpMap','normalMap','objectSpaceNormalMap','displacementMap','specularMap','roughnessMap','metalnessMap','gradientMap','alphaMap','combine','vertexColors','fog','useFog','fogExp','flatShading','sizeAttenuation','logarithmicDepthBuffer','skinning','maxBones','useVertexTexture','morphTargets','morphNormals','maxMorphTargets','maxMorphNormals','premultipliedAlpha','numDirLights','numPointLights','numSpotLights','numHemiLights','numRectAreaLights','shadowMapEnabled','shadowMapType','toneMapping','physicallyCorrectLights','alphaTest','doubleSided','flipSided','numClippingPlanes','numClipIntersection','depthPacking','dithering'];this.getParameters=function(ys,bs,Ms,Ss,Ls,ws,Ts){var Ps=vs[ys.type],As=Ts.isSkinnedMesh?gs(Ts):0,Cs=fs.precision;if(null!==ys.precision&&(Cs=fs.getMaxPrecision(ys.precision),Cs!==ys.precision));var Es=ms.getRenderTarget(),Ds={shaderID:Ps,precision:Cs,supportsVertexTextures:fs.vertexTextures,outputEncoding:hs(Es?Es.texture:null,ms.gammaOutput),map:!!ys.map,mapEncoding:hs(ys.map,ms.gammaInput),matcap:!!ys.matcap,matcapEncoding:hs(ys.matcap,ms.gammaInput),envMap:!!ys.envMap,envMapMode:ys.envMap&&ys.envMap.mapping,envMapEncoding:hs(ys.envMap,ms.gammaInput),envMapCubeUV:!!ys.envMap&&(ys.envMap.mapping===fr||ys.envMap.mapping===gr),lightMap:!!ys.lightMap,aoMap:!!ys.aoMap,emissiveMap:!!ys.emissiveMap,emissiveMapEncoding:hs(ys.emissiveMap,ms.gammaInput),bumpMap:!!ys.bumpMap,normalMap:!!ys.normalMap,objectSpaceNormalMap:ys.normalMapType===1,displacementMap:!!ys.displacementMap,roughnessMap:!!ys.roughnessMap,metalnessMap:!!ys.metalnessMap,specularMap:!!ys.specularMap,alphaMap:!!ys.alphaMap,gradientMap:!!ys.gradientMap,combine:ys.combine,vertexColors:ys.vertexColors,fog:!!Ss,useFog:ys.fog,fogExp:Ss&&Ss.isFogExp2,flatShading:ys.flatShading,sizeAttenuation:ys.sizeAttenuation,logarithmicDepthBuffer:fs.logarithmicDepthBuffer,skinning:ys.skinning&&0<As,maxBones:As,useVertexTexture:fs.floatVertexTextures,morphTargets:ys.morphTargets,morphNormals:ys.morphNormals,maxMorphTargets:ms.maxMorphTargets,maxMorphNormals:ms.maxMorphNormals,numDirLights:bs.directional.length,numPointLights:bs.point.length,numSpotLights:bs.spot.length,numRectAreaLights:bs.rectArea.length,numHemiLights:bs.hemi.length,numClippingPlanes:Ls,numClipIntersection:ws,dithering:ys.dithering,shadowMapEnabled:ms.shadowMap.enabled&&Ts.receiveShadow&&0<Ms.length,shadowMapType:ms.shadowMap.type,toneMapping:ms.toneMapping,physicallyCorrectLights:ms.physicallyCorrectLights,premultipliedAlpha:ys.premultipliedAlpha,alphaTest:ys.alphaTest,doubleSided:ys.side===_a,flipSided:ys.side===xa,depthPacking:ys.depthPacking!==void 0&&ys.depthPacking};return Ds},this.getProgramCode=function(ys,bs){var Ms=[];if(bs.shaderID?Ms.push(bs.shaderID):(Ms.push(ys.fragmentShader),Ms.push(ys.vertexShader)),void 0!==ys.defines)for(var Ss in ys.defines)Ms.push(Ss),Ms.push(ys.defines[Ss]);for(var Ls=0;Ls<_s.length;Ls++)Ms.push(bs[_s[Ls]]);return Ms.push(ys.onBeforeCompile.toString()),Ms.push(ms.gammaOutput),Ms.push(ms.gammaFactor),Ms.join()},this.acquireProgram=function(ys,bs,Ms,Ss){for(var ws=0,Ts=xs.length,Ls,Ps;ws<Ts;ws++)if(Ps=xs[ws],Ps.code===Ss){Ls=Ps,++Ls.usedTimes;break}return void 0===Ls&&(Ls=new Nt(ms,us,Ss,ys,bs,Ms,fs),xs.push(Ls)),Ls},this.releaseProgram=function(ys){if(0==--ys.usedTimes){var bs=xs.indexOf(ys);xs[bs]=xs[xs.length-1],xs.pop(),ys.destroy()}},this.programs=xs}function Rt(){var hs=new WeakMap;return{get:function(xs){var vs=hs.get(xs);return void 0===vs&&(vs={},hs.set(xs,vs)),vs},remove:function(xs){hs.delete(xs)},update:function(xs,vs,_s){hs.get(xs)[vs]=_s},dispose:function(){hs=new WeakMap}}}function Ft(ms,us){return ms.renderOrder===us.renderOrder?ms.program&&us.program&&ms.program!==us.program?ms.program.id-us.program.id:ms.material.id===us.material.id?ms.z===us.z?ms.id-us.id:ms.z-us.z:ms.material.id-us.material.id:ms.renderOrder-us.renderOrder}function Bt(ms,us){return ms.renderOrder===us.renderOrder?ms.z===us.z?ms.id-us.id:us.z-ms.z:ms.renderOrder-us.renderOrder}function Vt(){function us(bs,Ms,Ss,Ls,ws){var Ts=xs[vs];return void 0===Ts?(Ts={id:bs.id,object:bs,geometry:Ms,material:Ss,program:Ss.program,renderOrder:bs.renderOrder,z:Ls,group:ws},xs[vs]=Ts):(Ts.id=bs.id,Ts.object=bs,Ts.geometry=Ms,Ts.material=Ss,Ts.program=Ss.program,Ts.renderOrder=bs.renderOrder,Ts.z=Ls,Ts.group=ws),vs++,Ts}var xs=[],vs=0,_s=[],ys=[];return{opaque:_s,transparent:ys,init:function(){vs=0,_s.length=0,ys.length=0},push:function(bs,Ms,Ss,Ls,ws){var Ts=us(bs,Ms,Ss,Ls,ws);(!0===Ss.transparent?ys:_s).push(Ts)},unshift:function(bs,Ms,Ss,Ls,ws){var Ts=us(bs,Ms,Ss,Ls,ws);(!0===Ss.transparent?ys:_s).unshift(Ts)},sort:function(){1<_s.length&&_s.sort(Ft),1<ys.length&&ys.sort(Bt)}}}function Ot(){var fs={};return{get:function(gs,hs){var xs=fs[gs.id],vs;return void 0===xs?(vs=new Vt,fs[gs.id]={},fs[gs.id][hs.id]=vs):(vs=xs[hs.id],void 0==vs&&(vs=new Vt,xs[hs.id]=vs)),vs},dispose:function(){fs={}}}}function Gt(){var ms={};return{get:function(us){if(void 0!==ms[us.id])return ms[us.id];var fs;switch(us.type){case'DirectionalLight':fs={direction:new T,color:new F,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new M};break;case'SpotLight':fs={position:new T,direction:new T,color:new F,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new M};break;case'PointLight':fs={position:new T,color:new F,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new M,shadowCameraNear:1,shadowCameraFar:1e3};break;case'HemisphereLight':fs={direction:new T,skyColor:new F,groundColor:new F};break;case'RectAreaLight':fs={color:new F,position:new T,halfWidth:new T,halfHeight:new T};}return ms[us.id]=fs,fs}}}function kt(){var us=new Gt,fs={id:ds++,hash:{stateID:-1,directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,shadowsLength:-1},ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},gs=new T,hs=new S,xs=new S;return{setup:function(vs,_s,ys){for(var bs=0,Ms=0,Ss=0,Ls=0,ws=0,Ts=0,Ps=0,As=0,Cs=ys.matrixWorldInverse,Es=0,Ds=vs.length;Es<Ds;Es++){var zs=vs[Es],Is=zs.color,Ns=zs.intensity,Us=zs.distance,Rs=zs.shadow&&zs.shadow.map?zs.shadow.map.texture:null;if(zs.isAmbientLight)bs+=Is.r*Ns,Ms+=Is.g*Ns,Ss+=Is.b*Ns;else if(zs.isDirectionalLight){var Fs=us.get(zs);if(Fs.color.copy(zs.color).multiplyScalar(zs.intensity),Fs.direction.setFromMatrixPosition(zs.matrixWorld),gs.setFromMatrixPosition(zs.target.matrixWorld),Fs.direction.sub(gs),Fs.direction.transformDirection(Cs),Fs.shadow=zs.castShadow,zs.castShadow){var Bs=zs.shadow;Fs.shadowBias=Bs.bias,Fs.shadowRadius=Bs.radius,Fs.shadowMapSize=Bs.mapSize}fs.directionalShadowMap[Ls]=Rs,fs.directionalShadowMatrix[Ls]=zs.shadow.matrix,fs.directional[Ls]=Fs,Ls++}else if(zs.isSpotLight){var Fs=us.get(zs);if(Fs.position.setFromMatrixPosition(zs.matrixWorld),Fs.position.applyMatrix4(Cs),Fs.color.copy(Is).multiplyScalar(Ns),Fs.distance=Us,Fs.direction.setFromMatrixPosition(zs.matrixWorld),gs.setFromMatrixPosition(zs.target.matrixWorld),Fs.direction.sub(gs),Fs.direction.transformDirection(Cs),Fs.coneCos=Math.cos(zs.angle),Fs.penumbraCos=Math.cos(zs.angle*(1-zs.penumbra)),Fs.decay=zs.decay,Fs.shadow=zs.castShadow,zs.castShadow){var Bs=zs.shadow;Fs.shadowBias=Bs.bias,Fs.shadowRadius=Bs.radius,Fs.shadowMapSize=Bs.mapSize}fs.spotShadowMap[Ts]=Rs,fs.spotShadowMatrix[Ts]=zs.shadow.matrix,fs.spot[Ts]=Fs,Ts++}else if(zs.isRectAreaLight){var Fs=us.get(zs);Fs.color.copy(Is).multiplyScalar(Ns),Fs.position.setFromMatrixPosition(zs.matrixWorld),Fs.position.applyMatrix4(Cs),xs.identity(),hs.copy(zs.matrixWorld),hs.premultiply(Cs),xs.extractRotation(hs),Fs.halfWidth.set(0.5*zs.width,0,0),Fs.halfHeight.set(0,0.5*zs.height,0),Fs.halfWidth.applyMatrix4(xs),Fs.halfHeight.applyMatrix4(xs),fs.rectArea[Ps]=Fs,Ps++}else if(zs.isPointLight){var Fs=us.get(zs);if(Fs.position.setFromMatrixPosition(zs.matrixWorld),Fs.position.applyMatrix4(Cs),Fs.color.copy(zs.color).multiplyScalar(zs.intensity),Fs.distance=zs.distance,Fs.decay=zs.decay,Fs.shadow=zs.castShadow,zs.castShadow){var Bs=zs.shadow;Fs.shadowBias=Bs.bias,Fs.shadowRadius=Bs.radius,Fs.shadowMapSize=Bs.mapSize,Fs.shadowCameraNear=Bs.camera.near,Fs.shadowCameraFar=Bs.camera.far}fs.pointShadowMap[ws]=Rs,fs.pointShadowMatrix[ws]=zs.shadow.matrix,fs.point[ws]=Fs,ws++}else if(zs.isHemisphereLight){var Fs=us.get(zs);Fs.direction.setFromMatrixPosition(zs.matrixWorld),Fs.direction.transformDirection(Cs),Fs.direction.normalize(),Fs.skyColor.copy(zs.color).multiplyScalar(Ns),Fs.groundColor.copy(zs.groundColor).multiplyScalar(Ns),fs.hemi[As]=Fs,As++}}fs.ambient[0]=bs,fs.ambient[1]=Ms,fs.ambient[2]=Ss,fs.directional.length=Ls,fs.spot.length=Ts,fs.rectArea.length=Ps,fs.point.length=ws,fs.hemi.length=As,fs.hash.stateID=fs.id,fs.hash.directionalLength=Ls,fs.hash.pointLength=ws,fs.hash.spotLength=Ts,fs.hash.rectAreaLength=Ps,fs.hash.hemiLength=As,fs.hash.shadowsLength=_s.length},state:fs}}function Wt(){var hs=new kt,xs=[],vs=[];return{init:function(){xs.length=0,vs.length=0},state:{lightsArray:xs,shadowsArray:vs,lights:hs},setupLights:function(ys){hs.setup(xs,vs,ys)},pushLight:function(ys){xs.push(ys)},pushShadow:function(ys){vs.push(ys)}}}function Ht(){var fs={};return{get:function(gs,hs){var xs;return void 0===fs[gs.id]?(xs=new Wt,fs[gs.id]={},fs[gs.id][hs.id]=xs):void 0===fs[gs.id][hs.id]?(xs=new Wt,fs[gs.id][hs.id]=xs):xs=fs[gs.id][hs.id],xs},dispose:function(){fs={}}}}function Xt(ms,us,fs){this.width=ms,this.height=us,this.scissor=new B(0,0,ms,us),this.scissorTest=!1,this.viewport=new B(0,0,ms,us),fs=fs||{},this.texture=new A(void 0,void 0,fs.wrapS,fs.wrapT,fs.magFilter,fs.minFilter,fs.format,fs.type,fs.anisotropy,fs.encoding),this.texture.generateMipmaps=fs.generateMipmaps!==void 0&&fs.generateMipmaps,this.texture.minFilter=fs.minFilter===void 0?Sr:fs.minFilter,this.depthBuffer=!(fs.depthBuffer!==void 0)||fs.depthBuffer,this.stencilBuffer=!(fs.stencilBuffer!==void 0)||fs.stencilBuffer,this.depthTexture=fs.depthTexture===void 0?null:fs.depthTexture}function jt(ms){xe.call(this),this.type='MeshDepthMaterial',this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(ms)}function qt(ms){xe.call(this),this.type='MeshDistanceMaterial',this.referencePosition=new T,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(ms)}function Yt(ms,us,fs){function gs(Vs,Os,Gs,ks,Ws,Hs){var Xs=Vs.geometry,js=null,qs=Ts,Ys=Vs.customDepthMaterial;if(Gs&&(qs=Ps,Ys=Vs.customDistanceMaterial),!Ys){var Zs=!1;if(Os.morphTargets&&(Xs&&Xs.isBufferGeometry?Zs=Xs.morphAttributes&&Xs.morphAttributes.position&&0<Xs.morphAttributes.position.length:Xs&&Xs.isGeometry&&(Zs=Xs.morphTargets&&0<Xs.morphTargets.length)),Vs.isSkinnedMesh&&!1===Os.skinning);var Js=Vs.isSkinnedMesh&&Os.skinning,Qs=0;Zs&&(Qs|=Ss),Js&&(Qs|=Ls),js=qs[Qs]}else js=Ys;if(ms.localClippingEnabled&&!0===Os.clipShadows&&0!==Os.clippingPlanes.length){var Ks=js.uuid,$s=Os.uuid,el=As[Ks];void 0===el&&(el={},As[Ks]=el);var al=el[$s];void 0===al&&(al=js.clone(),el[$s]=al),js=al}return js.visible=Os.visible,js.wireframe=Os.wireframe,js.side=null==Os.shadowSide?Cs[Os.side]:Os.shadowSide,js.clipShadows=Os.clipShadows,js.clippingPlanes=Os.clippingPlanes,js.clipIntersection=Os.clipIntersection,js.wireframeLinewidth=Os.wireframeLinewidth,js.linewidth=Os.linewidth,Gs&&js.isMeshDistanceMaterial&&(js.referencePosition.copy(ks),js.nearDistance=Ws,js.farDistance=Hs),js}function hs(Vs,Os,Gs,ks){if(!1!==Vs.visible){var Ws=Vs.layers.test(Os.layers);if(Ws&&(Vs.isMesh||Vs.isLine||Vs.isPoints)&&Vs.castShadow&&(!Vs.frustumCulled||xs.intersectsObject(Vs))){Vs.modelViewMatrix.multiplyMatrices(Gs.matrixWorldInverse,Vs.matrixWorld);var Hs=us.update(Vs),Xs=Vs.material;if(Array.isArray(Xs))for(var js=Hs.groups,qs=0,Ys=js.length;qs<Ys;qs++){var Zs=js[qs],Js=Xs[Zs.materialIndex];if(Js&&Js.visible){var Qs=gs(Vs,Js,ks,Ms,Gs.near,Gs.far);ms.renderBufferDirect(Gs,null,Hs,Qs,Vs,Zs)}}else if(Xs.visible){var Qs=gs(Vs,Xs,ks,Ms,Gs.near,Gs.far);ms.renderBufferDirect(Gs,null,Hs,Qs,Vs,null)}}for(var Ks=Vs.children,$s=0,el=Ks.length;$s<el;$s++)hs(Ks[$s],Os,Gs,ks)}}for(var xs=new N,vs=new S,_s=new M,ys=new M(fs,fs),bs=new T,Ms=new T,Ss=1,Ls=2,Ts=[,,,,],Ps=[,,,,],As={},Cs={0:xa,1:ha,2:_a},Es=[new T(1,0,0),new T(-1,0,0),new T(0,0,1),new T(0,0,-1),new T(0,1,0),new T(0,-1,0)],Ds=[new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,0,1),new T(0,0,-1)],zs=[new B,new B,new B,new B,new B,new B],Is=0;Is!==(Ss|Ls)+1;++Is){var Ns=0!=(Is&Ss),Us=0!=(Is&Ls),Rs=new jt({depthPacking:3201,morphTargets:Ns,skinning:Us});Ts[Is]=Rs;var Fs=new qt({morphTargets:Ns,skinning:Us});Ps[Is]=Fs}var Bs=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=fa,this.render=function(Vs,Os,Gs){if(!1!==Bs.enabled&&(!1!==Bs.autoUpdate||!1!==Bs.needsUpdate)&&0!==Vs.length){var ks=ms.context,Ws=ms.state;Ws.disable(3042),Ws.buffers.color.setClear(1,1,1,1),Ws.buffers.depth.setTest(!0),Ws.setScissorTest(!1);for(var Xs=0,js=Vs.length,Hs;Xs<js;Xs++){var qs=Vs[Xs],Ys=qs.shadow,Zs=qs&&qs.isPointLight;if(void 0!==Ys){var Js=Ys.camera;if(_s.copy(Ys.mapSize),_s.min(ys),Zs){var Qs=_s.x,Ks=_s.y;zs[0].set(2*Qs,Ks,Qs,Ks),zs[1].set(0,Ks,Qs,Ks),zs[2].set(3*Qs,Ks,Qs,Ks),zs[3].set(Qs,Ks,Qs,Ks),zs[4].set(3*Qs,0,Qs,Ks),zs[5].set(Qs,0,Qs,Ks),_s.x*=4,_s.y*=2}if(null===Ys.map){Ys.map=new Xt(_s.x,_s.y,{minFilter:yr,magFilter:yr,format:Or}),Ys.map.texture.name=qs.name+'.shadowMap',Js.updateProjectionMatrix()}Ys.isSpotLightShadow&&Ys.update(qs);var el=Ys.map,al=Ys.matrix;Ms.setFromMatrixPosition(qs.matrixWorld),Js.position.copy(Ms),Zs?(Hs=6,al.makeTranslation(-Ms.x,-Ms.y,-Ms.z)):(Hs=1,bs.setFromMatrixPosition(qs.target.matrixWorld),Js.lookAt(bs),Js.updateMatrixWorld(),al.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1),al.multiply(Js.projectionMatrix),al.multiply(Js.matrixWorldInverse)),ms.setRenderTarget(el),ms.clear();for(var rl=0;rl<Hs;rl++){if(Zs){bs.copy(Js.position),bs.add(Es[rl]),Js.up.copy(Ds[rl]),Js.lookAt(bs),Js.updateMatrixWorld();var nl=zs[rl];Ws.viewport(nl)}vs.multiplyMatrices(Js.projectionMatrix,Js.matrixWorldInverse),xs.setFromMatrix(vs),hs(Os,Gs,Js,Zs)}}}Bs.needsUpdate=!1}}}function Zt(ms,us,fs,gs){function _s(Cl,El,Dl){var zl=new Uint8Array(4),Il=ms.createTexture();ms.bindTexture(Cl,Il),ms.texParameteri(Cl,10241,9728),ms.texParameteri(Cl,10240,9728);for(var Nl=0;Nl<Dl;Nl++)ms.texImage2D(El+Nl,0,6408,1,1,0,6408,5121,zl);return Il}function Ms(Cl,El){if(qs[Cl]=1,0===Ys[Cl]&&(ms.enableVertexAttribArray(Cl),Ys[Cl]=1),Zs[Cl]!==El){var Dl=gs.isWebGL2?ms:us.get('ANGLE_instanced_arrays');Dl[gs.isWebGL2?'vertexAttribDivisor':'vertexAttribDivisorANGLE'](Cl,El),Zs[Cl]=El}}function Ls(Cl){!0!==Js[Cl]&&(ms.enable(Cl),Js[Cl]=!0)}function ws(Cl){!1!==Js[Cl]&&(ms.disable(Cl),Js[Cl]=!1)}function As(Cl,El,Dl,zl,Il,Nl,Ul,Rl){if(Cl===Ma)return void($s&&(ws(3042),$s=!1));if($s||(Ls(3042),$s=!0),Cl!==5){if(Cl!==el||Rl!==dl){if((al!==Aa||ol!==Aa)&&(ms.blendEquation(32774),al=Aa,ol=Aa),Rl)switch(Cl){case Sa:ms.blendFuncSeparate(1,771,1,771);break;case La:ms.blendFunc(1,1);break;case wa:ms.blendFuncSeparate(0,0,769,771);break;case Ta:ms.blendFuncSeparate(0,768,0,770);break;default:}else switch(Cl){case Sa:ms.blendFuncSeparate(770,771,1,771);break;case La:ms.blendFunc(770,1);break;case wa:ms.blendFunc(0,769);break;case Ta:ms.blendFunc(0,768);break;default:}rl=null,nl=null,sl=null,ll=null,el=Cl,dl=Rl}return}Il=Il||El,Nl=Nl||Dl,Ul=Ul||zl,(El!==al||Il!==ol)&&(ms.blendEquationSeparate(fs.convert(El),fs.convert(Il)),al=El,ol=Il),(Dl!==rl||zl!==nl||Nl!==sl||Ul!==ll)&&(ms.blendFuncSeparate(fs.convert(Dl),fs.convert(zl),fs.convert(Nl),fs.convert(Ul)),rl=Dl,nl=zl,sl=Nl,ll=Ul),el=Cl,dl=null}function Es(Cl){cl!==Cl&&(Cl?ms.frontFace(2304):ms.frontFace(2305),cl=Cl)}function Ds(Cl){Cl===0?ws(2884):(Ls(2884),Cl!==ul&&(Cl===ma?ms.cullFace(1029):Cl===2?ms.cullFace(1028):ms.cullFace(1032))),ul=Cl}function Is(Cl,El,Dl){Cl?(Ls(32823),(xl!==El||_l!==Dl)&&(ms.polygonOffset(El,Dl),xl=El,_l=Dl)):ws(32823)}function Us(Cl){void 0===Cl&&(Cl=33984+yl-1),Ll!==Cl&&(ms.activeTexture(Cl),Ll=Cl)}var Ws=new function(){var Cl=!1,El=new B,Dl=null,zl=new B(0,0,0,0);return{setMask:function(Il){Dl===Il||Cl||(ms.colorMask(Il,Il,Il,Il),Dl=Il)},setLocked:function(Il){Cl=Il},setClear:function(Il,Nl,Ul,Rl,Fl){!0===Fl&&(Il*=Rl,Nl*=Rl,Ul*=Rl),El.set(Il,Nl,Ul,Rl),!1===zl.equals(El)&&(ms.clearColor(Il,Nl,Ul,Rl),zl.copy(El))},reset:function(){Cl=!1,Dl=null,zl.set(-1,0,0,0)}}},Hs=new function(){var Cl=!1,El=null,Dl=null,zl=null;return{setTest:function(Il){Il?Ls(2929):ws(2929)},setMask:function(Il){El===Il||Cl||(ms.depthMask(Il),El=Il)},setFunc:function(Il){Dl!==Il&&(Il?Il===0?ms.depthFunc(512):Il===1?ms.depthFunc(519):Il===2?ms.depthFunc(513):Il===Ya?ms.depthFunc(515):Il===4?ms.depthFunc(514):Il===5?ms.depthFunc(518):Il===6?ms.depthFunc(516):Il===7?ms.depthFunc(517):ms.depthFunc(515):ms.depthFunc(515),Dl=Il)},setLocked:function(Il){Cl=Il},setClear:function(Il){zl!==Il&&(ms.clearDepth(Il),zl=Il)},reset:function(){Cl=!1,El=null,Dl=null,zl=null}}},Xs=new function(){var Cl=!1,El=null,Dl=null,zl=null,Il=null,Nl=null,Ul=null,Rl=null,Fl=null;return{setTest:function(Bl){Bl?Ls(2960):ws(2960)},setMask:function(Bl){El===Bl||Cl||(ms.stencilMask(Bl),El=Bl)},setFunc:function(Bl,Vl,Ol){(Dl!==Bl||zl!==Vl||Il!==Ol)&&(ms.stencilFunc(Bl,Vl,Ol),Dl=Bl,zl=Vl,Il=Ol)},setOp:function(Bl,Vl,Ol){(Nl!==Bl||Ul!==Vl||Rl!==Ol)&&(ms.stencilOp(Bl,Vl,Ol),Nl=Bl,Ul=Vl,Rl=Ol)},setLocked:function(Bl){Cl=Bl},setClear:function(Bl){Fl!==Bl&&(ms.clearStencil(Bl),Fl=Bl)},reset:function(){Cl=!1,El=null,Dl=null,zl=null,Il=null,Nl=null,Ul=null,Rl=null,Fl=null}}},js=ms.getParameter(34921),qs=new Uint8Array(js),Ys=new Uint8Array(js),Zs=new Uint8Array(js),Js={},Qs=null,Ks=null,$s=null,el=null,al=null,rl=null,nl=null,ol=null,sl=null,ll=null,dl=!1,cl=null,ul=null,hl=null,xl=null,_l=null,yl=ms.getParameter(35661),bl=!1,Ml=0,Sl=ms.getParameter(7938);-1===Sl.indexOf('WebGL')?-1!==Sl.indexOf('OpenGL ES')&&(Ml=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(Sl)[1]),bl=2<=Ml):(Ml=parseFloat(/^WebGL\ ([0-9])/.exec(Sl)[1]),bl=1<=Ml);var Ll=null,wl={},Tl=new B,Pl=new B,Al={};return Al[3553]=_s(3553,3553,1),Al[34067]=_s(34067,34069,6),Ws.setClear(0,0,0,1),Hs.setClear(1),Xs.setClear(0),Ls(2929),Hs.setFunc(Ya),Es(!1),Ds(ma),Ls(2884),As(Ma),{buffers:{color:Ws,depth:Hs,stencil:Xs},initAttributes:function(){for(var Cl=0,El=qs.length;Cl<El;Cl++)qs[Cl]=0},enableAttribute:function(Cl){Ms(Cl,0)},enableAttributeAndDivisor:Ms,disableUnusedAttributes:function(){for(var Cl=0,El=Ys.length;Cl!==El;++Cl)Ys[Cl]!==qs[Cl]&&(ms.disableVertexAttribArray(Cl),Ys[Cl]=0)},enable:Ls,disable:ws,getCompressedTextureFormats:function(){if(null===Qs&&(Qs=[],us.get('WEBGL_compressed_texture_pvrtc')||us.get('WEBGL_compressed_texture_s3tc')||us.get('WEBGL_compressed_texture_etc1')||us.get('WEBGL_compressed_texture_astc')))for(var Cl=ms.getParameter(34467),El=0;El<Cl.length;El++)Qs.push(Cl[El]);return Qs},useProgram:function(Cl){return Ks!==Cl&&(ms.useProgram(Cl),Ks=Cl,!0)},setBlending:As,setMaterial:function(Cl,El){Cl.side===_a?ws(2884):Ls(2884);var Dl=Cl.side===xa;El&&(Dl=!Dl),Es(Dl),Cl.blending===Sa&&!1===Cl.transparent?As(Ma):As(Cl.blending,Cl.blendEquation,Cl.blendSrc,Cl.blendDst,Cl.blendEquationAlpha,Cl.blendSrcAlpha,Cl.blendDstAlpha,Cl.premultipliedAlpha),Hs.setFunc(Cl.depthFunc),Hs.setTest(Cl.depthTest),Hs.setMask(Cl.depthWrite),Ws.setMask(Cl.colorWrite),Is(Cl.polygonOffset,Cl.polygonOffsetFactor,Cl.polygonOffsetUnits)},setFlipSided:Es,setCullFace:Ds,setLineWidth:function(Cl){Cl!==hl&&(bl&&ms.lineWidth(Cl),hl=Cl)},setPolygonOffset:Is,setScissorTest:function(Cl){Cl?Ls(3089):ws(3089)},activeTexture:Us,bindTexture:function(Cl,El){null===Ll&&Us();var Dl=wl[Ll];void 0===Dl&&(Dl={type:void 0,texture:void 0},wl[Ll]=Dl),(Dl.type!==Cl||Dl.texture!==El)&&(ms.bindTexture(Cl,El||Al[Cl]),Dl.type=Cl,Dl.texture=El)},compressedTexImage2D:function(){try{ms.compressedTexImage2D.apply(ms,arguments)}catch(Cl){}},texImage2D:function(){try{ms.texImage2D.apply(ms,arguments)}catch(Cl){}},texImage3D:function(){try{ms.texImage3D.apply(ms,arguments)}catch(Cl){}},scissor:function(Cl){!1===Tl.equals(Cl)&&(ms.scissor(Cl.x,Cl.y,Cl.z,Cl.w),Tl.copy(Cl))},viewport:function(Cl){!1===Pl.equals(Cl)&&(ms.viewport(Cl.x,Cl.y,Cl.z,Cl.w),Pl.copy(Cl))},reset:function(){for(var Cl=0;Cl<Ys.length;Cl++)1===Ys[Cl]&&(ms.disableVertexAttribArray(Cl),Ys[Cl]=0);Js={},Qs=null,Ll=null,wl={},Ks=null,el=null,cl=null,ul=null,Ws.reset(),Hs.reset(),Xs.reset()}}}function Jt(ms,us,fs,gs,hs,xs,vs){function _s(js,qs){if(js.width>qs||js.height>qs){if('data'in js)return;var Ys=qs/Math.max(js.width,js.height),Zs=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');Zs.width=Math.floor(js.width*Ys),Zs.height=Math.floor(js.height*Ys);var Js=Zs.getContext('2d');return Js.drawImage(js,0,0,js.width,js.height,0,0,Zs.width,Zs.height),Zs}return js}function ys(js){return Ai.isPowerOfTwo(js.width)&&Ai.isPowerOfTwo(js.height)}function bs(js){if(js instanceof HTMLImageElement||js instanceof HTMLCanvasElement||js instanceof ImageBitmap){void 0===Xs&&(Xs=document.createElementNS('http://www.w3.org/1999/xhtml','canvas')),Xs.width=Ai.floorPowerOfTwo(js.width),Xs.height=Ai.floorPowerOfTwo(js.height);var qs=Xs.getContext('2d');return qs.drawImage(js,0,0,Xs.width,Xs.height),Xs}return js}function Ms(js){return!hs.isWebGL2&&(js.wrapS!==xr||js.wrapT!==xr||js.minFilter!==yr&&js.minFilter!==Sr)}function Ss(js,qs){return js.generateMipmaps&&qs&&js.minFilter!==yr&&js.minFilter!==Sr}function Ls(js,qs,Ys,Zs){ms.generateMipmap(js);var Js=gs.get(qs);Js.__maxMipLevel=Math.log(Math.max(Ys,Zs))*Math.LOG2E}function ws(js,qs){if(!hs.isWebGL2)return js;if(6403===js){if(5126===qs)return 33326;if(5131===qs)return 33325;if(5121===qs)return 33321}if(6407===js){if(5126===qs)return 34837;if(5131===qs)return 34843;if(5121===qs)return 32849}if(6408===js){if(5126===qs)return 34836;if(5131===qs)return 34842;if(5121===qs)return 32856}return js}function Ts(js){return js===yr||js===br||js===Mr?9728:9729}function Ps(js){var qs=js.target;qs.removeEventListener('dispose',Ps),Cs(qs),qs.isVideoTexture&&delete Hs[qs.id],vs.memory.textures--}function As(js){var qs=js.target;qs.removeEventListener('dispose',As),Es(qs),vs.memory.textures--}function Cs(js){var qs=gs.get(js);if(js.image&&qs.__image__webglTextureCube)ms.deleteTexture(qs.__image__webglTextureCube);else{if(qs.__webglInit===void 0)return;ms.deleteTexture(qs.__webglTexture)}gs.remove(js)}function Es(js){var qs=gs.get(js),Ys=gs.get(js.texture);if(js){if(void 0!==Ys.__webglTexture&&ms.deleteTexture(Ys.__webglTexture),js.depthTexture&&js.depthTexture.dispose(),js.isWebGLRenderTargetCube)for(var Zs=0;6>Zs;Zs++)ms.deleteFramebuffer(qs.__webglFramebuffer[Zs]),qs.__webglDepthbuffer&&ms.deleteRenderbuffer(qs.__webglDepthbuffer[Zs]);else ms.deleteFramebuffer(qs.__webglFramebuffer),qs.__webglDepthbuffer&&ms.deleteRenderbuffer(qs.__webglDepthbuffer);gs.remove(js.texture),gs.remove(js)}}function Ds(js,qs){var Ys=gs.get(js);if(js.isVideoTexture&&Ws(js),0<js.version&&Ys.__version!==js.version){var Zs=js.image;if(void 0===Zs);else if(!1===Zs.complete);else return void Rs(Ys,js,qs)}fs.activeTexture(33984+qs),fs.bindTexture(3553,Ys.__webglTexture)}function Us(js,qs,Ys){var Zs;if(Ys)ms.texParameteri(js,10242,xs.convert(qs.wrapS)),ms.texParameteri(js,10243,xs.convert(qs.wrapT)),ms.texParameteri(js,10240,xs.convert(qs.magFilter)),ms.texParameteri(js,10241,xs.convert(qs.minFilter));else{if(ms.texParameteri(js,10242,33071),ms.texParameteri(js,10243,33071),qs.wrapS!==xr||qs.wrapT!==xr);if(ms.texParameteri(js,10240,Ts(qs.magFilter)),ms.texParameteri(js,10241,Ts(qs.minFilter)),qs.minFilter!==yr&&qs.minFilter!==Sr);}if(Zs=us.get('EXT_texture_filter_anisotropic'),Zs){if(qs.type===zr&&null===us.get('OES_texture_float_linear'))return;if(qs.type===Ir&&null===(hs.isWebGL2||us.get('OES_texture_half_float_linear')))return;(1<qs.anisotropy||gs.get(qs).__currentAnisotropy)&&(ms.texParameterf(js,Zs.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(qs.anisotropy,hs.getMaxAnisotropy())),gs.get(qs).__currentAnisotropy=qs.anisotropy)}}function Rs(js,qs,Ys){var Zs;Zs=qs.isDataTexture3D?32879:3553,js.__webglInit===void 0&&(js.__webglInit=!0,qs.addEventListener('dispose',Ps),js.__webglTexture=ms.createTexture(),vs.memory.textures++),fs.activeTexture(33984+Ys),fs.bindTexture(Zs,js.__webglTexture),ms.pixelStorei(37440,qs.flipY),ms.pixelStorei(37441,qs.premultiplyAlpha),ms.pixelStorei(3317,qs.unpackAlignment);var Js=_s(qs.image,hs.maxTextureSize);Ms(qs)&&!1===ys(Js)&&(Js=bs(Js));var Qs=ys(Js),Ks=xs.convert(qs.format),$s=xs.convert(qs.type),el=ws(Ks,$s);Us(Zs,qs,Qs);var rl=qs.mipmaps,al;if(qs.isDepthTexture){if(el=6402,qs.type===zr){if(!hs.isWebGL2)throw new Error;el=36012}else hs.isWebGL2&&(el=33189);qs.format===Wr&&6402===el&&qs.type!==Cr&&qs.type!==Dr&&(qs.type=Cr,$s=xs.convert(qs.type)),qs.format===Hr&&(el=34041,qs.type!==Fr&&(qs.type=Fr,$s=xs.convert(qs.type))),fs.texImage2D(3553,0,el,Js.width,Js.height,0,Ks,$s,null)}else if(qs.isDataTexture){if(0<rl.length&&Qs){for(var nl=0,ol=rl.length;nl<ol;nl++)al=rl[nl],fs.texImage2D(3553,nl,el,al.width,al.height,0,Ks,$s,al.data);qs.generateMipmaps=!1,js.__maxMipLevel=rl.length-1}else fs.texImage2D(3553,0,el,Js.width,Js.height,0,Ks,$s,Js.data),js.__maxMipLevel=0;}else if(qs.isCompressedTexture){for(var nl=0,ol=rl.length;nl<ol;nl++)if(al=rl[nl],qs.format===Or||qs.format===Vr)fs.texImage2D(3553,nl,el,al.width,al.height,0,Ks,$s,al.data);else if(-1<fs.getCompressedTextureFormats().indexOf(Ks))fs.compressedTexImage2D(3553,nl,el,al.width,al.height,0,al.data);else;js.__maxMipLevel=rl.length-1}else if(qs.isDataTexture3D)fs.texImage3D(32879,0,el,Js.width,Js.height,Js.depth,0,Ks,$s,Js.data),js.__maxMipLevel=0;else if(0<rl.length&&Qs){for(var nl=0,ol=rl.length;nl<ol;nl++)al=rl[nl],fs.texImage2D(3553,nl,el,Ks,$s,al);qs.generateMipmaps=!1,js.__maxMipLevel=rl.length-1}else fs.texImage2D(3553,0,el,Ks,$s,Js),js.__maxMipLevel=0;Ss(qs,Qs)&&Ls(3553,qs,Js.width,Js.height),js.__version=qs.version,qs.onUpdate&&qs.onUpdate(qs)}function Fs(js,qs,Ys,Zs){var Js=xs.convert(qs.texture.format),Qs=xs.convert(qs.texture.type),Ks=ws(Js,Qs);fs.texImage2D(Zs,0,Ks,qs.width,qs.height,0,Js,Qs,null),ms.bindFramebuffer(36160,js),ms.framebufferTexture2D(36160,Ys,Zs,gs.get(qs.texture).__webglTexture,0),ms.bindFramebuffer(36160,null)}function Bs(js,qs){ms.bindRenderbuffer(36161,js),qs.depthBuffer&&!qs.stencilBuffer?(ms.renderbufferStorage(36161,33189,qs.width,qs.height),ms.framebufferRenderbuffer(36160,36096,36161,js)):qs.depthBuffer&&qs.stencilBuffer?(ms.renderbufferStorage(36161,34041,qs.width,qs.height),ms.framebufferRenderbuffer(36160,33306,36161,js)):ms.renderbufferStorage(36161,32854,qs.width,qs.height),ms.bindRenderbuffer(36161,null)}function Vs(js,qs){var Ys=qs&&qs.isWebGLRenderTargetCube;if(Ys)throw new Error;if(ms.bindFramebuffer(36160,js),!(qs.depthTexture&&qs.depthTexture.isDepthTexture))throw new Error;gs.get(qs.depthTexture).__webglTexture&&qs.depthTexture.image.width===qs.width&&qs.depthTexture.image.height===qs.height||(qs.depthTexture.image.width=qs.width,qs.depthTexture.image.height=qs.height,qs.depthTexture.needsUpdate=!0),Ds(qs.depthTexture,0);var Zs=gs.get(qs.depthTexture).__webglTexture;if(qs.depthTexture.format===Wr)ms.framebufferTexture2D(36160,36096,3553,Zs,0);else if(qs.depthTexture.format===Hr)ms.framebufferTexture2D(36160,33306,3553,Zs,0);else throw new Error}function Os(js){var qs=gs.get(js),Ys=!0===js.isWebGLRenderTargetCube;if(js.depthTexture){if(Ys)throw new Error;Vs(qs.__webglFramebuffer,js)}else if(Ys){qs.__webglDepthbuffer=[];for(var Zs=0;6>Zs;Zs++)ms.bindFramebuffer(36160,qs.__webglFramebuffer[Zs]),qs.__webglDepthbuffer[Zs]=ms.createRenderbuffer(),Bs(qs.__webglDepthbuffer[Zs],js)}else ms.bindFramebuffer(36160,qs.__webglFramebuffer),qs.__webglDepthbuffer=ms.createRenderbuffer(),Bs(qs.__webglDepthbuffer,js);ms.bindFramebuffer(36160,null)}function Ws(js){var qs=js.id,Ys=vs.render.frame;Hs[qs]!==Ys&&(Hs[qs]=Ys,js.update())}var Hs={},Xs;this.setTexture2D=Ds,this.setTexture3D=function(js,qs){var Ys=gs.get(js);return 0<js.version&&Ys.__version!==js.version?void Rs(Ys,js,qs):void(fs.activeTexture(33984+qs),fs.bindTexture(32879,Ys.__webglTexture))},this.setTextureCube=function(js,qs){var Ys=gs.get(js);if(6===js.image.length)if(0<js.version&&Ys.__version!==js.version){Ys.__image__webglTextureCube||(js.addEventListener('dispose',Ps),Ys.__image__webglTextureCube=ms.createTexture(),vs.memory.textures++),fs.activeTexture(33984+qs),fs.bindTexture(34067,Ys.__image__webglTextureCube),ms.pixelStorei(37440,js.flipY);for(var Zs=js&&js.isCompressedTexture,Js=js.image[0]&&js.image[0].isDataTexture,Qs=[],Ks=0;6>Ks;Ks++)Qs[Ks]=Zs||Js?Js?js.image[Ks].image:js.image[Ks]:_s(js.image[Ks],hs.maxCubemapSize);var $s=Qs[0],el=ys($s),al=xs.convert(js.format),rl=xs.convert(js.type),nl=ws(al,rl);Us(34067,js,el);for(var Ks=0;6>Ks;Ks++)if(!Zs)Js?fs.texImage2D(34069+Ks,0,nl,Qs[Ks].width,Qs[Ks].height,0,al,rl,Qs[Ks].data):fs.texImage2D(34069+Ks,0,nl,al,rl,Qs[Ks]);else for(var sl=Qs[Ks].mipmaps,ll=0,dl=sl.length,ol;ll<dl;ll++)if(ol=sl[ll],js.format===Or||js.format===Vr)fs.texImage2D(34069+Ks,ll,nl,ol.width,ol.height,0,al,rl,ol.data);else if(-1<fs.getCompressedTextureFormats().indexOf(al))fs.compressedTexImage2D(34069+Ks,ll,nl,ol.width,ol.height,0,ol.data);else;Ys.__maxMipLevel=Zs?sl.length-1:0,Ss(js,el)&&Ls(34067,js,$s.width,$s.height),Ys.__version=js.version,js.onUpdate&&js.onUpdate(js)}else fs.activeTexture(33984+qs),fs.bindTexture(34067,Ys.__image__webglTextureCube)},this.setTextureCubeDynamic=function(js,qs){fs.activeTexture(33984+qs),fs.bindTexture(34067,gs.get(js).__webglTexture)},this.setupRenderTarget=function(js){var qs=gs.get(js),Ys=gs.get(js.texture);js.addEventListener('dispose',As),Ys.__webglTexture=ms.createTexture(),vs.memory.textures++;var Zs=!0===js.isWebGLRenderTargetCube,Js=ys(js);if(Zs){qs.__webglFramebuffer=[];for(var Qs=0;6>Qs;Qs++)qs.__webglFramebuffer[Qs]=ms.createFramebuffer()}else qs.__webglFramebuffer=ms.createFramebuffer();if(Zs){fs.bindTexture(34067,Ys.__webglTexture),Us(34067,js.texture,Js);for(var Qs=0;6>Qs;Qs++)Fs(qs.__webglFramebuffer[Qs],js,36064,34069+Qs);Ss(js.texture,Js)&&Ls(34067,js.texture,js.width,js.height),fs.bindTexture(34067,null)}else fs.bindTexture(3553,Ys.__webglTexture),Us(3553,js.texture,Js),Fs(qs.__webglFramebuffer,js,36064,3553),Ss(js.texture,Js)&&Ls(3553,js.texture,js.width,js.height),fs.bindTexture(3553,null);js.depthBuffer&&Os(js)},this.updateRenderTargetMipmap=function(js){var qs=js.texture,Ys=ys(js);if(Ss(qs,Ys)){var Zs=js.isWebGLRenderTargetCube?34067:3553,Js=gs.get(qs).__webglTexture;fs.bindTexture(Zs,Js),Ls(Zs,qs,js.width,js.height),fs.bindTexture(Zs,null)}}}function Qt(ms,us,fs){return{convert:function(hs){var xs;if(hs===hr)return 10497;if(hs===xr)return 33071;if(hs===_r)return 33648;if(hs===yr)return 9728;if(hs===br)return 9984;if(hs===Mr)return 9986;if(hs===Sr)return 9729;if(hs===1007)return 9985;if(hs===wr)return 9987;if(hs===Tr)return 5121;if(hs===1017)return 32819;if(hs===1018)return 32820;if(hs===1019)return 33635;if(hs===1010)return 5120;if(hs===1011)return 5122;if(hs===Cr)return 5123;if(hs===1013)return 5124;if(hs===Dr)return 5125;if(hs===zr)return 5126;if(hs===Ir){if(fs.isWebGL2)return 5131;if(xs=us.get('OES_texture_half_float'),null!==xs)return xs.HALF_FLOAT_OES}if(hs===1021)return 6406;if(hs===Vr)return 6407;if(hs===Or)return 6408;if(hs===1024)return 6409;if(hs===1025)return 6410;if(hs===Wr)return 6402;if(hs===Hr)return 34041;if(hs===1028)return 6403;if(hs===Aa)return 32774;if(hs===101)return 32778;if(hs===102)return 32779;if(hs===200)return 0;if(hs===201)return 1;if(hs===202)return 768;if(hs===203)return 769;if(hs===Fa)return 770;if(hs===Ba)return 771;if(hs===206)return 772;if(hs===207)return 773;if(hs===208)return 774;if(hs===209)return 775;if(hs===210)return 776;if((hs===jr||hs===qr||hs===Yr||hs===Zr)&&(xs=us.get('WEBGL_compressed_texture_s3tc'),null!==xs)){if(hs===jr)return xs.COMPRESSED_RGB_S3TC_DXT1_EXT;if(hs===qr)return xs.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(hs===Yr)return xs.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(hs===Zr)return xs.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((hs===Jr||hs===Qr||hs===Kr||hs===$r)&&(xs=us.get('WEBGL_compressed_texture_pvrtc'),null!==xs)){if(hs===Jr)return xs.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(hs===Qr)return xs.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(hs===Kr)return xs.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(hs===$r)return xs.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(hs===36196&&(xs=us.get('WEBGL_compressed_texture_etc1'),null!==xs))return xs.COMPRESSED_RGB_ETC1_WEBGL;if((hs===37808||hs===37809||hs===37810||hs===37811||hs===37812||hs===37813||hs===37814||hs===37815||hs===37816||hs===37817||hs===37818||hs===37819||hs===37820||hs===37821)&&(xs=us.get('WEBGL_compressed_texture_astc'),null!==xs))return hs;if(hs===Da||hs===za){if(fs.isWebGL2){if(hs===Da)return 32775;if(hs===za)return 32776}if(xs=us.get('EXT_blend_minmax'),null!==xs){if(hs===Da)return xs.MIN_EXT;if(hs===za)return xs.MAX_EXT}}if(hs===Fr){if(fs.isWebGL2)return 34042;if(xs=us.get('WEBGL_depth_texture'),null!==xs)return xs.UNSIGNED_INT_24_8_WEBGL}return 0}}}function Kt(){X.call(this),this.type='Group'}function $t(){X.call(this),this.type='Camera',this.matrixWorldInverse=new S,this.projectionMatrix=new S,this.projectionMatrixInverse=new S}function ea(ms,us,fs,gs){$t.call(this),this.type='PerspectiveCamera',this.fov=ms===void 0?50:ms,this.zoom=1,this.near=fs===void 0?0.1:fs,this.far=gs===void 0?2e3:gs,this.focus=10,this.aspect=us===void 0?1:us,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function ta(ms){ea.call(this),this.cameras=ms||[]}function aa(ms,us,fs){cs.setFromMatrixPosition(us.matrixWorld),ps.setFromMatrixPosition(fs.matrixWorld);var gs=cs.distanceTo(ps),hs=us.projectionMatrix.elements,xs=fs.projectionMatrix.elements,vs=hs[14]/(hs[10]-1),_s=hs[14]/(hs[10]+1),ys=(hs[9]+1)/hs[5],bs=(hs[9]-1)/hs[5],Ms=(hs[8]-1)/hs[0],Ss=(xs[8]+1)/xs[0],Ts=gs/(-Ms+Ss),Ps=Ts*-Ms;us.matrixWorld.decompose(ms.position,ms.quaternion,ms.scale),ms.translateX(Ps),ms.translateZ(Ts),ms.matrixWorld.compose(ms.position,ms.quaternion,ms.scale),ms.matrixWorldInverse.getInverse(ms.matrixWorld);var As=vs+Ts,Cs=_s+Ts;ms.projectionMatrix.makePerspective(vs*Ms-Ps,vs*Ss+(gs-Ps),ys*_s/Cs*As,bs*_s/Cs*As,As,Cs)}function ra(ms){function us(){return null!==vs&&!0===vs.isPresenting}function fs(){if(us()){var Rs=vs.getEyeParameters('left'),Fs=Rs.renderWidth*Ls,Bs=Rs.renderHeight*Ls;Is=ms.getPixelRatio(),zs=ms.getSize(),ms.setDrawingBufferSize(2*Fs,Bs,1),Us.start()}else xs.enabled&&ms.setDrawingBufferSize(zs.width,zs.height,Is),Us.stop()}function gs(Rs){for(var Fs=navigator.getGamepads&&navigator.getGamepads(),Bs=0,Vs=0,Os=Fs.length,Gs;Bs<Os;Bs++)if(Gs=Fs[Bs],Gs&&('Daydream Controller'===Gs.id||'Gear VR Controller'===Gs.id||'Oculus Go Controller'===Gs.id||'OpenVR Gamepad'===Gs.id||Gs.id.startsWith('Oculus Touch')||Gs.id.startsWith('Spatial Controller'))){if(Vs===Rs)return Gs;Vs++}}function hs(){for(var Rs=0;Rs<bs.length;Rs++){var Fs=bs[Rs],Bs=gs(Rs);if(Bs!==void 0&&Bs.pose!==void 0){if(null===Bs.pose)return;var Vs=Bs.pose;!1===Vs.hasPosition&&Fs.position.set(0.2,-0.6,-0.05),null!==Vs.position&&Fs.position.fromArray(Vs.position),null!==Vs.orientation&&Fs.quaternion.fromArray(Vs.orientation),Fs.matrix.compose(Fs.position,Fs.quaternion,Fs.scale),Fs.matrix.premultiply(Ms),Fs.matrix.decompose(Fs.position,Fs.quaternion,Fs.scale),Fs.matrixWorldNeedsUpdate=!0,Fs.visible=!0;var Os='Daydream Controller'===Bs.id?0:1;Ns[Rs]!==Bs.buttons[Os].pressed&&(Ns[Rs]=Bs.buttons[Os].pressed,!0===Ns[Rs]?Fs.dispatchEvent({type:'selectstart'}):(Fs.dispatchEvent({type:'selectend'}),Fs.dispatchEvent({type:'select'})))}else Fs.visible=!1}}var xs=this,vs=null,_s=null,ys=null,bs=[],Ms=new S,Ss=new S,Ls=1,ws='stage';'undefined'!=typeof window&&'VRFrameData'in window&&(_s=new window.VRFrameData,window.addEventListener('vrdisplaypresentchange',fs,!1));var Ts=new S,Ps=new L,As=new T,Cs=new ea;Cs.bounds=new B(0,0,0.5,1),Cs.layers.enable(1);var Es=new ea;Es.bounds=new B(0.5,0,0.5,1),Es.layers.enable(2);var Ds=new ta([Cs,Es]);Ds.layers.enable(1),Ds.layers.enable(2);var zs,Is,Ns=[];this.enabled=!1,this.getController=function(Rs){var Fs=bs[Rs];return void 0===Fs&&(Fs=new Kt,Fs.matrixAutoUpdate=!1,Fs.visible=!1,bs[Rs]=Fs),Fs},this.getDevice=function(){return vs},this.setDevice=function(Rs){Rs!==void 0&&(vs=Rs),Us.setContext(Rs)},this.setFramebufferScaleFactor=function(Rs){Ls=Rs},this.setFrameOfReferenceType=function(Rs){ws=Rs},this.setPoseTarget=function(Rs){Rs!==void 0&&(ys=Rs)},this.getCamera=function(Rs){var Fs='stage'===ws?1.6:0;if(null===vs)return Rs.position.set(0,Fs,0),Rs;if(vs.depthNear=Rs.near,vs.depthFar=Rs.far,vs.getFrameData(_s),'stage'===ws){var Bs=vs.stageParameters;Bs?Ms.fromArray(Bs.sittingToStandingTransform):Ms.makeTranslation(0,Fs,0)}var Vs=_s.pose,Os=null===ys?Rs:ys;if(Os.matrix.copy(Ms),Os.matrix.decompose(Os.position,Os.quaternion,Os.scale),null!==Vs.orientation&&(Ps.fromArray(Vs.orientation),Os.quaternion.multiply(Ps)),null!==Vs.position&&(Ps.setFromRotationMatrix(Ms),As.fromArray(Vs.position),As.applyQuaternion(Ps),Os.position.add(As)),Os.updateMatrixWorld(),!1===vs.isPresenting)return Rs;Cs.near=Rs.near,Es.near=Rs.near,Cs.far=Rs.far,Es.far=Rs.far,Cs.matrixWorldInverse.fromArray(_s.leftViewMatrix),Es.matrixWorldInverse.fromArray(_s.rightViewMatrix),Ss.getInverse(Ms),'stage'===ws&&(Cs.matrixWorldInverse.multiply(Ss),Es.matrixWorldInverse.multiply(Ss));var Gs=Os.parent;null!==Gs&&(Ts.getInverse(Gs.matrixWorld),Cs.matrixWorldInverse.multiply(Ts),Es.matrixWorldInverse.multiply(Ts)),Cs.matrixWorld.getInverse(Cs.matrixWorldInverse),Es.matrixWorld.getInverse(Es.matrixWorldInverse),Cs.projectionMatrix.fromArray(_s.leftProjectionMatrix),Es.projectionMatrix.fromArray(_s.rightProjectionMatrix),aa(Ds,Cs,Es);var ks=vs.getLayers();if(ks.length){var Ws=ks[0];null!==Ws.leftBounds&&4===Ws.leftBounds.length&&Cs.bounds.fromArray(Ws.leftBounds),null!==Ws.rightBounds&&4===Ws.rightBounds.length&&Es.bounds.fromArray(Ws.rightBounds)}return hs(),Ds},this.getStandingMatrix=function(){return Ms},this.isPresenting=us;var Us=new V;this.setAnimationLoop=function(Rs){Us.setAnimationLoop(Rs)},this.submitFrame=function(){us()&&vs.submitFrame()},this.dispose=function(){'undefined'!=typeof window&&window.removeEventListener('vrdisplaypresentchange',fs)}}function ia(ms){function us(){return null!==ys&&null!==Ms}function fs(zs){var Is=ws[Ts.indexOf(zs.inputSource)];Is&&Is.dispatchEvent({type:zs.type})}function gs(){ms.setFramebuffer(null),Ds.stop()}function hs(zs,Is){null===Is?zs.matrixWorld.copy(zs.matrix):zs.matrixWorld.multiplyMatrices(Is.matrixWorld,zs.matrix),zs.matrixWorldInverse.getInverse(zs.matrixWorld)}var vs=ms.context,_s=null,ys=null,bs=1,Ms=null,Ss='stage',Ls=null,ws=[],Ts=[],Ps=new ea;Ps.layers.enable(1),Ps.viewport=new B;var As=new ea;As.layers.enable(2),As.viewport=new B;var Cs=new ta([Ps,As]);Cs.layers.enable(1),Cs.layers.enable(2),this.enabled=!1,this.getController=function(zs){var Is=ws[zs];return void 0===Is&&(Is=new Kt,Is.matrixAutoUpdate=!1,Is.visible=!1,ws[zs]=Is),Is},this.getDevice=function(){return _s},this.setDevice=function(zs){zs!==void 0&&(_s=zs),zs instanceof XRDevice&&vs.setCompatibleXRDevice(zs)},this.setFramebufferScaleFactor=function(zs){bs=zs},this.setFrameOfReferenceType=function(zs){Ss=zs},this.setSession=function(zs){ys=zs,null!=ys&&(ys.addEventListener('select',fs),ys.addEventListener('selectstart',fs),ys.addEventListener('selectend',fs),ys.addEventListener('end',gs),ys.baseLayer=new XRWebGLLayer(ys,vs,{framebufferScaleFactor:bs}),ys.requestFrameOfReference(Ss).then(function(Is){Ms=Is,ms.setFramebuffer(ys.baseLayer.framebuffer),Ds.setContext(ys),Ds.start()}),Ts=ys.getInputSources(),ys.addEventListener('inputsourceschange',function(){Ts=ys.getInputSources();for(var Is=0,Ns;Is<ws.length;Is++)Ns=ws[Is],Ns.userData.inputSource=Ts[Is]}))},this.getCamera=function(zs){if(us()){var Is=zs.parent,Ns=Cs.cameras;hs(Cs,Is);for(var Us=0;Us<Ns.length;Us++)hs(Ns[Us],Is);zs.matrixWorld.copy(Cs.matrixWorld);for(var Rs=zs.children,Us=0,Fs=Rs.length;Us<Fs;Us++)Rs[Us].updateMatrixWorld(!0);return aa(Cs,Ps,As),Cs}return zs},this.isPresenting=us;var Es=null,Ds=new V;Ds.setAnimationLoop(function(zs,Is){if(Ls=Is.getDevicePose(Ms),null!==Ls)for(var Ns=ys.baseLayer,Us=Is.views,Rs=0;Rs<Us.length;Rs++){var Fs=Us[Rs],Bs=Ns.getViewport(Fs),Vs=Ls.getViewMatrix(Fs),Os=Cs.cameras[Rs];Os.matrix.fromArray(Vs).getInverse(Os.matrix),Os.projectionMatrix.fromArray(Fs.projectionMatrix),Os.viewport.set(Bs.x,Bs.y,Bs.width,Bs.height),0===Rs&&Cs.matrix.copy(Os.matrix)}for(var Rs=0;Rs<ws.length;Rs++){var Gs=ws[Rs],ks=Ts[Rs];if(ks){var Ws=Is.getInputPose(ks,Ms);if(null!==Ws){'targetRay'in Ws?Gs.matrix.elements=Ws.targetRay.transformMatrix:'pointerMatrix'in Ws&&(Gs.matrix.elements=Ws.pointerMatrix),Gs.matrix.decompose(Gs.position,Gs.rotation,Gs.scale),Gs.visible=!0;continue}}Gs.visible=!1}Es&&Es(zs)}),this.setAnimationLoop=function(zs){Es=zs},this.dispose=function(){},this.getStandingMatrix=function(){return new THREE.Matrix4},this.submitFrame=function(){}}function oa(){X.call(this),this.type='Scene',this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function sa(ms,us,fs,gs){this.ray=new _e(ms,us),this.near=fs||0,this.far=gs||Infinity,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return this.Points}}})}function la(ms,us){return ms.distance-us.distance}function da(ms,us,fs,gs){if(!1!==ms.visible&&(ms.raycast(us,fs),!0===gs))for(var hs=ms.children,xs=0,vs=hs.length;xs<vs;xs++)da(hs[xs],us,fs,!0)}Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52)),Number.isInteger===void 0&&(Number.isInteger=function(ms){return'number'==typeof ms&&isFinite(ms)&&Math.floor(ms)===ms}),Math.sign===void 0&&(Math.sign=function(ms){return 0>ms?-1:0<ms?1:+ms}),!1=='name'in Function.prototype&&Object.defineProperty(Function.prototype,'name',{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),Object.assign===void 0&&function(){Object.assign=function(ms){if(ms===void 0||null===ms)throw new TypeError('Cannot convert undefined or null to object');for(var us=Object(ms),fs=1,gs;fs<arguments.length;fs++)if(gs=arguments[fs],void 0!==gs&&null!==gs)for(var hs in gs)Object.prototype.hasOwnProperty.call(gs,hs)&&(us[hs]=gs[hs]);return us}}();var ma=1,fa=1,ha=0,xa=1,_a=2,ba=0,Ma=0,Sa=1,La=2,wa=3,Ta=4,Aa=100,Da=103,za=104,Fa=204,Ba=205,Ya=3,$a=0,ar=0,rr=1,lr=300,dr=301,cr=302,mr=304,fr=306,gr=307,hr=1e3,xr=1001,_r=1002,yr=1003,br=1004,Mr=1005,Sr=1006,wr=1008,Tr=1009,Cr=1012,Dr=1014,zr=1015,Ir=1016,Fr=1020,Vr=1022,Or=1023,Wr=1026,Hr=1027,jr=33776,qr=33777,Yr=33778,Zr=33779,Jr=35840,Qr=35841,Kr=35842,$r=35843,gi=0,vi=3e3,yi=3007,Ai={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){for(var ms=[],us=0;256>us;us++)ms[us]=(16>us?'0':'')+us.toString(16);return function(){var gs=0|4294967295*Math.random(),hs=0|4294967295*Math.random(),xs=0|4294967295*Math.random(),vs=0|4294967295*Math.random(),_s=ms[255&gs]+ms[255&gs>>8]+ms[255&gs>>16]+ms[255&gs>>24]+'-'+ms[255&hs]+ms[255&hs>>8]+'-'+ms[64|15&hs>>16]+ms[255&hs>>24]+'-'+ms[128|63&xs]+ms[255&xs>>8]+'-'+ms[255&xs>>16]+ms[255&xs>>24]+ms[255&vs]+ms[255&vs>>8]+ms[255&vs>>16]+ms[255&vs>>24];return _s.toUpperCase()}}(),clamp:function(ms,us,fs){return Math.max(us,Math.min(fs,ms))},euclideanModulo:function(ms,us){return(ms%us+us)%us},mapLinear:function(ms,us,fs,gs,hs){return gs+(ms-us)*(hs-gs)/(fs-us)},lerp:function(ms,us,fs){return(1-fs)*ms+fs*us},smoothstep:function(ms,us,fs){return ms<=us?0:ms>=fs?1:(ms=(ms-us)/(fs-us),ms*ms*(3-2*ms))},smootherstep:function(ms,us,fs){return ms<=us?0:ms>=fs?1:(ms=(ms-us)/(fs-us),ms*ms*ms*(ms*(6*ms-15)+10))},randInt:function(ms,us){return ms+Math.floor(Math.random()*(us-ms+1))},randFloat:function(ms,us){return ms+Math.random()*(us-ms)},randFloatSpread:function(ms){return ms*(0.5-Math.random())},degToRad:function(ms){return ms*Ai.DEG2RAD},radToDeg:function(ms){return ms*Ai.RAD2DEG},isPowerOfTwo:function(ms){return 0==(ms&ms-1)&&0!==ms},ceilPowerOfTwo:function(ms){return Math.pow(2,Math.ceil(Math.log(ms)/Math.LN2))},floorPowerOfTwo:function(ms){return Math.pow(2,Math.floor(Math.log(ms)/Math.LN2))}};Object.assign(_.prototype,{addEventListener:function(ms,us){this._listeners===void 0&&(this._listeners={});var fs=this._listeners;fs[ms]===void 0&&(fs[ms]=[]),-1===fs[ms].indexOf(us)&&fs[ms].push(us)},hasEventListener:function(ms,us){if(this._listeners===void 0)return!1;var fs=this._listeners;return fs[ms]!==void 0&&-1!==fs[ms].indexOf(us)},removeEventListener:function(ms,us){if(void 0!==this._listeners){var fs=this._listeners,gs=fs[ms];if(void 0!==gs){var hs=gs.indexOf(us);-1!==hs&&gs.splice(hs,1)}}},dispatchEvent:function(ms){if(void 0!==this._listeners){var us=this._listeners,fs=us[ms.type];if(void 0!==fs){ms.target=this;for(var gs=fs.slice(0),hs=0,xs=gs.length;hs<xs;hs++)gs[hs].call(this,ms)}}}}),Object.defineProperties(M.prototype,{width:{get:function(){return this.x},set:function(ms){this.x=ms}},height:{get:function(){return this.y},set:function(ms){this.y=ms}}}),Object.assign(M.prototype,{isVector2:!0,set:function(ms,us){return this.x=ms,this.y=us,this},setScalar:function(ms){return this.x=ms,this.y=ms,this},setX:function(ms){return this.x=ms,this},setY:function(ms){return this.y=ms,this},setComponent:function(ms,us){switch(ms){case 0:this.x=us;break;case 1:this.y=us;break;default:throw new Error;}return this},getComponent:function(ms){switch(ms){case 0:return this.x;case 1:return this.y;default:throw new Error;}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(ms){return this.x=ms.x,this.y=ms.y,this},add:function(ms,us){return void 0===us?(this.x+=ms.x,this.y+=ms.y,this):this.addVectors(ms,us)},addScalar:function(ms){return this.x+=ms,this.y+=ms,this},addVectors:function(ms,us){return this.x=ms.x+us.x,this.y=ms.y+us.y,this},addScaledVector:function(ms,us){return this.x+=ms.x*us,this.y+=ms.y*us,this},sub:function(ms,us){return void 0===us?(this.x-=ms.x,this.y-=ms.y,this):this.subVectors(ms,us)},subScalar:function(ms){return this.x-=ms,this.y-=ms,this},subVectors:function(ms,us){return this.x=ms.x-us.x,this.y=ms.y-us.y,this},multiply:function(ms){return this.x*=ms.x,this.y*=ms.y,this},multiplyScalar:function(ms){return this.x*=ms,this.y*=ms,this},divide:function(ms){return this.x/=ms.x,this.y/=ms.y,this},divideScalar:function(ms){return this.multiplyScalar(1/ms)},applyMatrix3:function(ms){var us=this.x,fs=this.y,gs=ms.elements;return this.x=gs[0]*us+gs[3]*fs+gs[6],this.y=gs[1]*us+gs[4]*fs+gs[7],this},min:function(ms){return this.x=Math.min(this.x,ms.x),this.y=Math.min(this.y,ms.y),this},max:function(ms){return this.x=Math.max(this.x,ms.x),this.y=Math.max(this.y,ms.y),this},clamp:function(ms,us){return this.x=Math.max(ms.x,Math.min(us.x,this.x)),this.y=Math.max(ms.y,Math.min(us.y,this.y)),this},clampScalar:function(){var ms=new M,us=new M;return function(gs,hs){return ms.set(gs,gs),us.set(hs,hs),this.clamp(ms,us)}}(),clampLength:function(ms,us){var fs=this.length();return this.divideScalar(fs||1).multiplyScalar(Math.max(ms,Math.min(us,fs)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(ms){return this.x*ms.x+this.y*ms.y},cross:function(ms){return this.x*ms.y-this.y*ms.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var ms=Math.atan2(this.y,this.x);return 0>ms&&(ms+=2*Math.PI),ms},distanceTo:function(ms){return Math.sqrt(this.distanceToSquared(ms))},distanceToSquared:function(ms){var us=this.x-ms.x,fs=this.y-ms.y;return us*us+fs*fs},manhattanDistanceTo:function(ms){return Math.abs(this.x-ms.x)+Math.abs(this.y-ms.y)},setLength:function(ms){return this.normalize().multiplyScalar(ms)},lerp:function(ms,us){return this.x+=(ms.x-this.x)*us,this.y+=(ms.y-this.y)*us,this},lerpVectors:function(ms,us,fs){return this.subVectors(us,ms).multiplyScalar(fs).add(ms)},equals:function(ms){return ms.x===this.x&&ms.y===this.y},fromArray:function(ms,us){return void 0===us&&(us=0),this.x=ms[us],this.y=ms[us+1],this},toArray:function(ms,us){return void 0===ms&&(ms=[]),void 0===us&&(us=0),ms[us]=this.x,ms[us+1]=this.y,ms},fromBufferAttribute:function(ms,us,fs){if(void 0!==fs);return this.x=ms.getX(us),this.y=ms.getY(us),this},rotateAround:function(ms,us){var fs=Math.cos(us),gs=Math.sin(us),hs=this.x-ms.x,xs=this.y-ms.y;return this.x=hs*fs-xs*gs+ms.x,this.y=hs*gs+xs*fs+ms.y,this}}),Object.assign(S.prototype,{isMatrix4:!0,set:function(ms,us,fs,gs,hs,xs,vs,_s,ys,bs,Ms,Ss,Ls,ws,Ts,Ps){var As=this.elements;return As[0]=ms,As[4]=us,As[8]=fs,As[12]=gs,As[1]=hs,As[5]=xs,As[9]=vs,As[13]=_s,As[2]=ys,As[6]=bs,As[10]=Ms,As[14]=Ss,As[3]=Ls,As[7]=ws,As[11]=Ts,As[15]=Ps,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new S().fromArray(this.elements)},copy:function(ms){var us=this.elements,fs=ms.elements;return us[0]=fs[0],us[1]=fs[1],us[2]=fs[2],us[3]=fs[3],us[4]=fs[4],us[5]=fs[5],us[6]=fs[6],us[7]=fs[7],us[8]=fs[8],us[9]=fs[9],us[10]=fs[10],us[11]=fs[11],us[12]=fs[12],us[13]=fs[13],us[14]=fs[14],us[15]=fs[15],this},copyPosition:function(ms){var us=this.elements,fs=ms.elements;return us[12]=fs[12],us[13]=fs[13],us[14]=fs[14],this},extractBasis:function(ms,us,fs){return ms.setFromMatrixColumn(this,0),us.setFromMatrixColumn(this,1),fs.setFromMatrixColumn(this,2),this},makeBasis:function(ms,us,fs){return this.set(ms.x,us.x,fs.x,0,ms.y,us.y,fs.y,0,ms.z,us.z,fs.z,0,0,0,0,1),this},extractRotation:function(){var ms=new T;return function(fs){var gs=this.elements,hs=fs.elements,xs=1/ms.setFromMatrixColumn(fs,0).length(),vs=1/ms.setFromMatrixColumn(fs,1).length(),_s=1/ms.setFromMatrixColumn(fs,2).length();return gs[0]=hs[0]*xs,gs[1]=hs[1]*xs,gs[2]=hs[2]*xs,gs[3]=0,gs[4]=hs[4]*vs,gs[5]=hs[5]*vs,gs[6]=hs[6]*vs,gs[7]=0,gs[8]=hs[8]*_s,gs[9]=hs[9]*_s,gs[10]=hs[10]*_s,gs[11]=0,gs[12]=0,gs[13]=0,gs[14]=0,gs[15]=1,this}}(),makeRotationFromEuler:function(ms){!(ms&&ms.isEuler);var us=this.elements,fs=ms.x,gs=ms.y,hs=ms.z,xs=Math.cos(fs),vs=Math.sin(fs),_s=Math.cos(gs),ys=Math.sin(gs),bs=Math.cos(hs),Ms=Math.sin(hs);if('XYZ'===ms.order){var Ss=xs*bs,Ls=xs*Ms,ws=vs*bs,Ts=vs*Ms;us[0]=_s*bs,us[4]=-_s*Ms,us[8]=ys,us[1]=Ls+ws*ys,us[5]=Ss-Ts*ys,us[9]=-vs*_s,us[2]=Ts-Ss*ys,us[6]=ws+Ls*ys,us[10]=xs*_s}else if('YXZ'===ms.order){var Ps=_s*bs,As=_s*Ms,Cs=ys*bs,Es=ys*Ms;us[0]=Ps+Es*vs,us[4]=Cs*vs-As,us[8]=xs*ys,us[1]=xs*Ms,us[5]=xs*bs,us[9]=-vs,us[2]=As*vs-Cs,us[6]=Es+Ps*vs,us[10]=xs*_s}else if('ZXY'===ms.order){var Ps=_s*bs,As=_s*Ms,Cs=ys*bs,Es=ys*Ms;us[0]=Ps-Es*vs,us[4]=-xs*Ms,us[8]=Cs+As*vs,us[1]=As+Cs*vs,us[5]=xs*bs,us[9]=Es-Ps*vs,us[2]=-xs*ys,us[6]=vs,us[10]=xs*_s}else if('ZYX'===ms.order){var Ss=xs*bs,Ls=xs*Ms,ws=vs*bs,Ts=vs*Ms;us[0]=_s*bs,us[4]=ws*ys-Ls,us[8]=Ss*ys+Ts,us[1]=_s*Ms,us[5]=Ts*ys+Ss,us[9]=Ls*ys-ws,us[2]=-ys,us[6]=vs*_s,us[10]=xs*_s}else if('YZX'===ms.order){var Ds=xs*_s,zs=xs*ys,Is=vs*_s,Ns=vs*ys;us[0]=_s*bs,us[4]=Ns-Ds*Ms,us[8]=Is*Ms+zs,us[1]=Ms,us[5]=xs*bs,us[9]=-vs*bs,us[2]=-ys*bs,us[6]=zs*Ms+Is,us[10]=Ds-Ns*Ms}else if('XZY'===ms.order){var Ds=xs*_s,zs=xs*ys,Is=vs*_s,Ns=vs*ys;us[0]=_s*bs,us[4]=-Ms,us[8]=ys*bs,us[1]=Ds*Ms+Ns,us[5]=xs*bs,us[9]=zs*Ms-Is,us[2]=Is*Ms-zs,us[6]=vs*bs,us[10]=Ns*Ms+Ds}return us[3]=0,us[7]=0,us[11]=0,us[12]=0,us[13]=0,us[14]=0,us[15]=1,this},makeRotationFromQuaternion:function(){var ms=new T(0,0,0),us=new T(1,1,1);return function(gs){return this.compose(ms,gs,us)}}(),lookAt:function(){var ms=new T,us=new T,fs=new T;return function(hs,xs,vs){var _s=this.elements;return fs.subVectors(hs,xs),0===fs.lengthSq()&&(fs.z=1),fs.normalize(),ms.crossVectors(vs,fs),0===ms.lengthSq()&&(1===Math.abs(vs.z)?fs.x+=1e-4:fs.z+=1e-4,fs.normalize(),ms.crossVectors(vs,fs)),ms.normalize(),us.crossVectors(fs,ms),_s[0]=ms.x,_s[4]=us.x,_s[8]=fs.x,_s[1]=ms.y,_s[5]=us.y,_s[9]=fs.y,_s[2]=ms.z,_s[6]=us.z,_s[10]=fs.z,this}}(),multiply:function(ms,us){return void 0===us?this.multiplyMatrices(this,ms):this.multiplyMatrices(ms,us)},premultiply:function(ms){return this.multiplyMatrices(ms,this)},multiplyMatrices:function(ms,us){var fs=ms.elements,gs=us.elements,hs=this.elements,xs=fs[0],vs=fs[4],_s=fs[8],ys=fs[12],bs=fs[1],Ms=fs[5],Ss=fs[9],Ls=fs[13],ws=fs[2],Ts=fs[6],Ps=fs[10],As=fs[14],Cs=fs[3],Es=fs[7],Ds=fs[11],zs=fs[15],Is=gs[0],Ns=gs[4],Us=gs[8],Rs=gs[12],Fs=gs[1],Bs=gs[5],Vs=gs[9],Os=gs[13],Gs=gs[2],ks=gs[6],Ws=gs[10],Hs=gs[14],Xs=gs[3],js=gs[7],qs=gs[11],Ys=gs[15];return hs[0]=xs*Is+vs*Fs+_s*Gs+ys*Xs,hs[4]=xs*Ns+vs*Bs+_s*ks+ys*js,hs[8]=xs*Us+vs*Vs+_s*Ws+ys*qs,hs[12]=xs*Rs+vs*Os+_s*Hs+ys*Ys,hs[1]=bs*Is+Ms*Fs+Ss*Gs+Ls*Xs,hs[5]=bs*Ns+Ms*Bs+Ss*ks+Ls*js,hs[9]=bs*Us+Ms*Vs+Ss*Ws+Ls*qs,hs[13]=bs*Rs+Ms*Os+Ss*Hs+Ls*Ys,hs[2]=ws*Is+Ts*Fs+Ps*Gs+As*Xs,hs[6]=ws*Ns+Ts*Bs+Ps*ks+As*js,hs[10]=ws*Us+Ts*Vs+Ps*Ws+As*qs,hs[14]=ws*Rs+Ts*Os+Ps*Hs+As*Ys,hs[3]=Cs*Is+Es*Fs+Ds*Gs+zs*Xs,hs[7]=Cs*Ns+Es*Bs+Ds*ks+zs*js,hs[11]=Cs*Us+Es*Vs+Ds*Ws+zs*qs,hs[15]=Cs*Rs+Es*Os+Ds*Hs+zs*Ys,this},multiplyScalar:function(ms){var us=this.elements;return us[0]*=ms,us[4]*=ms,us[8]*=ms,us[12]*=ms,us[1]*=ms,us[5]*=ms,us[9]*=ms,us[13]*=ms,us[2]*=ms,us[6]*=ms,us[10]*=ms,us[14]*=ms,us[3]*=ms,us[7]*=ms,us[11]*=ms,us[15]*=ms,this},applyToBufferAttribute:function(){var ms=new T;return function(fs){for(var gs=0,hs=fs.count;gs<hs;gs++)ms.x=fs.getX(gs),ms.y=fs.getY(gs),ms.z=fs.getZ(gs),ms.applyMatrix4(this),fs.setXYZ(gs,ms.x,ms.y,ms.z);return fs}}(),determinant:function(){var ms=this.elements,us=ms[0],fs=ms[4],gs=ms[8],hs=ms[12],xs=ms[1],vs=ms[5],_s=ms[9],ys=ms[13],bs=ms[2],Ms=ms[6],Ss=ms[10],Ls=ms[14],ws=ms[3],Ts=ms[7],Ps=ms[11],As=ms[15];return ws*(+hs*_s*Ms-gs*ys*Ms-hs*vs*Ss+fs*ys*Ss+gs*vs*Ls-fs*_s*Ls)+Ts*(+us*_s*Ls-us*ys*Ss+hs*xs*Ss-gs*xs*Ls+gs*ys*bs-hs*_s*bs)+Ps*(+us*ys*Ms-us*vs*Ls-hs*xs*Ms+fs*xs*Ls+hs*vs*bs-fs*ys*bs)+As*(-gs*vs*bs-us*_s*Ms+us*vs*Ss+gs*xs*Ms-fs*xs*Ss+fs*_s*bs)},transpose:function(){var ms=this.elements,us;return us=ms[1],ms[1]=ms[4],ms[4]=us,us=ms[2],ms[2]=ms[8],ms[8]=us,us=ms[6],ms[6]=ms[9],ms[9]=us,us=ms[3],ms[3]=ms[12],ms[12]=us,us=ms[7],ms[7]=ms[13],ms[13]=us,us=ms[11],ms[11]=ms[14],ms[14]=us,this},setPosition:function(ms){var us=this.elements;return us[12]=ms.x,us[13]=ms.y,us[14]=ms.z,this},getInverse:function(ms,us){var fs=this.elements,gs=ms.elements,hs=gs[0],xs=gs[1],vs=gs[2],_s=gs[3],ys=gs[4],bs=gs[5],Ms=gs[6],Ss=gs[7],Ls=gs[8],ws=gs[9],Ts=gs[10],Ps=gs[11],As=gs[12],Cs=gs[13],Es=gs[14],Ds=gs[15],zs=ws*Es*Ss-Cs*Ts*Ss+Cs*Ms*Ps-bs*Es*Ps-ws*Ms*Ds+bs*Ts*Ds,Is=As*Ts*Ss-Ls*Es*Ss-As*Ms*Ps+ys*Es*Ps+Ls*Ms*Ds-ys*Ts*Ds,Ns=Ls*Cs*Ss-As*ws*Ss+As*bs*Ps-ys*Cs*Ps-Ls*bs*Ds+ys*ws*Ds,Us=As*ws*Ms-Ls*Cs*Ms-As*bs*Ts+ys*Cs*Ts+Ls*bs*Es-ys*ws*Es,Rs=hs*zs+xs*Is+vs*Ns+_s*Us;if(0==Rs){if(!0===us)throw new Error;else;return this.identity()}var Bs=1/Rs;return fs[0]=zs*Bs,fs[1]=(Cs*Ts*_s-ws*Es*_s-Cs*vs*Ps+xs*Es*Ps+ws*vs*Ds-xs*Ts*Ds)*Bs,fs[2]=(bs*Es*_s-Cs*Ms*_s+Cs*vs*Ss-xs*Es*Ss-bs*vs*Ds+xs*Ms*Ds)*Bs,fs[3]=(ws*Ms*_s-bs*Ts*_s-ws*vs*Ss+xs*Ts*Ss+bs*vs*Ps-xs*Ms*Ps)*Bs,fs[4]=Is*Bs,fs[5]=(Ls*Es*_s-As*Ts*_s+As*vs*Ps-hs*Es*Ps-Ls*vs*Ds+hs*Ts*Ds)*Bs,fs[6]=(As*Ms*_s-ys*Es*_s-As*vs*Ss+hs*Es*Ss+ys*vs*Ds-hs*Ms*Ds)*Bs,fs[7]=(ys*Ts*_s-Ls*Ms*_s+Ls*vs*Ss-hs*Ts*Ss-ys*vs*Ps+hs*Ms*Ps)*Bs,fs[8]=Ns*Bs,fs[9]=(As*ws*_s-Ls*Cs*_s-As*xs*Ps+hs*Cs*Ps+Ls*xs*Ds-hs*ws*Ds)*Bs,fs[10]=(ys*Cs*_s-As*bs*_s+As*xs*Ss-hs*Cs*Ss-ys*xs*Ds+hs*bs*Ds)*Bs,fs[11]=(Ls*bs*_s-ys*ws*_s-Ls*xs*Ss+hs*ws*Ss+ys*xs*Ps-hs*bs*Ps)*Bs,fs[12]=Us*Bs,fs[13]=(Ls*Cs*vs-As*ws*vs+As*xs*Ts-hs*Cs*Ts-Ls*xs*Es+hs*ws*Es)*Bs,fs[14]=(As*bs*vs-ys*Cs*vs-As*xs*Ms+hs*Cs*Ms+ys*xs*Es-hs*bs*Es)*Bs,fs[15]=(ys*ws*vs-Ls*bs*vs+Ls*xs*Ms-hs*ws*Ms-ys*xs*Ts+hs*bs*Ts)*Bs,this},scale:function(ms){var us=this.elements,fs=ms.x,gs=ms.y,hs=ms.z;return us[0]*=fs,us[4]*=gs,us[8]*=hs,us[1]*=fs,us[5]*=gs,us[9]*=hs,us[2]*=fs,us[6]*=gs,us[10]*=hs,us[3]*=fs,us[7]*=gs,us[11]*=hs,this},getMaxScaleOnAxis:function(){var ms=this.elements,us=ms[0]*ms[0]+ms[1]*ms[1]+ms[2]*ms[2],fs=ms[4]*ms[4]+ms[5]*ms[5]+ms[6]*ms[6],gs=ms[8]*ms[8]+ms[9]*ms[9]+ms[10]*ms[10];return Math.sqrt(Math.max(us,fs,gs))},makeTranslation:function(ms,us,fs){return this.set(1,0,0,ms,0,1,0,us,0,0,1,fs,0,0,0,1),this},makeRotationX:function(ms){var us=Math.cos(ms),fs=Math.sin(ms);return this.set(1,0,0,0,0,us,-fs,0,0,fs,us,0,0,0,0,1),this},makeRotationY:function(ms){var us=Math.cos(ms),fs=Math.sin(ms);return this.set(us,0,fs,0,0,1,0,0,-fs,0,us,0,0,0,0,1),this},makeRotationZ:function(ms){var us=Math.cos(ms),fs=Math.sin(ms);return this.set(us,-fs,0,0,fs,us,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(ms,us){var fs=Math.cos(us),gs=Math.sin(us),hs=1-fs,xs=ms.x,vs=ms.y,_s=ms.z,ys=hs*xs,bs=hs*vs;return this.set(ys*xs+fs,ys*vs-gs*_s,ys*_s+gs*vs,0,ys*vs+gs*_s,bs*vs+fs,bs*_s-gs*xs,0,ys*_s-gs*vs,bs*_s+gs*xs,hs*_s*_s+fs,0,0,0,0,1),this},makeScale:function(ms,us,fs){return this.set(ms,0,0,0,0,us,0,0,0,0,fs,0,0,0,0,1),this},makeShear:function(ms,us,fs){return this.set(1,us,fs,0,ms,1,fs,0,ms,us,1,0,0,0,0,1),this},compose:function(ms,us,fs){var gs=this.elements,hs=us._x,xs=us._y,vs=us._z,_s=us._w,ys=hs+hs,bs=xs+xs,Ms=vs+vs,Ss=hs*ys,Ls=hs*bs,ws=hs*Ms,Ts=xs*bs,Ps=xs*Ms,As=vs*Ms,Cs=_s*ys,Es=_s*bs,Ds=_s*Ms,zs=fs.x,Is=fs.y,Ns=fs.z;return gs[0]=(1-(Ts+As))*zs,gs[1]=(Ls+Ds)*zs,gs[2]=(ws-Es)*zs,gs[3]=0,gs[4]=(Ls-Ds)*Is,gs[5]=(1-(Ss+As))*Is,gs[6]=(Ps+Cs)*Is,gs[7]=0,gs[8]=(ws+Es)*Ns,gs[9]=(Ps-Cs)*Ns,gs[10]=(1-(Ss+Ts))*Ns,gs[11]=0,gs[12]=ms.x,gs[13]=ms.y,gs[14]=ms.z,gs[15]=1,this},decompose:function(){var ms=new T,us=new S;return function(gs,hs,xs){var vs=this.elements,_s=ms.set(vs[0],vs[1],vs[2]).length(),ys=ms.set(vs[4],vs[5],vs[6]).length(),bs=ms.set(vs[8],vs[9],vs[10]).length(),Ms=this.determinant();0>Ms&&(_s=-_s),gs.x=vs[12],gs.y=vs[13],gs.z=vs[14],us.copy(this);var Ss=1/_s,Ls=1/ys,ws=1/bs;return us.elements[0]*=Ss,us.elements[1]*=Ss,us.elements[2]*=Ss,us.elements[4]*=Ls,us.elements[5]*=Ls,us.elements[6]*=Ls,us.elements[8]*=ws,us.elements[9]*=ws,us.elements[10]*=ws,hs.setFromRotationMatrix(us),xs.x=_s,xs.y=ys,xs.z=bs,this}}(),makePerspective:function(ms,us,fs,gs,hs,xs){if(void 0===xs);var vs=this.elements;return vs[0]=2*hs/(us-ms),vs[4]=0,vs[8]=(us+ms)/(us-ms),vs[12]=0,vs[1]=0,vs[5]=2*hs/(fs-gs),vs[9]=(fs+gs)/(fs-gs),vs[13]=0,vs[2]=0,vs[6]=0,vs[10]=-(xs+hs)/(xs-hs),vs[14]=-2*xs*hs/(xs-hs),vs[3]=0,vs[7]=0,vs[11]=-1,vs[15]=0,this},makeOrthographic:function(ms,us,fs,gs,hs,xs){var vs=this.elements,_s=1/(us-ms),ys=1/(fs-gs),bs=1/(xs-hs);return vs[0]=2*_s,vs[4]=0,vs[8]=0,vs[12]=-((us+ms)*_s),vs[1]=0,vs[5]=2*ys,vs[9]=0,vs[13]=-((fs+gs)*ys),vs[2]=0,vs[6]=0,vs[10]=-2*bs,vs[14]=-((xs+hs)*bs),vs[3]=0,vs[7]=0,vs[11]=0,vs[15]=1,this},equals:function(ms){for(var us=this.elements,fs=ms.elements,gs=0;16>gs;gs++)if(us[gs]!==fs[gs])return!1;return!0},fromArray:function(ms,us){us===void 0&&(us=0);for(var fs=0;16>fs;fs++)this.elements[fs]=ms[fs+us];return this},toArray:function(ms,us){void 0===ms&&(ms=[]),void 0===us&&(us=0);var fs=this.elements;return ms[us]=fs[0],ms[us+1]=fs[1],ms[us+2]=fs[2],ms[us+3]=fs[3],ms[us+4]=fs[4],ms[us+5]=fs[5],ms[us+6]=fs[6],ms[us+7]=fs[7],ms[us+8]=fs[8],ms[us+9]=fs[9],ms[us+10]=fs[10],ms[us+11]=fs[11],ms[us+12]=fs[12],ms[us+13]=fs[13],ms[us+14]=fs[14],ms[us+15]=fs[15],ms}}),Object.assign(L,{slerp:function(ms,us,fs,gs){return fs.copy(ms).slerp(us,gs)},slerpFlat:function(ms,us,fs,gs,hs,xs,vs){var _s=fs[gs+0],ys=fs[gs+1],bs=fs[gs+2],Ms=fs[gs+3],Ss=hs[xs+0],Ls=hs[xs+1],ws=hs[xs+2],Ts=hs[xs+3];if(Ms!==Ts||_s!==Ss||ys!==Ls||bs!==ws){var Ps=1-vs,As=_s*Ss+ys*Ls+bs*ws+Ms*Ts,Cs=0<=As?1:-1,Es=1-As*As;if(Es>Number.EPSILON){var Ds=Math.sqrt(Es),zs=Math.atan2(Ds,As*Cs);Ps=Math.sin(Ps*zs)/Ds,vs=Math.sin(vs*zs)/Ds}var Is=vs*Cs;if(_s=_s*Ps+Ss*Is,ys=ys*Ps+Ls*Is,bs=bs*Ps+ws*Is,Ms=Ms*Ps+Ts*Is,Ps==1-vs){var Ns=1/Math.sqrt(_s*_s+ys*ys+bs*bs+Ms*Ms);_s*=Ns,ys*=Ns,bs*=Ns,Ms*=Ns}}ms[us]=_s,ms[us+1]=ys,ms[us+2]=bs,ms[us+3]=Ms}}),Object.defineProperties(L.prototype,{x:{get:function(){return this._x},set:function(ms){this._x=ms,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(ms){this._y=ms,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(ms){this._z=ms,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(ms){this._w=ms,this.onChangeCallback()}}}),Object.assign(L.prototype,{isQuaternion:!0,set:function(ms,us,fs,gs){return this._x=ms,this._y=us,this._z=fs,this._w=gs,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(ms){return this._x=ms.x,this._y=ms.y,this._z=ms.z,this._w=ms.w,this.onChangeCallback(),this},setFromEuler:function(ms,us){if(!(ms&&ms.isEuler))throw new Error;var fs=ms._x,gs=ms._y,hs=ms._z,xs=ms.order,vs=Math.cos,_s=Math.sin,ys=vs(fs/2),bs=vs(gs/2),Ms=vs(hs/2),Ss=_s(fs/2),Ls=_s(gs/2),ws=_s(hs/2);return'XYZ'===xs?(this._x=Ss*bs*Ms+ys*Ls*ws,this._y=ys*Ls*Ms-Ss*bs*ws,this._z=ys*bs*ws+Ss*Ls*Ms,this._w=ys*bs*Ms-Ss*Ls*ws):'YXZ'===xs?(this._x=Ss*bs*Ms+ys*Ls*ws,this._y=ys*Ls*Ms-Ss*bs*ws,this._z=ys*bs*ws-Ss*Ls*Ms,this._w=ys*bs*Ms+Ss*Ls*ws):'ZXY'===xs?(this._x=Ss*bs*Ms-ys*Ls*ws,this._y=ys*Ls*Ms+Ss*bs*ws,this._z=ys*bs*ws+Ss*Ls*Ms,this._w=ys*bs*Ms-Ss*Ls*ws):'ZYX'===xs?(this._x=Ss*bs*Ms-ys*Ls*ws,this._y=ys*Ls*Ms+Ss*bs*ws,this._z=ys*bs*ws-Ss*Ls*Ms,this._w=ys*bs*Ms+Ss*Ls*ws):'YZX'===xs?(this._x=Ss*bs*Ms+ys*Ls*ws,this._y=ys*Ls*Ms+Ss*bs*ws,this._z=ys*bs*ws-Ss*Ls*Ms,this._w=ys*bs*Ms-Ss*Ls*ws):'XZY'===xs&&(this._x=Ss*bs*Ms-ys*Ls*ws,this._y=ys*Ls*Ms-Ss*bs*ws,this._z=ys*bs*ws+Ss*Ls*Ms,this._w=ys*bs*Ms+Ss*Ls*ws),!1!==us&&this.onChangeCallback(),this},setFromAxisAngle:function(ms,us){var fs=us/2,gs=Math.sin(fs);return this._x=ms.x*gs,this._y=ms.y*gs,this._z=ms.z*gs,this._w=Math.cos(fs),this.onChangeCallback(),this},setFromRotationMatrix:function(ms){var us=ms.elements,fs=us[0],gs=us[4],hs=us[8],xs=us[1],vs=us[5],_s=us[9],ys=us[2],bs=us[6],Ms=us[10],Ss=fs+vs+Ms,Ls;return 0<Ss?(Ls=0.5/Math.sqrt(Ss+1),this._w=0.25/Ls,this._x=(bs-_s)*Ls,this._y=(hs-ys)*Ls,this._z=(xs-gs)*Ls):fs>vs&&fs>Ms?(Ls=2*Math.sqrt(1+fs-vs-Ms),this._w=(bs-_s)/Ls,this._x=0.25*Ls,this._y=(gs+xs)/Ls,this._z=(hs+ys)/Ls):vs>Ms?(Ls=2*Math.sqrt(1+vs-fs-Ms),this._w=(hs-ys)/Ls,this._x=(gs+xs)/Ls,this._y=0.25*Ls,this._z=(_s+bs)/Ls):(Ls=2*Math.sqrt(1+Ms-fs-vs),this._w=(xs-gs)/Ls,this._x=(hs+ys)/Ls,this._y=(_s+bs)/Ls,this._z=0.25*Ls),this.onChangeCallback(),this},setFromUnitVectors:function(){var ms=new T,us;return function(hs,xs){return void 0===ms&&(ms=new T),us=hs.dot(xs)+1,us<1e-6?(us=0,Math.abs(hs.x)>Math.abs(hs.z)?ms.set(-hs.y,hs.x,0):ms.set(0,-hs.z,hs.y)):ms.crossVectors(hs,xs),this._x=ms.x,this._y=ms.y,this._z=ms.z,this._w=us,this.normalize()}}(),angleTo:function(ms){return 2*Math.acos(Math.abs(Ai.clamp(this.dot(ms),-1,1)))},rotateTowards:function(ms,us){var fs=this.angleTo(ms);if(0===fs)return this;var gs=Math.min(1,us/fs);return this.slerp(ms,gs),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(ms){return this._x*ms._x+this._y*ms._y+this._z*ms._z+this._w*ms._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var ms=this.length();return 0===ms?(this._x=0,this._y=0,this._z=0,this._w=1):(ms=1/ms,this._x*=ms,this._y*=ms,this._z*=ms,this._w*=ms),this.onChangeCallback(),this},multiply:function(ms,us){return void 0===us?this.multiplyQuaternions(this,ms):this.multiplyQuaternions(ms,us)},premultiply:function(ms){return this.multiplyQuaternions(ms,this)},multiplyQuaternions:function(ms,us){var fs=ms._x,gs=ms._y,hs=ms._z,xs=ms._w,vs=us._x,_s=us._y,ys=us._z,bs=us._w;return this._x=fs*bs+xs*vs+gs*ys-hs*_s,this._y=gs*bs+xs*_s+hs*vs-fs*ys,this._z=hs*bs+xs*ys+fs*_s-gs*vs,this._w=xs*bs-fs*vs-gs*_s-hs*ys,this.onChangeCallback(),this},slerp:function(ms,us){if(0===us)return this;if(1===us)return this.copy(ms);var fs=this._x,gs=this._y,hs=this._z,xs=this._w,vs=xs*ms._w+fs*ms._x+gs*ms._y+hs*ms._z;if(0>vs?(this._w=-ms._w,this._x=-ms._x,this._y=-ms._y,this._z=-ms._z,vs=-vs):this.copy(ms),1<=vs)return this._w=xs,this._x=fs,this._y=gs,this._z=hs,this;var _s=1-vs*vs;if(_s<=Number.EPSILON){var ys=1-us;return this._w=ys*xs+us*this._w,this._x=ys*fs+us*this._x,this._y=ys*gs+us*this._y,this._z=ys*hs+us*this._z,this.normalize()}var bs=Math.sqrt(_s),Ms=Math.atan2(bs,vs),Ss=Math.sin((1-us)*Ms)/bs,Ls=Math.sin(us*Ms)/bs;return this._w=xs*Ss+this._w*Ls,this._x=fs*Ss+this._x*Ls,this._y=gs*Ss+this._y*Ls,this._z=hs*Ss+this._z*Ls,this.onChangeCallback(),this},equals:function(ms){return ms._x===this._x&&ms._y===this._y&&ms._z===this._z&&ms._w===this._w},fromArray:function(ms,us){return void 0===us&&(us=0),this._x=ms[us],this._y=ms[us+1],this._z=ms[us+2],this._w=ms[us+3],this.onChangeCallback(),this},toArray:function(ms,us){return void 0===ms&&(ms=[]),void 0===us&&(us=0),ms[us]=this._x,ms[us+1]=this._y,ms[us+2]=this._z,ms[us+3]=this._w,ms},onChange:function(ms){return this.onChangeCallback=ms,this},onChangeCallback:function(){}}),Object.assign(T.prototype,{isVector3:!0,set:function(ms,us,fs){return this.x=ms,this.y=us,this.z=fs,this},setScalar:function(ms){return this.x=ms,this.y=ms,this.z=ms,this},setX:function(ms){return this.x=ms,this},setY:function(ms){return this.y=ms,this},setZ:function(ms){return this.z=ms,this},setComponent:function(ms,us){switch(ms){case 0:this.x=us;break;case 1:this.y=us;break;case 2:this.z=us;break;default:throw new Error;}return this},getComponent:function(ms){switch(ms){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error;}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(ms){return this.x=ms.x,this.y=ms.y,this.z=ms.z,this},add:function(ms,us){return void 0===us?(this.x+=ms.x,this.y+=ms.y,this.z+=ms.z,this):this.addVectors(ms,us)},addScalar:function(ms){return this.x+=ms,this.y+=ms,this.z+=ms,this},addVectors:function(ms,us){return this.x=ms.x+us.x,this.y=ms.y+us.y,this.z=ms.z+us.z,this},addScaledVector:function(ms,us){return this.x+=ms.x*us,this.y+=ms.y*us,this.z+=ms.z*us,this},sub:function(ms,us){return void 0===us?(this.x-=ms.x,this.y-=ms.y,this.z-=ms.z,this):this.subVectors(ms,us)},subScalar:function(ms){return this.x-=ms,this.y-=ms,this.z-=ms,this},subVectors:function(ms,us){return this.x=ms.x-us.x,this.y=ms.y-us.y,this.z=ms.z-us.z,this},multiply:function(ms,us){return void 0===us?(this.x*=ms.x,this.y*=ms.y,this.z*=ms.z,this):this.multiplyVectors(ms,us)},multiplyScalar:function(ms){return this.x*=ms,this.y*=ms,this.z*=ms,this},multiplyVectors:function(ms,us){return this.x=ms.x*us.x,this.y=ms.y*us.y,this.z=ms.z*us.z,this},applyEuler:function(){var ms=new L;return function(fs){return!(fs&&fs.isEuler),this.applyQuaternion(ms.setFromEuler(fs))}}(),applyAxisAngle:function(){var ms=new L;return function(fs,gs){return this.applyQuaternion(ms.setFromAxisAngle(fs,gs))}}(),applyMatrix3:function(ms){var us=this.x,fs=this.y,gs=this.z,hs=ms.elements;return this.x=hs[0]*us+hs[3]*fs+hs[6]*gs,this.y=hs[1]*us+hs[4]*fs+hs[7]*gs,this.z=hs[2]*us+hs[5]*fs+hs[8]*gs,this},applyMatrix4:function(ms){var us=this.x,fs=this.y,gs=this.z,hs=ms.elements,xs=1/(hs[3]*us+hs[7]*fs+hs[11]*gs+hs[15]);return this.x=(hs[0]*us+hs[4]*fs+hs[8]*gs+hs[12])*xs,this.y=(hs[1]*us+hs[5]*fs+hs[9]*gs+hs[13])*xs,this.z=(hs[2]*us+hs[6]*fs+hs[10]*gs+hs[14])*xs,this},applyQuaternion:function(ms){var us=this.x,fs=this.y,gs=this.z,hs=ms.x,xs=ms.y,vs=ms.z,_s=ms.w,ys=_s*us+xs*gs-vs*fs,bs=_s*fs+vs*us-hs*gs,Ms=_s*gs+hs*fs-xs*us,Ss=-hs*us-xs*fs-vs*gs;return this.x=ys*_s+Ss*-hs+bs*-vs-Ms*-xs,this.y=bs*_s+Ss*-xs+Ms*-hs-ys*-vs,this.z=Ms*_s+Ss*-vs+ys*-xs-bs*-hs,this},project:function(ms){return this.applyMatrix4(ms.matrixWorldInverse).applyMatrix4(ms.projectionMatrix)},unproject:function(){var ms=new S;return function(fs){return this.applyMatrix4(ms.getInverse(fs.projectionMatrix)).applyMatrix4(fs.matrixWorld)}}(),transformDirection:function(ms){var us=this.x,fs=this.y,gs=this.z,hs=ms.elements;return this.x=hs[0]*us+hs[4]*fs+hs[8]*gs,this.y=hs[1]*us+hs[5]*fs+hs[9]*gs,this.z=hs[2]*us+hs[6]*fs+hs[10]*gs,this.normalize()},divide:function(ms){return this.x/=ms.x,this.y/=ms.y,this.z/=ms.z,this},divideScalar:function(ms){return this.multiplyScalar(1/ms)},min:function(ms){return this.x=Math.min(this.x,ms.x),this.y=Math.min(this.y,ms.y),this.z=Math.min(this.z,ms.z),this},max:function(ms){return this.x=Math.max(this.x,ms.x),this.y=Math.max(this.y,ms.y),this.z=Math.max(this.z,ms.z),this},clamp:function(ms,us){return this.x=Math.max(ms.x,Math.min(us.x,this.x)),this.y=Math.max(ms.y,Math.min(us.y,this.y)),this.z=Math.max(ms.z,Math.min(us.z,this.z)),this},clampScalar:function(){var ms=new T,us=new T;return function(gs,hs){return ms.set(gs,gs,gs),us.set(hs,hs,hs),this.clamp(ms,us)}}(),clampLength:function(ms,us){var fs=this.length();return this.divideScalar(fs||1).multiplyScalar(Math.max(ms,Math.min(us,fs)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(ms){return this.x*ms.x+this.y*ms.y+this.z*ms.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(ms){return this.normalize().multiplyScalar(ms)},lerp:function(ms,us){return this.x+=(ms.x-this.x)*us,this.y+=(ms.y-this.y)*us,this.z+=(ms.z-this.z)*us,this},lerpVectors:function(ms,us,fs){return this.subVectors(us,ms).multiplyScalar(fs).add(ms)},cross:function(ms,us){return void 0===us?this.crossVectors(this,ms):this.crossVectors(ms,us)},crossVectors:function(ms,us){var fs=ms.x,gs=ms.y,hs=ms.z,xs=us.x,vs=us.y,_s=us.z;return this.x=gs*_s-hs*vs,this.y=hs*xs-fs*_s,this.z=fs*vs-gs*xs,this},projectOnVector:function(ms){var us=ms.dot(this)/ms.lengthSq();return this.copy(ms).multiplyScalar(us)},projectOnPlane:function(){var ms=new T;return function(fs){return ms.copy(this).projectOnVector(fs),this.sub(ms)}}(),reflect:function(){var ms=new T;return function(fs){return this.sub(ms.copy(fs).multiplyScalar(2*this.dot(fs)))}}(),angleTo:function(ms){var us=this.dot(ms)/Math.sqrt(this.lengthSq()*ms.lengthSq());return Math.acos(Ai.clamp(us,-1,1))},distanceTo:function(ms){return Math.sqrt(this.distanceToSquared(ms))},distanceToSquared:function(ms){var us=this.x-ms.x,fs=this.y-ms.y,gs=this.z-ms.z;return us*us+fs*fs+gs*gs},manhattanDistanceTo:function(ms){return Math.abs(this.x-ms.x)+Math.abs(this.y-ms.y)+Math.abs(this.z-ms.z)},setFromSpherical:function(ms){return this.setFromSphericalCoords(ms.radius,ms.phi,ms.theta)},setFromSphericalCoords:function(ms,us,fs){var gs=Math.sin(us)*ms;return this.x=gs*Math.sin(fs),this.y=Math.cos(us)*ms,this.z=gs*Math.cos(fs),this},setFromCylindrical:function(ms){return this.setFromCylindricalCoords(ms.radius,ms.theta,ms.y)},setFromCylindricalCoords:function(ms,us,fs){return this.x=ms*Math.sin(us),this.y=fs,this.z=ms*Math.cos(us),this},setFromMatrixPosition:function(ms){var us=ms.elements;return this.x=us[12],this.y=us[13],this.z=us[14],this},setFromMatrixScale:function(ms){var us=this.setFromMatrixColumn(ms,0).length(),fs=this.setFromMatrixColumn(ms,1).length(),gs=this.setFromMatrixColumn(ms,2).length();return this.x=us,this.y=fs,this.z=gs,this},setFromMatrixColumn:function(ms,us){return this.fromArray(ms.elements,4*us)},equals:function(ms){return ms.x===this.x&&ms.y===this.y&&ms.z===this.z},fromArray:function(ms,us){return void 0===us&&(us=0),this.x=ms[us],this.y=ms[us+1],this.z=ms[us+2],this},toArray:function(ms,us){return void 0===ms&&(ms=[]),void 0===us&&(us=0),ms[us]=this.x,ms[us+1]=this.y,ms[us+2]=this.z,ms},fromBufferAttribute:function(ms,us,fs){if(void 0!==fs);return this.x=ms.getX(us),this.y=ms.getY(us),this.z=ms.getZ(us),this}}),Object.assign(P.prototype,{isMatrix3:!0,set:function(ms,us,fs,gs,hs,xs,vs,_s,ys){var bs=this.elements;return bs[0]=ms,bs[1]=gs,bs[2]=vs,bs[3]=us,bs[4]=hs,bs[5]=_s,bs[6]=fs,bs[7]=xs,bs[8]=ys,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(ms){var us=this.elements,fs=ms.elements;return us[0]=fs[0],us[1]=fs[1],us[2]=fs[2],us[3]=fs[3],us[4]=fs[4],us[5]=fs[5],us[6]=fs[6],us[7]=fs[7],us[8]=fs[8],this},setFromMatrix4:function(ms){var us=ms.elements;return this.set(us[0],us[4],us[8],us[1],us[5],us[9],us[2],us[6],us[10]),this},applyToBufferAttribute:function(){var ms=new T;return function(fs){for(var gs=0,hs=fs.count;gs<hs;gs++)ms.x=fs.getX(gs),ms.y=fs.getY(gs),ms.z=fs.getZ(gs),ms.applyMatrix3(this),fs.setXYZ(gs,ms.x,ms.y,ms.z);return fs}}(),multiply:function(ms){return this.multiplyMatrices(this,ms)},premultiply:function(ms){return this.multiplyMatrices(ms,this)},multiplyMatrices:function(ms,us){var fs=ms.elements,gs=us.elements,hs=this.elements,xs=fs[0],vs=fs[3],_s=fs[6],ys=fs[1],bs=fs[4],Ms=fs[7],Ss=fs[2],Ls=fs[5],ws=fs[8],Ts=gs[0],Ps=gs[3],As=gs[6],Cs=gs[1],Es=gs[4],Ds=gs[7],zs=gs[2],Is=gs[5],Ns=gs[8];return hs[0]=xs*Ts+vs*Cs+_s*zs,hs[3]=xs*Ps+vs*Es+_s*Is,hs[6]=xs*As+vs*Ds+_s*Ns,hs[1]=ys*Ts+bs*Cs+Ms*zs,hs[4]=ys*Ps+bs*Es+Ms*Is,hs[7]=ys*As+bs*Ds+Ms*Ns,hs[2]=Ss*Ts+Ls*Cs+ws*zs,hs[5]=Ss*Ps+Ls*Es+ws*Is,hs[8]=Ss*As+Ls*Ds+ws*Ns,this},multiplyScalar:function(ms){var us=this.elements;return us[0]*=ms,us[3]*=ms,us[6]*=ms,us[1]*=ms,us[4]*=ms,us[7]*=ms,us[2]*=ms,us[5]*=ms,us[8]*=ms,this},determinant:function(){var ms=this.elements,us=ms[0],fs=ms[1],gs=ms[2],hs=ms[3],xs=ms[4],vs=ms[5],_s=ms[6],ys=ms[7],bs=ms[8];return us*xs*bs-us*vs*ys-fs*hs*bs+fs*vs*_s+gs*hs*ys-gs*xs*_s},getInverse:function(ms,us){ms&&ms.isMatrix4;var fs=ms.elements,gs=this.elements,hs=fs[0],xs=fs[1],vs=fs[2],_s=fs[3],ys=fs[4],bs=fs[5],Ms=fs[6],Ss=fs[7],Ls=fs[8],ws=Ls*ys-bs*Ss,Ts=bs*Ms-Ls*_s,Ps=Ss*_s-ys*Ms,As=hs*ws+xs*Ts+vs*Ps;if(0==As){if(!0===us)throw new Error;else;return this.identity()}var Es=1/As;return gs[0]=ws*Es,gs[1]=(vs*Ss-Ls*xs)*Es,gs[2]=(bs*xs-vs*ys)*Es,gs[3]=Ts*Es,gs[4]=(Ls*hs-vs*Ms)*Es,gs[5]=(vs*_s-bs*hs)*Es,gs[6]=Ps*Es,gs[7]=(xs*Ms-Ss*hs)*Es,gs[8]=(ys*hs-xs*_s)*Es,this},transpose:function(){var us=this.elements,ms;return ms=us[1],us[1]=us[3],us[3]=ms,ms=us[2],us[2]=us[6],us[6]=ms,ms=us[5],us[5]=us[7],us[7]=ms,this},getNormalMatrix:function(ms){return this.setFromMatrix4(ms).getInverse(this).transpose()},transposeIntoArray:function(ms){var us=this.elements;return ms[0]=us[0],ms[1]=us[3],ms[2]=us[6],ms[3]=us[1],ms[4]=us[4],ms[5]=us[7],ms[6]=us[2],ms[7]=us[5],ms[8]=us[8],this},setUvTransform:function(ms,us,fs,gs,hs,xs,vs){var _s=Math.cos(hs),ys=Math.sin(hs);this.set(fs*_s,fs*ys,-fs*(_s*xs+ys*vs)+xs+ms,-gs*ys,gs*_s,-gs*(-ys*xs+_s*vs)+vs+us,0,0,1)},scale:function(ms,us){var fs=this.elements;return fs[0]*=ms,fs[3]*=ms,fs[6]*=ms,fs[1]*=us,fs[4]*=us,fs[7]*=us,this},rotate:function(ms){var us=Math.cos(ms),fs=Math.sin(ms),gs=this.elements,hs=gs[0],xs=gs[3],vs=gs[6],_s=gs[1],ys=gs[4],bs=gs[7];return gs[0]=us*hs+fs*_s,gs[3]=us*xs+fs*ys,gs[6]=us*vs+fs*bs,gs[1]=-fs*hs+us*_s,gs[4]=-fs*xs+us*ys,gs[7]=-fs*vs+us*bs,this},translate:function(ms,us){var fs=this.elements;return fs[0]+=ms*fs[2],fs[3]+=ms*fs[5],fs[6]+=ms*fs[8],fs[1]+=us*fs[2],fs[4]+=us*fs[5],fs[7]+=us*fs[8],this},equals:function(ms){for(var us=this.elements,fs=ms.elements,gs=0;9>gs;gs++)if(us[gs]!==fs[gs])return!1;return!0},fromArray:function(ms,us){us===void 0&&(us=0);for(var fs=0;9>fs;fs++)this.elements[fs]=ms[fs+us];return this},toArray:function(ms,us){void 0===ms&&(ms=[]),void 0===us&&(us=0);var fs=this.elements;return ms[us]=fs[0],ms[us+1]=fs[1],ms[us+2]=fs[2],ms[us+3]=fs[3],ms[us+4]=fs[4],ms[us+5]=fs[5],ms[us+6]=fs[6],ms[us+7]=fs[7],ms[us+8]=fs[8],ms}});var Ci,Ei={getDataURL:function(ms){var us;if('undefined'==typeof HTMLCanvasElement)return ms.src;if(ms instanceof HTMLCanvasElement)us=ms;else{void 0==Ci&&(Ci=document.createElementNS('http://www.w3.org/1999/xhtml','canvas')),Ci.width=ms.width,Ci.height=ms.height;var fs=Ci.getContext('2d');ms instanceof ImageData?fs.putImageData(ms,0,0):fs.drawImage(ms,0,0,ms.width,ms.height),us=Ci}return 2048<us.width||2048<us.height?us.toDataURL('image/jpeg',0.6):us.toDataURL('image/png')}},Di=0;A.DEFAULT_IMAGE=void 0,A.DEFAULT_MAPPING=lr,A.prototype=Object.assign(Object.create(_.prototype),{constructor:A,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(ms){return this.name=ms.name,this.image=ms.image,this.mipmaps=ms.mipmaps.slice(0),this.mapping=ms.mapping,this.wrapS=ms.wrapS,this.wrapT=ms.wrapT,this.magFilter=ms.magFilter,this.minFilter=ms.minFilter,this.anisotropy=ms.anisotropy,this.format=ms.format,this.type=ms.type,this.offset.copy(ms.offset),this.repeat.copy(ms.repeat),this.center.copy(ms.center),this.rotation=ms.rotation,this.matrixAutoUpdate=ms.matrixAutoUpdate,this.matrix.copy(ms.matrix),this.generateMipmaps=ms.generateMipmaps,this.premultiplyAlpha=ms.premultiplyAlpha,this.flipY=ms.flipY,this.unpackAlignment=ms.unpackAlignment,this.encoding=ms.encoding,this},toJSON:function(ms){var us=void 0===ms||'string'==typeof ms;if(!us&&void 0!==ms.textures[this.uuid])return ms.textures[this.uuid];var fs={metadata:{version:4.5,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var gs=this.image;if(void 0===gs.uuid&&(gs.uuid=Ai.generateUUID()),!us&&void 0===ms.images[gs.uuid]){var hs;if(Array.isArray(gs)){hs=[];for(var xs=0,vs=gs.length;xs<vs;xs++)hs.push(Ei.getDataURL(gs[xs]))}else hs=Ei.getDataURL(gs);ms.images[gs.uuid]={uuid:gs.uuid,url:hs}}fs.image=gs.uuid}return us||(ms.textures[this.uuid]=fs),fs},dispose:function(){this.dispatchEvent({type:'dispose'})},transformUv:function(ms){if(this.mapping!==lr)return ms;if(ms.applyMatrix3(this.matrix),0>ms.x||1<ms.x)switch(this.wrapS){case hr:ms.x-=Math.floor(ms.x);break;case xr:ms.x=0>ms.x?0:1;break;case _r:1===Math.abs(Math.floor(ms.x)%2)?ms.x=Math.ceil(ms.x)-ms.x:ms.x-=Math.floor(ms.x);}if(0>ms.y||1<ms.y)switch(this.wrapT){case hr:ms.y-=Math.floor(ms.y);break;case xr:ms.y=0>ms.y?0:1;break;case _r:1===Math.abs(Math.floor(ms.y)%2)?ms.y=Math.ceil(ms.y)-ms.y:ms.y-=Math.floor(ms.y);}return this.flipY&&(ms.y=1-ms.y),ms}}),Object.defineProperty(A.prototype,'needsUpdate',{set:function(ms){!0===ms&&this.version++}}),C.prototype=Object.create(A.prototype),C.prototype.constructor=C,C.prototype.isDataTexture=!0,Object.assign(E.prototype,{isBox3:!0,set:function(ms,us){return this.min.copy(ms),this.max.copy(us),this},setFromArray:function(ms){for(var us=+Infinity,fs=+Infinity,gs=+Infinity,hs=-Infinity,xs=-Infinity,vs=-Infinity,_s=0,ys=ms.length;_s<ys;_s+=3){var bs=ms[_s],Ms=ms[_s+1],Ss=ms[_s+2];bs<us&&(us=bs),Ms<fs&&(fs=Ms),Ss<gs&&(gs=Ss),bs>hs&&(hs=bs),Ms>xs&&(xs=Ms),Ss>vs&&(vs=Ss)}return this.min.set(us,fs,gs),this.max.set(hs,xs,vs),this},setFromBufferAttribute:function(ms){for(var us=+Infinity,fs=+Infinity,gs=+Infinity,hs=-Infinity,xs=-Infinity,vs=-Infinity,_s=0,ys=ms.count;_s<ys;_s++){var bs=ms.getX(_s),Ms=ms.getY(_s),Ss=ms.getZ(_s);bs<us&&(us=bs),Ms<fs&&(fs=Ms),Ss<gs&&(gs=Ss),bs>hs&&(hs=bs),Ms>xs&&(xs=Ms),Ss>vs&&(vs=Ss)}return this.min.set(us,fs,gs),this.max.set(hs,xs,vs),this},setFromPoints:function(ms){this.makeEmpty();for(var us=0,fs=ms.length;us<fs;us++)this.expandByPoint(ms[us]);return this},setFromCenterAndSize:function(){var ms=new T;return function(fs,gs){var hs=ms.copy(gs).multiplyScalar(0.5);return this.min.copy(fs).sub(hs),this.max.copy(fs).add(hs),this}}(),setFromObject:function(ms){return this.makeEmpty(),this.expandByObject(ms)},clone:function(){return new this.constructor().copy(this)},copy:function(ms){return this.min.copy(ms.min),this.max.copy(ms.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=+Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(ms){return void 0===ms&&(ms=new T),this.isEmpty()?ms.set(0,0,0):ms.addVectors(this.min,this.max).multiplyScalar(0.5)},getSize:function(ms){return void 0===ms&&(ms=new T),this.isEmpty()?ms.set(0,0,0):ms.subVectors(this.max,this.min)},expandByPoint:function(ms){return this.min.min(ms),this.max.max(ms),this},expandByVector:function(ms){return this.min.sub(ms),this.max.add(ms),this},expandByScalar:function(ms){return this.min.addScalar(-ms),this.max.addScalar(ms),this},expandByObject:function(){function ms(xs){var vs=xs.geometry;if(vs!==void 0)if(vs.isGeometry){var _s=vs.vertices;for(fs=0,gs=_s.length;fs<gs;fs++)hs.copy(_s[fs]),hs.applyMatrix4(xs.matrixWorld),us.expandByPoint(hs)}else if(vs.isBufferGeometry){var ys=vs.attributes.position;if(void 0!==ys)for(fs=0,gs=ys.count;fs<gs;fs++)hs.fromBufferAttribute(ys,fs).applyMatrix4(xs.matrixWorld),us.expandByPoint(hs)}}var us,fs,gs,hs=new T;return function(vs){return us=this,vs.updateMatrixWorld(!0),vs.traverse(ms),this}}(),containsPoint:function(ms){return ms.x<this.min.x||ms.x>this.max.x||ms.y<this.min.y||ms.y>this.max.y||ms.z<this.min.z||ms.z>this.max.z?!1:!0},containsBox:function(ms){return this.min.x<=ms.min.x&&ms.max.x<=this.max.x&&this.min.y<=ms.min.y&&ms.max.y<=this.max.y&&this.min.z<=ms.min.z&&ms.max.z<=this.max.z},getParameter:function(ms,us){return void 0===us&&(us=new T),us.set((ms.x-this.min.x)/(this.max.x-this.min.x),(ms.y-this.min.y)/(this.max.y-this.min.y),(ms.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(ms){return ms.max.x<this.min.x||ms.min.x>this.max.x||ms.max.y<this.min.y||ms.min.y>this.max.y||ms.max.z<this.min.z||ms.min.z>this.max.z?!1:!0},intersectsSphere:function(){var ms=new T;return function(fs){return this.clampPoint(fs.center,ms),ms.distanceToSquared(fs.center)<=fs.radius*fs.radius}}(),intersectsPlane:function(ms){var us,fs;return 0<ms.normal.x?(us=ms.normal.x*this.min.x,fs=ms.normal.x*this.max.x):(us=ms.normal.x*this.max.x,fs=ms.normal.x*this.min.x),0<ms.normal.y?(us+=ms.normal.y*this.min.y,fs+=ms.normal.y*this.max.y):(us+=ms.normal.y*this.max.y,fs+=ms.normal.y*this.min.y),0<ms.normal.z?(us+=ms.normal.z*this.min.z,fs+=ms.normal.z*this.max.z):(us+=ms.normal.z*this.max.z,fs+=ms.normal.z*this.min.z),us<=-ms.constant&&fs>=-ms.constant},intersectsTriangle:function(){function ms(Ss){var Ls,ws;for(Ls=0,ws=Ss.length-3;Ls<=ws;Ls+=3){_s.fromArray(Ss,Ls);var Ts=bs.x*Math.abs(_s.x)+bs.y*Math.abs(_s.y)+bs.z*Math.abs(_s.z),Ps=us.dot(_s),As=fs.dot(_s),Cs=gs.dot(_s);if(Math.max(-Math.max(Ps,As,Cs),Math.min(Ps,As,Cs))>Ts)return!1}return!0}var us=new T,fs=new T,gs=new T,hs=new T,xs=new T,vs=new T,_s=new T,ys=new T,bs=new T,Ms=new T;return function(Ls){if(this.isEmpty())return!1;this.getCenter(ys),bs.subVectors(this.max,ys),us.subVectors(Ls.a,ys),fs.subVectors(Ls.b,ys),gs.subVectors(Ls.c,ys),hs.subVectors(fs,us),xs.subVectors(gs,fs),vs.subVectors(us,gs);var ws=[0,-hs.z,hs.y,0,-xs.z,xs.y,0,-vs.z,vs.y,hs.z,0,-hs.x,xs.z,0,-xs.x,vs.z,0,-vs.x,-hs.y,hs.x,0,-xs.y,xs.x,0,-vs.y,vs.x,0];return!!ms(ws)&&(ws=[1,0,0,0,1,0,0,0,1],!!ms(ws))&&(Ms.crossVectors(hs,xs),ws=[Ms.x,Ms.y,Ms.z],ms(ws))}}(),clampPoint:function(ms,us){return void 0===us&&(us=new T),us.copy(ms).clamp(this.min,this.max)},distanceToPoint:function(){var ms=new T;return function(fs){var gs=ms.copy(fs).clamp(this.min,this.max);return gs.sub(fs).length()}}(),getBoundingSphere:function(){var ms=new T;return function(fs){return void 0===fs&&(fs=new D),this.getCenter(fs.center),fs.radius=0.5*this.getSize(ms).length(),fs}}(),intersect:function(ms){return this.min.max(ms.min),this.max.min(ms.max),this.isEmpty()&&this.makeEmpty(),this},union:function(ms){return this.min.min(ms.min),this.max.max(ms.max),this},applyMatrix4:function(){var ms=[new T,new T,new T,new T,new T,new T,new T,new T];return function(fs){return this.isEmpty()?this:(ms[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(fs),ms[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(fs),ms[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(fs),ms[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(fs),ms[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(fs),ms[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(fs),ms[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(fs),ms[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(fs),this.setFromPoints(ms),this)}}(),translate:function(ms){return this.min.add(ms),this.max.add(ms),this},equals:function(ms){return ms.min.equals(this.min)&&ms.max.equals(this.max)}}),Object.assign(D.prototype,{set:function(ms,us){return this.center.copy(ms),this.radius=us,this},setFromPoints:function(){var ms=new E;return function(fs,gs){var hs=this.center;void 0===gs?ms.setFromPoints(fs).getCenter(hs):hs.copy(gs);for(var xs=0,vs=0,_s=fs.length;vs<_s;vs++)xs=Math.max(xs,hs.distanceToSquared(fs[vs]));return this.radius=Math.sqrt(xs),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(ms){return this.center.copy(ms.center),this.radius=ms.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(ms){return ms.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(ms){return ms.distanceTo(this.center)-this.radius},intersectsSphere:function(ms){var us=this.radius+ms.radius;return ms.center.distanceToSquared(this.center)<=us*us},intersectsBox:function(ms){return ms.intersectsSphere(this)},intersectsPlane:function(ms){return Math.abs(ms.distanceToPoint(this.center))<=this.radius},clampPoint:function(ms,us){var fs=this.center.distanceToSquared(ms);return void 0===us&&(us=new T),us.copy(ms),fs>this.radius*this.radius&&(us.sub(this.center).normalize(),us.multiplyScalar(this.radius).add(this.center)),us},getBoundingBox:function(ms){return void 0===ms&&(ms=new E),ms.set(this.center,this.center),ms.expandByScalar(this.radius),ms},applyMatrix4:function(ms){return this.center.applyMatrix4(ms),this.radius*=ms.getMaxScaleOnAxis(),this},translate:function(ms){return this.center.add(ms),this},equals:function(ms){return ms.center.equals(this.center)&&ms.radius===this.radius}}),Object.assign(I.prototype,{set:function(ms,us){return this.normal.copy(ms),this.constant=us,this},setComponents:function(ms,us,fs,gs){return this.normal.set(ms,us,fs),this.constant=gs,this},setFromNormalAndCoplanarPoint:function(ms,us){return this.normal.copy(ms),this.constant=-us.dot(this.normal),this},setFromCoplanarPoints:function(){var ms=new T,us=new T;return function(gs,hs,xs){var vs=ms.subVectors(xs,hs).cross(us.subVectors(gs,hs)).normalize();return this.setFromNormalAndCoplanarPoint(vs,gs),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(ms){return this.normal.copy(ms.normal),this.constant=ms.constant,this},normalize:function(){var ms=1/this.normal.length();return this.normal.multiplyScalar(ms),this.constant*=ms,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(ms){return this.normal.dot(ms)+this.constant},distanceToSphere:function(ms){return this.distanceToPoint(ms.center)-ms.radius},projectPoint:function(ms,us){return void 0===us&&(us=new T),us.copy(this.normal).multiplyScalar(-this.distanceToPoint(ms)).add(ms)},intersectLine:function(){var ms=new T;return function(fs,gs){void 0===gs&&(gs=new T);var hs=fs.delta(ms),xs=this.normal.dot(hs);if(0===xs)return 0===this.distanceToPoint(fs.start)?gs.copy(fs.start):void 0;var vs=-(fs.start.dot(this.normal)+this.constant)/xs;return 0>vs||1<vs?void 0:gs.copy(hs).multiplyScalar(vs).add(fs.start)}}(),intersectsLine:function(ms){var us=this.distanceToPoint(ms.start),fs=this.distanceToPoint(ms.end);return 0>us&&0<fs||0>fs&&0<us},intersectsBox:function(ms){return ms.intersectsPlane(this)},intersectsSphere:function(ms){return ms.intersectsPlane(this)},coplanarPoint:function(ms){return void 0===ms&&(ms=new T),ms.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var ms=new T,us=new P;return function(gs,hs){var xs=hs||us.getNormalMatrix(gs),vs=this.coplanarPoint(ms).applyMatrix4(gs),_s=this.normal.applyMatrix3(xs).normalize();return this.constant=-vs.dot(_s),this}}(),translate:function(ms){return this.constant-=ms.dot(this.normal),this},equals:function(ms){return ms.normal.equals(this.normal)&&ms.constant===this.constant}}),Object.assign(N.prototype,{set:function(ms,us,fs,gs,hs,xs){var vs=this.planes;return vs[0].copy(ms),vs[1].copy(us),vs[2].copy(fs),vs[3].copy(gs),vs[4].copy(hs),vs[5].copy(xs),this},clone:function(){return new this.constructor().copy(this)},copy:function(ms){for(var us=this.planes,fs=0;6>fs;fs++)us[fs].copy(ms.planes[fs]);return this},setFromMatrix:function(ms){var us=this.planes,fs=ms.elements,gs=fs[0],hs=fs[1],xs=fs[2],vs=fs[3],_s=fs[4],ys=fs[5],bs=fs[6],Ms=fs[7],Ss=fs[8],Ls=fs[9],ws=fs[10],Ts=fs[11],Ps=fs[12],As=fs[13],Cs=fs[14],Es=fs[15];return us[0].setComponents(vs-gs,Ms-_s,Ts-Ss,Es-Ps).normalize(),us[1].setComponents(vs+gs,Ms+_s,Ts+Ss,Es+Ps).normalize(),us[2].setComponents(vs+hs,Ms+ys,Ts+Ls,Es+As).normalize(),us[3].setComponents(vs-hs,Ms-ys,Ts-Ls,Es-As).normalize(),us[4].setComponents(vs-xs,Ms-bs,Ts-ws,Es-Cs).normalize(),us[5].setComponents(vs+xs,Ms+bs,Ts+ws,Es+Cs).normalize(),this},intersectsObject:function(){var ms=new D;return function(fs){var gs=fs.geometry;return null===gs.boundingSphere&&gs.computeBoundingSphere(),ms.copy(gs.boundingSphere).applyMatrix4(fs.matrixWorld),this.intersectsSphere(ms)}}(),intersectsSprite:function(){var ms=new D;return function(fs){return ms.center.set(0,0,0),ms.radius=0.7071067811865476,ms.applyMatrix4(fs.matrixWorld),this.intersectsSphere(ms)}}(),intersectsSphere:function(ms){for(var us=this.planes,fs=ms.center,gs=-ms.radius,hs=0,xs;6>hs;hs++)if(xs=us[hs].distanceToPoint(fs),xs<gs)return!1;return!0},intersectsBox:function(){var ms=new T;return function(fs){for(var gs=this.planes,hs=0,xs;6>hs;hs++)if(xs=gs[hs],ms.x=0<xs.normal.x?fs.max.x:fs.min.x,ms.y=0<xs.normal.y?fs.max.y:fs.min.y,ms.z=0<xs.normal.z?fs.max.z:fs.min.z,0>xs.distanceToPoint(ms))return!1;return!0}}(),containsPoint:function(ms){for(var us=this.planes,fs=0;6>fs;fs++)if(0>us[fs].distanceToPoint(ms))return!1;return!0}});var Xo={alphamap_fragment:'#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif',alphamap_pars_fragment:'#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif',alphatest_fragment:'#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif',aomap_fragment:'#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif',aomap_pars_fragment:'#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif',begin_vertex:'vec3 transformed = vec3( position );',beginnormal_vertex:'vec3 objectNormal = vec3( normal );',bsdfs:'float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}',bumpmap_pars_fragment:'#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif',clipping_planes_fragment:'#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif',clipping_planes_pars_fragment:'#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif',clipping_planes_pars_vertex:'#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif',clipping_planes_vertex:'#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif',color_fragment:'#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif',color_pars_fragment:'#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif',color_pars_vertex:'#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif',color_vertex:'#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif',common:'#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}',cube_uv_reflection_fragment:'#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif',defaultnormal_vertex:'vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif',displacementmap_pars_vertex:'#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif',displacementmap_vertex:'#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif',emissivemap_fragment:'#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif',emissivemap_pars_fragment:'#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif',encodings_fragment:'gl_FragColor = linearToOutputTexel( gl_FragColor );',encodings_pars_fragment:'\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}',envmap_fragment:'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif',envmap_pars_fragment:'#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif',envmap_pars_vertex:'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif',envmap_physical_pars_fragment:'#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif',envmap_vertex:'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif',fog_vertex:'#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif',fog_pars_vertex:'#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif',fog_fragment:'#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif',fog_pars_fragment:'#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif',gradientmap_pars_fragment:'#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif',lightmap_fragment:'#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif',lightmap_pars_fragment:'#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif',lights_lambert_vertex:'vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif',lights_pars_begin:'uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif',lights_phong_fragment:'BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;',lights_phong_pars_fragment:'varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)',lights_physical_fragment:'PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif',lights_physical_pars_fragment:'struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}',lights_fragment_begin:'\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearCoatRadiance = vec3( 0.0 );\n#endif',lights_fragment_maps:'#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\t#ifndef STANDARD\n\t\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n\t#endif\n#endif',lights_fragment_end:'#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif',logdepthbuf_fragment:'#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif',logdepthbuf_pars_fragment:'#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n#endif',logdepthbuf_pars_vertex:'#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif',logdepthbuf_vertex:'#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif',map_fragment:'#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif',map_pars_fragment:'#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif',map_particle_fragment:'#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif',map_particle_pars_fragment:'#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif',metalnessmap_fragment:'float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif',metalnessmap_pars_fragment:'#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif',morphnormal_vertex:'#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif',morphtarget_pars_vertex:'#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif',morphtarget_vertex:'#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif',normal_fragment_begin:'#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif',normal_fragment_maps:'#ifdef USE_NORMALMAP\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t#ifdef FLIP_SIDED\n\t\t\tnormal = - normal;\n\t\t#endif\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\tnormal = normalize( normalMatrix * normal );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif',normalmap_pars_fragment:'#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tuniform mat3 normalMatrix;\n\t#else\n\t\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\t\tvec2 st0 = dFdx( vUv.st );\n\t\t\tvec2 st1 = dFdy( vUv.st );\n\t\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\t\tvec3 N = normalize( surf_norm );\n\t\t\tmat3 tsn = mat3( S, T, N );\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy *= normalScale;\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\treturn normalize( tsn * mapN );\n\t\t}\n\t#endif\n#endif',packing:'vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}',premultiplied_alpha_fragment:'#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif',project_vertex:'vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;',dithering_fragment:'#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif',dithering_pars_fragment:'#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif',roughnessmap_fragment:'float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif',roughnessmap_pars_fragment:'#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif',shadowmap_pars_fragment:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif',shadowmap_pars_vertex:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif',shadowmap_vertex:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif',shadowmask_pars_fragment:'float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}',skinbase_vertex:'#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif',skinning_pars_vertex:'#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif',skinning_vertex:'#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif',skinnormal_vertex:'#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif',specularmap_fragment:'float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif',specularmap_pars_fragment:'#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif',tonemapping_fragment:'#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif',tonemapping_pars_fragment:'#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}',uv_pars_fragment:'#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif',uv_pars_vertex:'#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif',uv_vertex:'#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif',uv2_pars_fragment:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif',uv2_pars_vertex:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif',uv2_vertex:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif',worldpos_vertex:'#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif',background_frag:'uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',background_vert:'varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}',cube_frag:'uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',cube_vert:'varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}',depth_frag:'#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}',depth_vert:'#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}',distanceRGBA_frag:'#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}',distanceRGBA_vert:'#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}',equirect_frag:'uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}',equirect_vert:'varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}',linedashed_frag:'uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',linedashed_vert:'uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}',meshbasic_frag:'uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',meshbasic_vert:'#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}',meshlambert_frag:'uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',meshlambert_vert:'#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',meshmatcap_frag:'#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',meshmatcap_vert:'#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}',meshphong_frag:'#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',meshphong_vert:'#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',meshphysical_frag:'#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}',meshphysical_vert:'#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',normal_frag:'#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}',normal_vert:'#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}',points_frag:'uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',points_vert:'uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}',shadow_frag:'uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}',shadow_vert:'#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}',sprite_frag:'uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}',sprite_vert:'uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}'},jo={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(F.prototype,{isColor:!0,r:1,g:1,b:1,set:function(ms){return ms&&ms.isColor?this.copy(ms):'number'==typeof ms?this.setHex(ms):'string'==typeof ms&&this.setStyle(ms),this},setScalar:function(ms){return this.r=ms,this.g=ms,this.b=ms,this},setHex:function(ms){return ms=Math.floor(ms),this.r=(255&ms>>16)/255,this.g=(255&ms>>8)/255,this.b=(255&ms)/255,this},setRGB:function(ms,us,fs){return this.r=ms,this.g=us,this.b=fs,this},setHSL:function(){function ms(us,fs,gs){return 0>gs&&(gs+=1),1<gs&&(gs-=1),gs<1/6?us+6*(fs-us)*gs:gs<1/2?fs:gs<2/3?us+6*(fs-us)*(2/3-gs):us}return function(fs,gs,hs){if(fs=Ai.euclideanModulo(fs,1),gs=Ai.clamp(gs,0,1),hs=Ai.clamp(hs,0,1),0===gs)this.r=this.g=this.b=hs;else{var xs=0.5>=hs?hs*(1+gs):hs+gs-hs*gs,vs=2*hs-xs;this.r=ms(vs,xs,fs+1/3),this.g=ms(vs,xs,fs),this.b=ms(vs,xs,fs-1/3)}return this}}(),setStyle:function(ms){function us(Ss){if(void 0!==Ss&&1>parseFloat(Ss));}var fs;if(fs=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(ms)){var gs,hs=fs[1],xs=fs[2];switch(hs){case'rgb':case'rgba':if(gs=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(xs))return this.r=Math.min(255,parseInt(gs[1],10))/255,this.g=Math.min(255,parseInt(gs[2],10))/255,this.b=Math.min(255,parseInt(gs[3],10))/255,us(gs[5]),this;if(gs=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(xs))return this.r=Math.min(100,parseInt(gs[1],10))/100,this.g=Math.min(100,parseInt(gs[2],10))/100,this.b=Math.min(100,parseInt(gs[3],10))/100,us(gs[5]),this;break;case'hsl':case'hsla':if(gs=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(xs)){var vs=parseFloat(gs[1])/360,_s=parseInt(gs[2],10)/100,ys=parseInt(gs[3],10)/100;return us(gs[5]),this.setHSL(vs,_s,ys)}}}else if(fs=/^\#([A-Fa-f0-9]+)$/.exec(ms)){var bs=fs[1],Ms=bs.length;if(3===Ms)return this.r=parseInt(bs.charAt(0)+bs.charAt(0),16)/255,this.g=parseInt(bs.charAt(1)+bs.charAt(1),16)/255,this.b=parseInt(bs.charAt(2)+bs.charAt(2),16)/255,this;if(6===Ms)return this.r=parseInt(bs.charAt(0)+bs.charAt(1),16)/255,this.g=parseInt(bs.charAt(2)+bs.charAt(3),16)/255,this.b=parseInt(bs.charAt(4)+bs.charAt(5),16)/255,this}if(ms&&0<ms.length){var bs=jo[ms];if(void 0!==bs)this.setHex(bs);else;}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(ms){return this.r=ms.r,this.g=ms.g,this.b=ms.b,this},copyGammaToLinear:function(ms,us){return void 0===us&&(us=2),this.r=Math.pow(ms.r,us),this.g=Math.pow(ms.g,us),this.b=Math.pow(ms.b,us),this},copyLinearToGamma:function(ms,us){void 0===us&&(us=2);var fs=0<us?1/us:1;return this.r=Math.pow(ms.r,fs),this.g=Math.pow(ms.g,fs),this.b=Math.pow(ms.b,fs),this},convertGammaToLinear:function(ms){return this.copyGammaToLinear(this,ms),this},convertLinearToGamma:function(ms){return this.copyLinearToGamma(this,ms),this},copySRGBToLinear:function(){function ms(us){return 0.04045>us?0.0773993808*us:Math.pow(0.9478672986*us+0.0521327014,2.4)}return function(fs){return this.r=ms(fs.r),this.g=ms(fs.g),this.b=ms(fs.b),this}}(),copyLinearToSRGB:function(){function ms(us){return 0.0031308>us?12.92*us:1.055*Math.pow(us,0.41666)-0.055}return function(fs){return this.r=ms(fs.r),this.g=ms(fs.g),this.b=ms(fs.b),this}}(),convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return('000000'+this.getHex().toString(16)).slice(-6)},getHSL:function(ms){void 0===ms&&(ms={h:0,s:0,l:0});var us=this.r,fs=this.g,gs=this.b,hs=Math.max(us,fs,gs),xs=Math.min(us,fs,gs),ys=(xs+hs)/2,vs,_s;if(xs===hs)vs=0,_s=0;else{var bs=hs-xs;_s=0.5>=ys?bs/(hs+xs):bs/(2-hs-xs),hs===us?vs=(fs-gs)/bs+(fs<gs?6:0):hs===fs?vs=(gs-us)/bs+2:hs===gs?vs=(us-fs)/bs+4:void 0,vs/=6}return ms.h=vs,ms.s=_s,ms.l=ys,ms},getStyle:function(){return'rgb('+(0|255*this.r)+','+(0|255*this.g)+','+(0|255*this.b)+')'},offsetHSL:function(){var ms={};return function(us,fs,gs){return this.getHSL(ms),ms.h+=us,ms.s+=fs,ms.l+=gs,this.setHSL(ms.h,ms.s,ms.l),this}}(),add:function(ms){return this.r+=ms.r,this.g+=ms.g,this.b+=ms.b,this},addColors:function(ms,us){return this.r=ms.r+us.r,this.g=ms.g+us.g,this.b=ms.b+us.b,this},addScalar:function(ms){return this.r+=ms,this.g+=ms,this.b+=ms,this},sub:function(ms){return this.r=Math.max(0,this.r-ms.r),this.g=Math.max(0,this.g-ms.g),this.b=Math.max(0,this.b-ms.b),this},multiply:function(ms){return this.r*=ms.r,this.g*=ms.g,this.b*=ms.b,this},multiplyScalar:function(ms){return this.r*=ms,this.g*=ms,this.b*=ms,this},lerp:function(ms,us){return this.r+=(ms.r-this.r)*us,this.g+=(ms.g-this.g)*us,this.b+=(ms.b-this.b)*us,this},lerpHSL:function(){var ms={h:0,s:0,l:0},us={h:0,s:0,l:0};return function(gs,hs){this.getHSL(ms),gs.getHSL(us);var xs=Ai.lerp(ms.h,us.h,hs),vs=Ai.lerp(ms.s,us.s,hs),_s=Ai.lerp(ms.l,us.l,hs);return this.setHSL(xs,vs,_s),this}}(),equals:function(ms){return ms.r===this.r&&ms.g===this.g&&ms.b===this.b},fromArray:function(ms,us){return void 0===us&&(us=0),this.r=ms[us],this.g=ms[us+1],this.b=ms[us+2],this},toArray:function(ms,us){return void 0===ms&&(ms=[]),void 0===us&&(us=0),ms[us]=this.r,ms[us+1]=this.g,ms[us+2]=this.b,ms},toJSON:function(){return this.getHex()}});var qo={common:{diffuse:{value:new F(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new P},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:0.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new M(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:2.5e-4},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new F(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new F(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new P}},sprite:{diffuse:{value:new F(15658734)},opacity:{value:1},center:{value:new M(0.5,0.5)},rotation:{value:0},map:{value:null},uvTransform:{value:new P}}},Yo={basic:{uniforms:R([qo.common,qo.specularmap,qo.envmap,qo.aomap,qo.lightmap,qo.fog]),vertexShader:Xo.meshbasic_vert,fragmentShader:Xo.meshbasic_frag},lambert:{uniforms:R([qo.common,qo.specularmap,qo.envmap,qo.aomap,qo.lightmap,qo.emissivemap,qo.fog,qo.lights,{emissive:{value:new F(0)}}]),vertexShader:Xo.meshlambert_vert,fragmentShader:Xo.meshlambert_frag},phong:{uniforms:R([qo.common,qo.specularmap,qo.envmap,qo.aomap,qo.lightmap,qo.emissivemap,qo.bumpmap,qo.normalmap,qo.displacementmap,qo.gradientmap,qo.fog,qo.lights,{emissive:{value:new F(0)},specular:{value:new F(1118481)},shininess:{value:30}}]),vertexShader:Xo.meshphong_vert,fragmentShader:Xo.meshphong_frag},standard:{uniforms:R([qo.common,qo.envmap,qo.aomap,qo.lightmap,qo.emissivemap,qo.bumpmap,qo.normalmap,qo.displacementmap,qo.roughnessmap,qo.metalnessmap,qo.fog,qo.lights,{emissive:{value:new F(0)},roughness:{value:0.5},metalness:{value:0.5},envMapIntensity:{value:1}}]),vertexShader:Xo.meshphysical_vert,fragmentShader:Xo.meshphysical_frag},matcap:{uniforms:R([qo.common,qo.bumpmap,qo.normalmap,qo.displacementmap,qo.fog,{matcap:{value:null}}]),vertexShader:Xo.meshmatcap_vert,fragmentShader:Xo.meshmatcap_frag},points:{uniforms:R([qo.points,qo.fog]),vertexShader:Xo.points_vert,fragmentShader:Xo.points_frag},dashed:{uniforms:R([qo.common,qo.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Xo.linedashed_vert,fragmentShader:Xo.linedashed_frag},depth:{uniforms:R([qo.common,qo.displacementmap]),vertexShader:Xo.depth_vert,fragmentShader:Xo.depth_frag},normal:{uniforms:R([qo.common,qo.bumpmap,qo.normalmap,qo.displacementmap,{opacity:{value:1}}]),vertexShader:Xo.normal_vert,fragmentShader:Xo.normal_frag},sprite:{uniforms:R([qo.sprite,qo.fog]),vertexShader:Xo.sprite_vert,fragmentShader:Xo.sprite_frag},background:{uniforms:{uvTransform:{value:new P},t2D:{value:null}},vertexShader:Xo.background_vert,fragmentShader:Xo.background_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Xo.cube_vert,fragmentShader:Xo.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Xo.equirect_vert,fragmentShader:Xo.equirect_frag},distanceRGBA:{uniforms:R([qo.common,qo.displacementmap,{referencePosition:{value:new T},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Xo.distanceRGBA_vert,fragmentShader:Xo.distanceRGBA_frag},shadow:{uniforms:R([qo.lights,qo.fog,{color:{value:new F(0)},opacity:{value:1}}]),vertexShader:Xo.shadow_vert,fragmentShader:Xo.shadow_frag}};Yo.physical={uniforms:R([Yo.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Xo.meshphysical_vert,fragmentShader:Xo.meshphysical_frag},Object.assign(B.prototype,{isVector4:!0,set:function(ms,us,fs,gs){return this.x=ms,this.y=us,this.z=fs,this.w=gs,this},setScalar:function(ms){return this.x=ms,this.y=ms,this.z=ms,this.w=ms,this},setX:function(ms){return this.x=ms,this},setY:function(ms){return this.y=ms,this},setZ:function(ms){return this.z=ms,this},setW:function(ms){return this.w=ms,this},setComponent:function(ms,us){switch(ms){case 0:this.x=us;break;case 1:this.y=us;break;case 2:this.z=us;break;case 3:this.w=us;break;default:throw new Error;}return this},getComponent:function(ms){switch(ms){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error;}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(ms){return this.x=ms.x,this.y=ms.y,this.z=ms.z,this.w=void 0===ms.w?1:ms.w,this},add:function(ms,us){return void 0===us?(this.x+=ms.x,this.y+=ms.y,this.z+=ms.z,this.w+=ms.w,this):this.addVectors(ms,us)},addScalar:function(ms){return this.x+=ms,this.y+=ms,this.z+=ms,this.w+=ms,this},addVectors:function(ms,us){return this.x=ms.x+us.x,this.y=ms.y+us.y,this.z=ms.z+us.z,this.w=ms.w+us.w,this},addScaledVector:function(ms,us){return this.x+=ms.x*us,this.y+=ms.y*us,this.z+=ms.z*us,this.w+=ms.w*us,this},sub:function(ms,us){return void 0===us?(this.x-=ms.x,this.y-=ms.y,this.z-=ms.z,this.w-=ms.w,this):this.subVectors(ms,us)},subScalar:function(ms){return this.x-=ms,this.y-=ms,this.z-=ms,this.w-=ms,this},subVectors:function(ms,us){return this.x=ms.x-us.x,this.y=ms.y-us.y,this.z=ms.z-us.z,this.w=ms.w-us.w,this},multiplyScalar:function(ms){return this.x*=ms,this.y*=ms,this.z*=ms,this.w*=ms,this},applyMatrix4:function(ms){var us=this.x,fs=this.y,gs=this.z,hs=this.w,xs=ms.elements;return this.x=xs[0]*us+xs[4]*fs+xs[8]*gs+xs[12]*hs,this.y=xs[1]*us+xs[5]*fs+xs[9]*gs+xs[13]*hs,this.z=xs[2]*us+xs[6]*fs+xs[10]*gs+xs[14]*hs,this.w=xs[3]*us+xs[7]*fs+xs[11]*gs+xs[15]*hs,this},divideScalar:function(ms){return this.multiplyScalar(1/ms)},setAxisAngleFromQuaternion:function(ms){this.w=2*Math.acos(ms.w);var us=Math.sqrt(1-ms.w*ms.w);return 1e-4>us?(this.x=1,this.y=0,this.z=0):(this.x=ms.x/us,this.y=ms.y/us,this.z=ms.z/us),this},setAxisAngleFromRotationMatrix:function(ms){var xs=0.01,vs=0.1,_s=ms.elements,ys=_s[0],bs=_s[4],Ms=_s[8],Ss=_s[1],Ls=_s[5],ws=_s[9],Ts=_s[2],Ps=_s[6],As=_s[10],us,fs,gs,hs;if(Math.abs(bs-Ss)<xs&&Math.abs(Ms-Ts)<xs&&Math.abs(ws-Ps)<xs){if(Math.abs(bs+Ss)<vs&&Math.abs(Ms+Ts)<vs&&Math.abs(ws+Ps)<vs&&Math.abs(ys+Ls+As-3)<vs)return this.set(1,0,0,0),this;us=Math.PI;var Cs=(ys+1)/2,Es=(Ls+1)/2,Ds=(As+1)/2,zs=(bs+Ss)/4,Is=(Ms+Ts)/4,Ns=(ws+Ps)/4;return Cs>Es&&Cs>Ds?Cs<xs?(fs=0,gs=0.707106781,hs=0.707106781):(fs=Math.sqrt(Cs),gs=zs/fs,hs=Is/fs):Es>Ds?Es<xs?(fs=0.707106781,gs=0,hs=0.707106781):(gs=Math.sqrt(Es),fs=zs/gs,hs=Ns/gs):Ds<xs?(fs=0.707106781,gs=0.707106781,hs=0):(hs=Math.sqrt(Ds),fs=Is/hs,gs=Ns/hs),this.set(fs,gs,hs,us),this}var Us=Math.sqrt((Ps-ws)*(Ps-ws)+(Ms-Ts)*(Ms-Ts)+(Ss-bs)*(Ss-bs));return 1e-3>Math.abs(Us)&&(Us=1),this.x=(Ps-ws)/Us,this.y=(Ms-Ts)/Us,this.z=(Ss-bs)/Us,this.w=Math.acos((ys+Ls+As-1)/2),this},min:function(ms){return this.x=Math.min(this.x,ms.x),this.y=Math.min(this.y,ms.y),this.z=Math.min(this.z,ms.z),this.w=Math.min(this.w,ms.w),this},max:function(ms){return this.x=Math.max(this.x,ms.x),this.y=Math.max(this.y,ms.y),this.z=Math.max(this.z,ms.z),this.w=Math.max(this.w,ms.w),this},clamp:function(ms,us){return this.x=Math.max(ms.x,Math.min(us.x,this.x)),this.y=Math.max(ms.y,Math.min(us.y,this.y)),this.z=Math.max(ms.z,Math.min(us.z,this.z)),this.w=Math.max(ms.w,Math.min(us.w,this.w)),this},clampScalar:function(){var ms,us;return function(gs,hs){return void 0==ms&&(ms=new B,us=new B),ms.set(gs,gs,gs,gs),us.set(hs,hs,hs,hs),this.clamp(ms,us)}}(),clampLength:function(ms,us){var fs=this.length();return this.divideScalar(fs||1).multiplyScalar(Math.max(ms,Math.min(us,fs)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(ms){return this.x*ms.x+this.y*ms.y+this.z*ms.z+this.w*ms.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(ms){return this.normalize().multiplyScalar(ms)},lerp:function(ms,us){return this.x+=(ms.x-this.x)*us,this.y+=(ms.y-this.y)*us,this.z+=(ms.z-this.z)*us,this.w+=(ms.w-this.w)*us,this},lerpVectors:function(ms,us,fs){return this.subVectors(us,ms).multiplyScalar(fs).add(ms)},equals:function(ms){return ms.x===this.x&&ms.y===this.y&&ms.z===this.z&&ms.w===this.w},fromArray:function(ms,us){return void 0===us&&(us=0),this.x=ms[us],this.y=ms[us+1],this.z=ms[us+2],this.w=ms[us+3],this},toArray:function(ms,us){return void 0===ms&&(ms=[]),void 0===us&&(us=0),ms[us]=this.x,ms[us+1]=this.y,ms[us+2]=this.z,ms[us+3]=this.w,ms},fromBufferAttribute:function(ms,us,fs){if(void 0!==fs);return this.x=ms.getX(us),this.y=ms.getY(us),this.z=ms.getZ(us),this.w=ms.getW(us),this}}),Object.assign(G.prototype,{clone:function(){return new this.constructor().copy(this)},copy:function(ms){this.a=ms.a,this.b=ms.b,this.c=ms.c,this.normal.copy(ms.normal),this.color.copy(ms.color),this.materialIndex=ms.materialIndex;for(var us=0,fs=ms.vertexNormals.length;us<fs;us++)this.vertexNormals[us]=ms.vertexNormals[us].clone();for(var us=0,fs=ms.vertexColors.length;us<fs;us++)this.vertexColors[us]=ms.vertexColors[us].clone();return this}}),W.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'],W.DefaultOrder='XYZ',Object.defineProperties(W.prototype,{x:{get:function(){return this._x},set:function(ms){this._x=ms,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(ms){this._y=ms,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(ms){this._z=ms,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(ms){this._order=ms,this.onChangeCallback()}}}),Object.assign(W.prototype,{isEuler:!0,set:function(ms,us,fs,gs){return this._x=ms,this._y=us,this._z=fs,this._order=gs||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(ms){return this._x=ms._x,this._y=ms._y,this._z=ms._z,this._order=ms._order,this.onChangeCallback(),this},setFromRotationMatrix:function(ms,us,fs){var gs=Ai.clamp,hs=ms.elements,xs=hs[0],vs=hs[4],_s=hs[8],ys=hs[1],bs=hs[5],Ms=hs[9],Ss=hs[2],Ls=hs[6],ws=hs[10];if(us=us||this._order,'XYZ'===us)this._y=Math.asin(gs(_s,-1,1)),0.99999>Math.abs(_s)?(this._x=Math.atan2(-Ms,ws),this._z=Math.atan2(-vs,xs)):(this._x=Math.atan2(Ls,bs),this._z=0);else if('YXZ'===us)this._x=Math.asin(-gs(Ms,-1,1)),0.99999>Math.abs(Ms)?(this._y=Math.atan2(_s,ws),this._z=Math.atan2(ys,bs)):(this._y=Math.atan2(-Ss,xs),this._z=0);else if('ZXY'===us)this._x=Math.asin(gs(Ls,-1,1)),0.99999>Math.abs(Ls)?(this._y=Math.atan2(-Ss,ws),this._z=Math.atan2(-vs,bs)):(this._y=0,this._z=Math.atan2(ys,xs));else if('ZYX'===us)this._y=Math.asin(-gs(Ss,-1,1)),0.99999>Math.abs(Ss)?(this._x=Math.atan2(Ls,ws),this._z=Math.atan2(ys,xs)):(this._x=0,this._z=Math.atan2(-vs,bs));else if('YZX'===us)this._z=Math.asin(gs(ys,-1,1)),0.99999>Math.abs(ys)?(this._x=Math.atan2(-Ms,bs),this._y=Math.atan2(-Ss,xs)):(this._x=0,this._y=Math.atan2(_s,ws));else if('XZY'===us)this._z=Math.asin(-gs(vs,-1,1)),0.99999>Math.abs(vs)?(this._x=Math.atan2(Ls,bs),this._y=Math.atan2(_s,xs)):(this._x=Math.atan2(-Ms,ws),this._y=0);else;return this._order=us,!1!==fs&&this.onChangeCallback(),this},setFromQuaternion:function(){var ms=new S;return function(fs,gs,hs){return ms.makeRotationFromQuaternion(fs),this.setFromRotationMatrix(ms,gs,hs)}}(),setFromVector3:function(ms,us){return this.set(ms.x,ms.y,ms.z,us||this._order)},reorder:function(){var ms=new L;return function(fs){return ms.setFromEuler(this),this.setFromQuaternion(ms,fs)}}(),equals:function(ms){return ms._x===this._x&&ms._y===this._y&&ms._z===this._z&&ms._order===this._order},fromArray:function(ms){return this._x=ms[0],this._y=ms[1],this._z=ms[2],void 0!==ms[3]&&(this._order=ms[3]),this.onChangeCallback(),this},toArray:function(ms,us){return void 0===ms&&(ms=[]),void 0===us&&(us=0),ms[us]=this._x,ms[us+1]=this._y,ms[us+2]=this._z,ms[us+3]=this._order,ms},toVector3:function(ms){return ms?ms.set(this._x,this._y,this._z):new T(this._x,this._y,this._z)},onChange:function(ms){return this.onChangeCallback=ms,this},onChangeCallback:function(){}}),Object.assign(H.prototype,{set:function(ms){this.mask=0|1<<ms},enable:function(ms){this.mask|=0|1<<ms},toggle:function(ms){this.mask^=0|1<<ms},disable:function(ms){this.mask&=~(0|1<<ms)},test:function(ms){return 0!=(this.mask&ms.mask)}});var Zo=0;X.DefaultUp=new T(0,1,0),X.DefaultMatrixAutoUpdate=!0,X.prototype=Object.assign(Object.create(_.prototype),{constructor:X,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(ms){this.matrix.multiplyMatrices(ms,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(ms){return this.quaternion.premultiply(ms),this},setRotationFromAxisAngle:function(ms,us){this.quaternion.setFromAxisAngle(ms,us)},setRotationFromEuler:function(ms){this.quaternion.setFromEuler(ms,!0)},setRotationFromMatrix:function(ms){this.quaternion.setFromRotationMatrix(ms)},setRotationFromQuaternion:function(ms){this.quaternion.copy(ms)},rotateOnAxis:function(){var ms=new L;return function(fs,gs){return ms.setFromAxisAngle(fs,gs),this.quaternion.multiply(ms),this}}(),rotateOnWorldAxis:function(){var ms=new L;return function(fs,gs){return ms.setFromAxisAngle(fs,gs),this.quaternion.premultiply(ms),this}}(),rotateX:function(){var ms=new T(1,0,0);return function(fs){return this.rotateOnAxis(ms,fs)}}(),rotateY:function(){var ms=new T(0,1,0);return function(fs){return this.rotateOnAxis(ms,fs)}}(),rotateZ:function(){var ms=new T(0,0,1);return function(fs){return this.rotateOnAxis(ms,fs)}}(),translateOnAxis:function(){var ms=new T;return function(fs,gs){return ms.copy(fs).applyQuaternion(this.quaternion),this.position.add(ms.multiplyScalar(gs)),this}}(),translateX:function(){var ms=new T(1,0,0);return function(fs){return this.translateOnAxis(ms,fs)}}(),translateY:function(){var ms=new T(0,1,0);return function(fs){return this.translateOnAxis(ms,fs)}}(),translateZ:function(){var ms=new T(0,0,1);return function(fs){return this.translateOnAxis(ms,fs)}}(),localToWorld:function(ms){return ms.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var ms=new S;return function(fs){return fs.applyMatrix4(ms.getInverse(this.matrixWorld))}}(),lookAt:function(){var ms=new L,us=new S,fs=new T,gs=new T;return function(xs,vs,_s){xs.isVector3?fs.copy(xs):fs.set(xs,vs,_s);var ys=this.parent;this.updateWorldMatrix(!0,!1),gs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?us.lookAt(gs,fs,this.up):us.lookAt(fs,gs,this.up),this.quaternion.setFromRotationMatrix(us),ys&&(us.extractRotation(ys.matrixWorld),ms.setFromRotationMatrix(us),this.quaternion.premultiply(ms.inverse()))}}(),add:function(ms){if(1<arguments.length){for(var us=0;us<arguments.length;us++)this.add(arguments[us]);return this}return ms===this?this:(ms&&ms.isObject3D&&(null!==ms.parent&&ms.parent.remove(ms),ms.parent=this,ms.dispatchEvent({type:'added'}),this.children.push(ms)),this)},remove:function(ms){if(1<arguments.length){for(var us=0;us<arguments.length;us++)this.remove(arguments[us]);return this}var fs=this.children.indexOf(ms);return-1!==fs&&(ms.parent=null,ms.dispatchEvent({type:'removed'}),this.children.splice(fs,1)),this},getObjectById:function(ms){return this.getObjectByProperty('id',ms)},getObjectByName:function(ms){return this.getObjectByProperty('name',ms)},getObjectByProperty:function(ms,us){if(this[ms]===us)return this;for(var fs=0,gs=this.children.length;fs<gs;fs++){var hs=this.children[fs],xs=hs.getObjectByProperty(ms,us);if(xs!==void 0)return xs}},getWorldPosition:function(ms){return void 0===ms&&(ms=new T),this.updateMatrixWorld(!0),ms.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var ms=new T,us=new T;return function(gs){return void 0===gs&&(gs=new L),this.updateMatrixWorld(!0),this.matrixWorld.decompose(ms,gs,us),gs}}(),getWorldScale:function(){var ms=new T,us=new L;return function(gs){return void 0===gs&&(gs=new T),this.updateMatrixWorld(!0),this.matrixWorld.decompose(ms,us,gs),gs}}(),getWorldDirection:function(ms){void 0===ms&&(ms=new T);this.updateMatrixWorld(!0);var us=this.matrixWorld.elements;return ms.set(us[8],us[9],us[10]).normalize()},raycast:function(){},traverse:function(ms){ms(this);for(var us=this.children,fs=0,gs=us.length;fs<gs;fs++)us[fs].traverse(ms)},traverseVisible:function(ms){if(!1!==this.visible){ms(this);for(var us=this.children,fs=0,gs=us.length;fs<gs;fs++)us[fs].traverseVisible(ms)}},traverseAncestors:function(ms){var us=this.parent;null!==us&&(ms(us),us.traverseAncestors(ms))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(ms){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||ms)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,ms=!0);for(var us=this.children,fs=0,gs=us.length;fs<gs;fs++)us[fs].updateMatrixWorld(ms)},updateWorldMatrix:function(ms,us){var fs=this.parent;if(!0===ms&&null!==fs&&fs.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===us)for(var gs=this.children,hs=0,xs=gs.length;hs<xs;hs++)gs[hs].updateWorldMatrix(!1,!0)},toJSON:function(ms){function us(As,Cs){return void 0===As[Cs.uuid]&&(As[Cs.uuid]=Cs.toJSON(ms)),Cs.uuid}function fs(As){var Cs=[];for(var Es in As){var Ds=As[Es];delete Ds.metadata,Cs.push(Ds)}return Cs}var gs=void 0===ms||'string'==typeof ms,hs={};gs&&(ms={geometries:{},materials:{},textures:{},images:{},shapes:{}},hs.metadata={version:4.5,type:'Object',generator:'Object3D.toJSON'});var xs={};if(xs.uuid=this.uuid,xs.type=this.type,''!==this.name&&(xs.name=this.name),!0===this.castShadow&&(xs.castShadow=!0),!0===this.receiveShadow&&(xs.receiveShadow=!0),!1===this.visible&&(xs.visible=!1),!1===this.frustumCulled&&(xs.frustumCulled=!1),0!==this.renderOrder&&(xs.renderOrder=this.renderOrder),'{}'!==JSON.stringify(this.userData)&&(xs.userData=this.userData),xs.layers=this.layers.mask,xs.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(xs.matrixAutoUpdate=!1),this.isMesh||this.isLine||this.isPoints){xs.geometry=us(ms.geometries,this.geometry);var vs=this.geometry.parameters;if(void 0!==vs&&void 0!==vs.shapes){var _s=vs.shapes;if(Array.isArray(_s))for(var ys=0,bs=_s.length,Ms;ys<bs;ys++)Ms=_s[ys],us(ms.shapes,Ms);else us(ms.shapes,_s)}}if(void 0!==this.material)if(Array.isArray(this.material)){for(var Ss=[],ys=0,bs=this.material.length;ys<bs;ys++)Ss.push(us(ms.materials,this.material[ys]));xs.material=Ss}else xs.material=us(ms.materials,this.material);if(0<this.children.length){xs.children=[];for(var ys=0;ys<this.children.length;ys++)xs.children.push(this.children[ys].toJSON(ms).object)}if(gs){var Ls=fs(ms.geometries),ws=fs(ms.materials),Ts=fs(ms.textures),Ps=fs(ms.images),_s=fs(ms.shapes);0<Ls.length&&(hs.geometries=Ls),0<ws.length&&(hs.materials=ws),0<Ts.length&&(hs.textures=Ts),0<Ps.length&&(hs.images=Ps),0<_s.length&&(hs.shapes=_s)}return hs.object=xs,hs},clone:function(ms){return new this.constructor().copy(this,ms)},copy:function(ms,us){if(void 0===us&&(us=!0),this.name=ms.name,this.up.copy(ms.up),this.position.copy(ms.position),this.quaternion.copy(ms.quaternion),this.scale.copy(ms.scale),this.matrix.copy(ms.matrix),this.matrixWorld.copy(ms.matrixWorld),this.matrixAutoUpdate=ms.matrixAutoUpdate,this.matrixWorldNeedsUpdate=ms.matrixWorldNeedsUpdate,this.layers.mask=ms.layers.mask,this.visible=ms.visible,this.castShadow=ms.castShadow,this.receiveShadow=ms.receiveShadow,this.frustumCulled=ms.frustumCulled,this.renderOrder=ms.renderOrder,this.userData=JSON.parse(JSON.stringify(ms.userData)),!0===us)for(var fs=0,gs;fs<ms.children.length;fs++)gs=ms.children[fs],this.add(gs.clone());return this}});var Jo=0;Y.prototype=Object.assign(Object.create(_.prototype),{constructor:Y,isGeometry:!0,applyMatrix:function(ms){for(var us=new P().getNormalMatrix(ms),fs=0,gs=this.vertices.length,hs;fs<gs;fs++)hs=this.vertices[fs],hs.applyMatrix4(ms);for(var fs=0,gs=this.faces.length,xs;fs<gs;fs++){xs=this.faces[fs],xs.normal.applyMatrix3(us).normalize();for(var vs=0,_s=xs.vertexNormals.length;vs<_s;vs++)xs.vertexNormals[vs].applyMatrix3(us).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var ms=new S;return function(fs){return ms.makeRotationX(fs),this.applyMatrix(ms),this}}(),rotateY:function(){var ms=new S;return function(fs){return ms.makeRotationY(fs),this.applyMatrix(ms),this}}(),rotateZ:function(){var ms=new S;return function(fs){return ms.makeRotationZ(fs),this.applyMatrix(ms),this}}(),translate:function(){var ms=new S;return function(fs,gs,hs){return ms.makeTranslation(fs,gs,hs),this.applyMatrix(ms),this}}(),scale:function(){var ms=new S;return function(fs,gs,hs){return ms.makeScale(fs,gs,hs),this.applyMatrix(ms),this}}(),lookAt:function(){var ms=new X;return function(fs){ms.lookAt(fs),ms.updateMatrix(),this.applyMatrix(ms.matrix)}}(),fromBufferGeometry:function(ms){function us(Cs,Es,Ds,zs){var Is=void 0===_s?[]:[fs.colors[Cs].clone(),fs.colors[Es].clone(),fs.colors[Ds].clone()],Ns=void 0===vs?[]:[new T().fromArray(vs,3*Cs),new T().fromArray(vs,3*Es),new T().fromArray(vs,3*Ds)],Us=new G(Cs,Es,Ds,Ns,Is,zs);fs.faces.push(Us),void 0!==ys&&fs.faceVertexUvs[0].push([new M().fromArray(ys,2*Cs),new M().fromArray(ys,2*Es),new M().fromArray(ys,2*Ds)]),void 0!==bs&&fs.faceVertexUvs[1].push([new M().fromArray(bs,2*Cs),new M().fromArray(bs,2*Es),new M().fromArray(bs,2*Ds)])}var fs=this,gs=null===ms.index?void 0:ms.index.array,hs=ms.attributes,xs=hs.position.array,vs=void 0===hs.normal?void 0:hs.normal.array,_s=void 0===hs.color?void 0:hs.color.array,ys=void 0===hs.uv?void 0:hs.uv.array,bs=void 0===hs.uv2?void 0:hs.uv2.array;void 0!==bs&&(this.faceVertexUvs[1]=[]);for(var Ms=0,Ss=0;Ms<xs.length;Ms+=3,Ss+=2)fs.vertices.push(new T().fromArray(xs,Ms)),void 0!==_s&&fs.colors.push(new F().fromArray(_s,Ms));var Ls=ms.groups;if(0<Ls.length)for(var Ms=0;Ms<Ls.length;Ms++)for(var ws=Ls[Ms],Ts=ws.start,Ps=ws.count,Ss=Ts;Ss<Ts+Ps;Ss+=3)void 0===gs?us(Ss,Ss+1,Ss+2,ws.materialIndex):us(gs[Ss],gs[Ss+1],gs[Ss+2],ws.materialIndex);else if(void 0!==gs)for(var Ms=0;Ms<gs.length;Ms+=3)us(gs[Ms],gs[Ms+1],gs[Ms+2]);else for(var Ms=0;Ms<xs.length/3;Ms+=3)us(Ms,Ms+1,Ms+2);return this.computeFaceNormals(),null!==ms.boundingBox&&(this.boundingBox=ms.boundingBox.clone()),null!==ms.boundingSphere&&(this.boundingSphere=ms.boundingSphere.clone()),this},center:function(){var ms=new T;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(ms).negate(),this.translate(ms.x,ms.y,ms.z),this}}(),normalize:function(){this.computeBoundingSphere();var ms=this.boundingSphere.center,us=this.boundingSphere.radius,fs=0===us?1:1/us,gs=new S;return gs.set(fs,0,0,-fs*ms.x,0,fs,0,-fs*ms.y,0,0,fs,-fs*ms.z,0,0,0,1),this.applyMatrix(gs),this},computeFaceNormals:function(){for(var ms=new T,us=new T,fs=0,gs=this.faces.length;fs<gs;fs++){var hs=this.faces[fs],xs=this.vertices[hs.a],vs=this.vertices[hs.b],_s=this.vertices[hs.c];ms.subVectors(_s,vs),us.subVectors(xs,vs),ms.cross(us),ms.normalize(),hs.normal.copy(ms)}},computeVertexNormals:function(ms){ms===void 0&&(ms=!0);var us,fs,gs,hs,xs,vs;for(vs=Array(this.vertices.length),us=0,fs=this.vertices.length;us<fs;us++)vs[us]=new T;if(ms){var _s,ys,bs,Ms=new T,Ss=new T;for(gs=0,hs=this.faces.length;gs<hs;gs++)xs=this.faces[gs],_s=this.vertices[xs.a],ys=this.vertices[xs.b],bs=this.vertices[xs.c],Ms.subVectors(bs,ys),Ss.subVectors(_s,ys),Ms.cross(Ss),vs[xs.a].add(Ms),vs[xs.b].add(Ms),vs[xs.c].add(Ms)}else for(this.computeFaceNormals(),gs=0,hs=this.faces.length;gs<hs;gs++)xs=this.faces[gs],vs[xs.a].add(xs.normal),vs[xs.b].add(xs.normal),vs[xs.c].add(xs.normal);for(us=0,fs=this.vertices.length;us<fs;us++)vs[us].normalize();for(gs=0,hs=this.faces.length;gs<hs;gs++){xs=this.faces[gs];var Ls=xs.vertexNormals;3===Ls.length?(Ls[0].copy(vs[xs.a]),Ls[1].copy(vs[xs.b]),Ls[2].copy(vs[xs.c])):(Ls[0]=vs[xs.a].clone(),Ls[1]=vs[xs.b].clone(),Ls[2]=vs[xs.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var ms,us,fs;for(this.computeFaceNormals(),ms=0,us=this.faces.length;ms<us;ms++){fs=this.faces[ms];var gs=fs.vertexNormals;3===gs.length?(gs[0].copy(fs.normal),gs[1].copy(fs.normal),gs[2].copy(fs.normal)):(gs[0]=fs.normal.clone(),gs[1]=fs.normal.clone(),gs[2]=fs.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var ms,us,fs,gs,hs;for(fs=0,gs=this.faces.length;fs<gs;fs++)for(hs=this.faces[fs],hs.__originalFaceNormal?hs.__originalFaceNormal.copy(hs.normal):hs.__originalFaceNormal=hs.normal.clone(),hs.__originalVertexNormals||(hs.__originalVertexNormals=[]),(ms=0,us=hs.vertexNormals.length);ms<us;ms++)hs.__originalVertexNormals[ms]?hs.__originalVertexNormals[ms].copy(hs.vertexNormals[ms]):hs.__originalVertexNormals[ms]=hs.vertexNormals[ms].clone();var xs=new Y;for(xs.faces=this.faces,ms=0,us=this.morphTargets.length;ms<us;ms++){if(!this.morphNormals[ms]){this.morphNormals[ms]={},this.morphNormals[ms].faceNormals=[],this.morphNormals[ms].vertexNormals=[];var vs=this.morphNormals[ms].faceNormals,_s=this.morphNormals[ms].vertexNormals,ys,bs;for(fs=0,gs=this.faces.length;fs<gs;fs++)ys=new T,bs={a:new T,b:new T,c:new T},vs.push(ys),_s.push(bs)}var Ms=this.morphNormals[ms];xs.vertices=this.morphTargets[ms].vertices,xs.computeFaceNormals(),xs.computeVertexNormals();var ys,bs;for(fs=0,gs=this.faces.length;fs<gs;fs++)hs=this.faces[fs],ys=Ms.faceNormals[fs],bs=Ms.vertexNormals[fs],ys.copy(hs.normal),bs.a.copy(hs.vertexNormals[0]),bs.b.copy(hs.vertexNormals[1]),bs.c.copy(hs.vertexNormals[2])}for(fs=0,gs=this.faces.length;fs<gs;fs++)hs=this.faces[fs],hs.normal=hs.__originalFaceNormal,hs.vertexNormals=hs.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new E),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new D),this.boundingSphere.setFromPoints(this.vertices)},merge:function(ms,us,fs){if(ms&&ms.isGeometry){var hs=this.vertices.length,xs=this.vertices,vs=ms.vertices,_s=this.faces,ys=ms.faces,bs=this.faceVertexUvs[0],Ms=ms.faceVertexUvs[0],Ss=this.colors,Ls=ms.colors,gs;void 0===fs&&(fs=0),void 0!==us&&(gs=new P().getNormalMatrix(us));for(var ws=0,Ts=vs.length;ws<Ts;ws++){var Ps=vs[ws],As=Ps.clone();void 0!==us&&As.applyMatrix4(us),xs.push(As)}for(var ws=0,Ts=Ls.length;ws<Ts;ws++)Ss.push(Ls[ws].clone());for(ws=0,Ts=ys.length;ws<Ts;ws++){var Cs=ys[ws],Is=Cs.vertexNormals,Ns=Cs.vertexColors,Es,Ds,zs;Es=new G(Cs.a+hs,Cs.b+hs,Cs.c+hs),Es.normal.copy(Cs.normal),void 0!=gs&&Es.normal.applyMatrix3(gs).normalize();for(var Us=0,Rs=Is.length;Us<Rs;Us++)Ds=Is[Us].clone(),void 0!=gs&&Ds.applyMatrix3(gs).normalize(),Es.vertexNormals.push(Ds);Es.color.copy(Cs.color);for(var Us=0,Rs=Ns.length;Us<Rs;Us++)zs=Ns[Us],Es.vertexColors.push(zs.clone());Es.materialIndex=Cs.materialIndex+fs,_s.push(Es)}for(ws=0,Ts=Ms.length;ws<Ts;ws++){var Fs=Ms[ws],Bs=[];if(void 0!==Fs){for(var Us=0,Rs=Fs.length;Us<Rs;Us++)Bs.push(Fs[Us].clone());bs.push(Bs)}}}},mergeMesh:function(ms){ms&&ms.isMesh&&(ms.matrixAutoUpdate&&ms.updateMatrix(),this.merge(ms.geometry,ms.matrix))},mergeVertices:function(){var ms={},us=[],fs=[],vs=Math.pow(10,4),gs,hs,_s,ys,bs,Ms,Ss,Ls;for(_s=0,ys=this.vertices.length;_s<ys;_s++)gs=this.vertices[_s],hs=Math.round(gs.x*vs)+'_'+Math.round(gs.y*vs)+'_'+Math.round(gs.z*vs),void 0===ms[hs]?(ms[hs]=_s,us.push(this.vertices[_s]),fs[_s]=us.length-1):fs[_s]=fs[ms[hs]];var ws=[];for(_s=0,ys=this.faces.length;_s<ys;_s++){bs=this.faces[_s],bs.a=fs[bs.a],bs.b=fs[bs.b],bs.c=fs[bs.c],Ms=[bs.a,bs.b,bs.c];for(var Ts=0;3>Ts;Ts++)if(Ms[Ts]===Ms[(Ts+1)%3]){ws.push(_s);break}}for(_s=ws.length-1;0<=_s;_s--){var Ps=ws[_s];for(this.faces.splice(Ps,1),Ss=0,Ls=this.faceVertexUvs.length;Ss<Ls;Ss++)this.faceVertexUvs[Ss].splice(Ps,1)}var As=this.vertices.length-us.length;return this.vertices=us,As},setFromPoints:function(ms){this.vertices=[];for(var us=0,fs=ms.length,gs;us<fs;us++)gs=ms[us],this.vertices.push(new T(gs.x,gs.y,gs.z||0));return this},sortFacesByMaterialIndex:function(){for(var us=this.faces,fs=us.length,gs=0;gs<fs;gs++)us[gs]._id=gs;us.sort(function(bs,Ms){return bs.materialIndex-Ms.materialIndex});var hs=this.faceVertexUvs[0],xs=this.faceVertexUvs[1],vs,_s;hs&&hs.length===fs&&(vs=[]),xs&&xs.length===fs&&(_s=[]);for(var gs=0,ys;gs<fs;gs++)ys=us[gs]._id,vs&&vs.push(hs[ys]),_s&&_s.push(xs[ys]);vs&&(this.faceVertexUvs[0]=vs),_s&&(this.faceVertexUvs[1]=_s)},toJSON:function(){function ms(Gs,ks,Ws){return Ws?Gs|1<<ks:Gs&~(1<<ks)}function us(Gs){var ks=Gs.x.toString()+Gs.y.toString()+Gs.z.toString();return void 0===Ls[ks]?(Ls[ks]=Ss.length/3,Ss.push(Gs.x,Gs.y,Gs.z),Ls[ks]):Ls[ks]}function fs(Gs){var ks=Gs.r.toString()+Gs.g.toString()+Gs.b.toString();return void 0===Ts[ks]?(Ts[ks]=ws.length,ws.push(Gs.getHex()),Ts[ks]):Ts[ks]}function gs(Gs){var ks=Gs.x.toString()+Gs.y.toString();return void 0===As[ks]?(As[ks]=Ps.length/2,Ps.push(Gs.x,Gs.y),As[ks]):As[ks]}var hs={metadata:{version:4.5,type:'Geometry',generator:'Geometry.toJSON'}};if(hs.uuid=this.uuid,hs.type=this.type,''!==this.name&&(hs.name=this.name),void 0!==this.parameters){var xs=this.parameters;for(var vs in xs)void 0!==xs[vs]&&(hs[vs]=xs[vs]);return hs}for(var _s=[],ys=0,bs;ys<this.vertices.length;ys++)bs=this.vertices[ys],_s.push(bs.x,bs.y,bs.z);for(var Ms=[],Ss=[],Ls={},ws=[],Ts={},Ps=[],As={},ys=0;ys<this.faces.length;ys++){var Cs=this.faces[ys],zs=void 0!==this.faceVertexUvs[0][ys],Is=0<Cs.normal.length(),Ns=0<Cs.vertexNormals.length,Us=1!==Cs.color.r||1!==Cs.color.g||1!==Cs.color.b,Rs=0<Cs.vertexColors.length,Fs=0;if(Fs=ms(Fs,0,0),Fs=ms(Fs,1,!0),Fs=ms(Fs,2,!1),Fs=ms(Fs,3,zs),Fs=ms(Fs,4,Is),Fs=ms(Fs,5,Ns),Fs=ms(Fs,6,Us),Fs=ms(Fs,7,Rs),Ms.push(Fs),Ms.push(Cs.a,Cs.b,Cs.c),Ms.push(Cs.materialIndex),zs){var Bs=this.faceVertexUvs[0][ys];Ms.push(gs(Bs[0]),gs(Bs[1]),gs(Bs[2]))}if(Is&&Ms.push(us(Cs.normal)),Ns){var Vs=Cs.vertexNormals;Ms.push(us(Vs[0]),us(Vs[1]),us(Vs[2]))}if(Us&&Ms.push(fs(Cs.color)),Rs){var Os=Cs.vertexColors;Ms.push(fs(Os[0]),fs(Os[1]),fs(Os[2]))}}return hs.data={},hs.data.vertices=_s,hs.data.normals=Ss,0<ws.length&&(hs.data.colors=ws),0<Ps.length&&(hs.data.uvs=[Ps]),hs.data.faces=Ms,hs},clone:function(){return new Y().copy(this)},copy:function(ms){var us,fs,gs,hs,xs,vs;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=ms.name;var _s=ms.vertices;for(us=0,fs=_s.length;us<fs;us++)this.vertices.push(_s[us].clone());var ys=ms.colors;for(us=0,fs=ys.length;us<fs;us++)this.colors.push(ys[us].clone());var bs=ms.faces;for(us=0,fs=bs.length;us<fs;us++)this.faces.push(bs[us].clone());for(us=0,fs=ms.faceVertexUvs.length;us<fs;us++){var Ms=ms.faceVertexUvs[us];for(void 0===this.faceVertexUvs[us]&&(this.faceVertexUvs[us]=[]),gs=0,hs=Ms.length;gs<hs;gs++){var Ss=Ms[gs],Ls=[];for(xs=0,vs=Ss.length;xs<vs;xs++){var ws=Ss[xs];Ls.push(ws.clone())}this.faceVertexUvs[us].push(Ls)}}var Ts=ms.morphTargets;for(us=0,fs=Ts.length;us<fs;us++){var Ps={name:Ts[us].name};if(void 0!==Ts[us].vertices)for(Ps.vertices=[],gs=0,hs=Ts[us].vertices.length;gs<hs;gs++)Ps.vertices.push(Ts[us].vertices[gs].clone());if(void 0!==Ts[us].normals)for(Ps.normals=[],gs=0,hs=Ts[us].normals.length;gs<hs;gs++)Ps.normals.push(Ts[us].normals[gs].clone());this.morphTargets.push(Ps)}var As=ms.morphNormals;for(us=0,fs=As.length;us<fs;us++){var Cs={};if(void 0!==As[us].vertexNormals)for(Cs.vertexNormals=[],gs=0,hs=As[us].vertexNormals.length;gs<hs;gs++){var Es=As[us].vertexNormals[gs],Ds={};Ds.a=Es.a.clone(),Ds.b=Es.b.clone(),Ds.c=Es.c.clone(),Cs.vertexNormals.push(Ds)}if(void 0!==As[us].faceNormals)for(Cs.faceNormals=[],gs=0,hs=As[us].faceNormals.length;gs<hs;gs++)Cs.faceNormals.push(As[us].faceNormals[gs].clone());this.morphNormals.push(Cs)}var zs=ms.skinWeights;for(us=0,fs=zs.length;us<fs;us++)this.skinWeights.push(zs[us].clone());var Is=ms.skinIndices;for(us=0,fs=Is.length;us<fs;us++)this.skinIndices.push(Is[us].clone());var Ns=ms.lineDistances;for(us=0,fs=Ns.length;us<fs;us++)this.lineDistances.push(Ns[us]);var Us=ms.boundingBox;null!==Us&&(this.boundingBox=Us.clone());var Rs=ms.boundingSphere;return null!==Rs&&(this.boundingSphere=Rs.clone()),this.elementsNeedUpdate=ms.elementsNeedUpdate,this.verticesNeedUpdate=ms.verticesNeedUpdate,this.uvsNeedUpdate=ms.uvsNeedUpdate,this.normalsNeedUpdate=ms.normalsNeedUpdate,this.colorsNeedUpdate=ms.colorsNeedUpdate,this.lineDistancesNeedUpdate=ms.lineDistancesNeedUpdate,this.groupsNeedUpdate=ms.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:'dispose'})}}),Object.defineProperty(Z.prototype,'needsUpdate',{set:function(ms){!0===ms&&this.version++}}),Object.assign(Z.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setArray:function(ms){if(Array.isArray(ms))throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');return this.count=void 0===ms?0:ms.length/this.itemSize,this.array=ms,this},setDynamic:function(ms){return this.dynamic=ms,this},copy:function(ms){return this.name=ms.name,this.array=new ms.array.constructor(ms.array),this.itemSize=ms.itemSize,this.count=ms.count,this.normalized=ms.normalized,this.dynamic=ms.dynamic,this},copyAt:function(ms,us,fs){ms*=this.itemSize,fs*=us.itemSize;for(var gs=0,hs=this.itemSize;gs<hs;gs++)this.array[ms+gs]=us.array[fs+gs];return this},copyArray:function(ms){return this.array.set(ms),this},copyColorsArray:function(ms){for(var us=this.array,fs=0,gs=0,hs=ms.length,xs;gs<hs;gs++)xs=ms[gs],void 0===xs&&(xs=new F),us[fs++]=xs.r,us[fs++]=xs.g,us[fs++]=xs.b;return this},copyVector2sArray:function(ms){for(var us=this.array,fs=0,gs=0,hs=ms.length,xs;gs<hs;gs++)xs=ms[gs],void 0===xs&&(xs=new M),us[fs++]=xs.x,us[fs++]=xs.y;return this},copyVector3sArray:function(ms){for(var us=this.array,fs=0,gs=0,hs=ms.length,xs;gs<hs;gs++)xs=ms[gs],void 0===xs&&(xs=new T),us[fs++]=xs.x,us[fs++]=xs.y,us[fs++]=xs.z;return this},copyVector4sArray:function(ms){for(var us=this.array,fs=0,gs=0,hs=ms.length,xs;gs<hs;gs++)xs=ms[gs],void 0===xs&&(xs=new B),us[fs++]=xs.x,us[fs++]=xs.y,us[fs++]=xs.z,us[fs++]=xs.w;return this},set:function(ms,us){return void 0===us&&(us=0),this.array.set(ms,us),this},getX:function(ms){return this.array[ms*this.itemSize]},setX:function(ms,us){return this.array[ms*this.itemSize]=us,this},getY:function(ms){return this.array[ms*this.itemSize+1]},setY:function(ms,us){return this.array[ms*this.itemSize+1]=us,this},getZ:function(ms){return this.array[ms*this.itemSize+2]},setZ:function(ms,us){return this.array[ms*this.itemSize+2]=us,this},getW:function(ms){return this.array[ms*this.itemSize+3]},setW:function(ms,us){return this.array[ms*this.itemSize+3]=us,this},setXY:function(ms,us,fs){return ms*=this.itemSize,this.array[ms+0]=us,this.array[ms+1]=fs,this},setXYZ:function(ms,us,fs,gs){return ms*=this.itemSize,this.array[ms+0]=us,this.array[ms+1]=fs,this.array[ms+2]=gs,this},setXYZW:function(ms,us,fs,gs,hs){return ms*=this.itemSize,this.array[ms+0]=us,this.array[ms+1]=fs,this.array[ms+2]=gs,this.array[ms+3]=hs,this},onUpload:function(ms){return this.onUploadCallback=ms,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),J.prototype=Object.create(Z.prototype),J.prototype.constructor=J,Q.prototype=Object.create(Z.prototype),Q.prototype.constructor=Q,K.prototype=Object.create(Z.prototype),K.prototype.constructor=K,$.prototype=Object.create(Z.prototype),$.prototype.constructor=$,ee.prototype=Object.create(Z.prototype),ee.prototype.constructor=ee,re.prototype=Object.create(Z.prototype),re.prototype.constructor=re,ie.prototype=Object.create(Z.prototype),ie.prototype.constructor=ie,ne.prototype=Object.create(Z.prototype),ne.prototype.constructor=ne,oe.prototype=Object.create(Z.prototype),oe.prototype.constructor=oe,Object.assign(se.prototype,{computeGroups:function(ms){for(var fs=[],gs=void 0,hs=ms.faces,xs=0,us,vs;xs<hs.length;xs++)vs=hs[xs],vs.materialIndex!==gs&&(gs=vs.materialIndex,void 0!=us&&(us.count=3*xs-us.start,fs.push(us)),us={start:3*xs,materialIndex:gs});us!==void 0&&(us.count=3*xs-us.start,fs.push(us)),this.groups=fs},fromGeometry:function(ms){var us=ms.faces,fs=ms.vertices,gs=ms.faceVertexUvs,hs=gs[0]&&0<gs[0].length,xs=gs[1]&&0<gs[1].length,vs=ms.morphTargets,_s=vs.length,ys;if(0<_s){ys=[];for(var bs=0;bs<_s;bs++)ys[bs]={name:vs[bs].name,data:[]};this.morphTargets.position=ys}var Ms=ms.morphNormals,Ss=Ms.length,Ls;if(0<Ss){Ls=[];for(var bs=0;bs<Ss;bs++)Ls[bs]={name:Ms[bs].name,data:[]};this.morphTargets.normal=Ls}var ws=ms.skinIndices,Ts=ms.skinWeights,Ps=ws.length===fs.length,As=Ts.length===fs.length;0<fs.length&&0===us.length;for(var bs=0,Cs;bs<us.length;bs++){Cs=us[bs],this.vertices.push(fs[Cs.a],fs[Cs.b],fs[Cs.c]);var Es=Cs.vertexNormals;if(3===Es.length)this.normals.push(Es[0],Es[1],Es[2]);else{var Ds=Cs.normal;this.normals.push(Ds,Ds,Ds)}var zs=Cs.vertexColors;if(3===zs.length)this.colors.push(zs[0],zs[1],zs[2]);else{var Is=Cs.color;this.colors.push(Is,Is,Is)}if(!0===hs){var Ns=gs[0][bs];void 0===Ns?this.uvs.push(new M,new M,new M):this.uvs.push(Ns[0],Ns[1],Ns[2])}if(!0===xs){var Ns=gs[1][bs];void 0===Ns?this.uvs2.push(new M,new M,new M):this.uvs2.push(Ns[0],Ns[1],Ns[2])}for(var Us=0,Rs;Us<_s;Us++)Rs=vs[Us].vertices,ys[Us].data.push(Rs[Cs.a],Rs[Cs.b],Rs[Cs.c]);for(var Us=0,Fs;Us<Ss;Us++)Fs=Ms[Us].vertexNormals[bs],Ls[Us].data.push(Fs.a,Fs.b,Fs.c);Ps&&this.skinIndices.push(ws[Cs.a],ws[Cs.b],ws[Cs.c]),As&&this.skinWeights.push(Ts[Cs.a],Ts[Cs.b],Ts[Cs.c])}return this.computeGroups(ms),this.verticesNeedUpdate=ms.verticesNeedUpdate,this.normalsNeedUpdate=ms.normalsNeedUpdate,this.colorsNeedUpdate=ms.colorsNeedUpdate,this.uvsNeedUpdate=ms.uvsNeedUpdate,this.groupsNeedUpdate=ms.groupsNeedUpdate,this}});var Qo=1;pe.prototype=Object.assign(Object.create(_.prototype),{constructor:pe,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(ms){this.index=Array.isArray(ms)?new(65535<le(ms)?ie:ee)(ms,1):ms},addAttribute:function(ms,us){return us&&us.isBufferAttribute||us&&us.isInterleavedBufferAttribute?'index'===ms?(this.setIndex(us),this):(this.attributes[ms]=us,this):this.addAttribute(ms,new Z(arguments[1],arguments[2]))},getAttribute:function(ms){return this.attributes[ms]},removeAttribute:function(ms){return delete this.attributes[ms],this},addGroup:function(ms,us,fs){this.groups.push({start:ms,count:us,materialIndex:fs===void 0?0:fs})},clearGroups:function(){this.groups=[]},setDrawRange:function(ms,us){this.drawRange.start=ms,this.drawRange.count=us},applyMatrix:function(ms){var us=this.attributes.position;void 0!==us&&(ms.applyToBufferAttribute(us),us.needsUpdate=!0);var fs=this.attributes.normal;if(void 0!==fs){var gs=new P().getNormalMatrix(ms);gs.applyToBufferAttribute(fs),fs.needsUpdate=!0}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var ms=new S;return function(fs){return ms.makeRotationX(fs),this.applyMatrix(ms),this}}(),rotateY:function(){var ms=new S;return function(fs){return ms.makeRotationY(fs),this.applyMatrix(ms),this}}(),rotateZ:function(){var ms=new S;return function(fs){return ms.makeRotationZ(fs),this.applyMatrix(ms),this}}(),translate:function(){var ms=new S;return function(fs,gs,hs){return ms.makeTranslation(fs,gs,hs),this.applyMatrix(ms),this}}(),scale:function(){var ms=new S;return function(fs,gs,hs){return ms.makeScale(fs,gs,hs),this.applyMatrix(ms),this}}(),lookAt:function(){var ms=new X;return function(fs){ms.lookAt(fs),ms.updateMatrix(),this.applyMatrix(ms.matrix)}}(),center:function(){var ms=new T;return function(){return this.computeBoundingBox(),this.boundingBox.getCenter(ms).negate(),this.translate(ms.x,ms.y,ms.z),this}}(),setFromObject:function(ms){var us=ms.geometry;if(ms.isPoints||ms.isLine){var fs=new ne(3*us.vertices.length,3),gs=new ne(3*us.colors.length,3);if(this.addAttribute('position',fs.copyVector3sArray(us.vertices)),this.addAttribute('color',gs.copyColorsArray(us.colors)),us.lineDistances&&us.lineDistances.length===us.vertices.length){var hs=new ne(us.lineDistances.length,1);this.addAttribute('lineDistance',hs.copyArray(us.lineDistances))}null!==us.boundingSphere&&(this.boundingSphere=us.boundingSphere.clone()),null!==us.boundingBox&&(this.boundingBox=us.boundingBox.clone())}else ms.isMesh&&us&&us.isGeometry&&this.fromGeometry(us);return this},setFromPoints:function(ms){for(var us=[],fs=0,gs=ms.length,hs;fs<gs;fs++)hs=ms[fs],us.push(hs.x,hs.y,hs.z||0);return this.addAttribute('position',new ne(us,3)),this},updateFromObject:function(ms){var us=ms.geometry;if(ms.isMesh){var fs=us.__directGeometry;if(!0===us.elementsNeedUpdate&&(fs=void 0,us.elementsNeedUpdate=!1),void 0===fs)return this.fromGeometry(us);fs.verticesNeedUpdate=us.verticesNeedUpdate,fs.normalsNeedUpdate=us.normalsNeedUpdate,fs.colorsNeedUpdate=us.colorsNeedUpdate,fs.uvsNeedUpdate=us.uvsNeedUpdate,fs.groupsNeedUpdate=us.groupsNeedUpdate,us.verticesNeedUpdate=!1,us.normalsNeedUpdate=!1,us.colorsNeedUpdate=!1,us.uvsNeedUpdate=!1,us.groupsNeedUpdate=!1,us=fs}var gs;return!0===us.verticesNeedUpdate&&(gs=this.attributes.position,void 0!=gs&&(gs.copyVector3sArray(us.vertices),gs.needsUpdate=!0),us.verticesNeedUpdate=!1),!0===us.normalsNeedUpdate&&(gs=this.attributes.normal,void 0!=gs&&(gs.copyVector3sArray(us.normals),gs.needsUpdate=!0),us.normalsNeedUpdate=!1),!0===us.colorsNeedUpdate&&(gs=this.attributes.color,void 0!=gs&&(gs.copyColorsArray(us.colors),gs.needsUpdate=!0),us.colorsNeedUpdate=!1),us.uvsNeedUpdate&&(gs=this.attributes.uv,void 0!=gs&&(gs.copyVector2sArray(us.uvs),gs.needsUpdate=!0),us.uvsNeedUpdate=!1),us.lineDistancesNeedUpdate&&(gs=this.attributes.lineDistance,void 0!=gs&&(gs.copyArray(us.lineDistances),gs.needsUpdate=!0),us.lineDistancesNeedUpdate=!1),us.groupsNeedUpdate&&(us.computeGroups(ms.geometry),this.groups=us.groups,us.groupsNeedUpdate=!1),this},fromGeometry:function(ms){return ms.__directGeometry=new se().fromGeometry(ms),this.fromDirectGeometry(ms.__directGeometry)},fromDirectGeometry:function(ms){var us=new Float32Array(3*ms.vertices.length);if(this.addAttribute('position',new Z(us,3).copyVector3sArray(ms.vertices)),0<ms.normals.length){var fs=new Float32Array(3*ms.normals.length);this.addAttribute('normal',new Z(fs,3).copyVector3sArray(ms.normals))}if(0<ms.colors.length){var gs=new Float32Array(3*ms.colors.length);this.addAttribute('color',new Z(gs,3).copyColorsArray(ms.colors))}if(0<ms.uvs.length){var hs=new Float32Array(2*ms.uvs.length);this.addAttribute('uv',new Z(hs,2).copyVector2sArray(ms.uvs))}if(0<ms.uvs2.length){var xs=new Float32Array(2*ms.uvs2.length);this.addAttribute('uv2',new Z(xs,2).copyVector2sArray(ms.uvs2))}for(var vs in this.groups=ms.groups,ms.morphTargets){for(var _s=[],ys=ms.morphTargets[vs],bs=0,Ms=ys.length;bs<Ms;bs++){var Ss=ys[bs],Ls=new ne(3*Ss.data.length,3);Ls.name=Ss.name,_s.push(Ls.copyVector3sArray(Ss.data))}this.morphAttributes[vs]=_s}if(0<ms.skinIndices.length){var ws=new ne(4*ms.skinIndices.length,4);this.addAttribute('skinIndex',ws.copyVector4sArray(ms.skinIndices))}if(0<ms.skinWeights.length){var Ts=new ne(4*ms.skinWeights.length,4);this.addAttribute('skinWeight',Ts.copyVector4sArray(ms.skinWeights))}return null!==ms.boundingSphere&&(this.boundingSphere=ms.boundingSphere.clone()),null!==ms.boundingBox&&(this.boundingBox=ms.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new E);var ms=this.attributes.position;ms===void 0?this.boundingBox.makeEmpty():this.boundingBox.setFromBufferAttribute(ms),isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)},computeBoundingSphere:function(){var ms=new E,us=new T;return function(){null===this.boundingSphere&&(this.boundingSphere=new D);var gs=this.attributes.position;if(gs){var hs=this.boundingSphere.center;ms.setFromBufferAttribute(gs),ms.getCenter(hs);for(var xs=0,vs=0,_s=gs.count;vs<_s;vs++)us.x=gs.getX(vs),us.y=gs.getY(vs),us.z=gs.getZ(vs),xs=Math.max(xs,hs.distanceToSquared(us));this.boundingSphere.radius=Math.sqrt(xs),isNaN(this.boundingSphere.radius)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var ms=this.index,us=this.attributes;if(us.position){var fs=us.position.array;if(us.normal===void 0)this.addAttribute('normal',new Z(new Float32Array(fs.length),3));else for(var gs=us.normal.array,hs=0,xs=gs.length;hs<xs;hs++)gs[hs]=0;var vs=us.normal.array,_s,ys,bs,Ms=new T,Ss=new T,Ls=new T,ws=new T,Ts=new T;if(ms)for(var Ps=ms.array,hs=0,xs=ms.count;hs<xs;hs+=3)_s=3*Ps[hs+0],ys=3*Ps[hs+1],bs=3*Ps[hs+2],Ms.fromArray(fs,_s),Ss.fromArray(fs,ys),Ls.fromArray(fs,bs),ws.subVectors(Ls,Ss),Ts.subVectors(Ms,Ss),ws.cross(Ts),vs[_s]+=ws.x,vs[_s+1]+=ws.y,vs[_s+2]+=ws.z,vs[ys]+=ws.x,vs[ys+1]+=ws.y,vs[ys+2]+=ws.z,vs[bs]+=ws.x,vs[bs+1]+=ws.y,vs[bs+2]+=ws.z;else for(var hs=0,xs=fs.length;hs<xs;hs+=9)Ms.fromArray(fs,hs),Ss.fromArray(fs,hs+3),Ls.fromArray(fs,hs+6),ws.subVectors(Ls,Ss),Ts.subVectors(Ms,Ss),ws.cross(Ts),vs[hs]=ws.x,vs[hs+1]=ws.y,vs[hs+2]=ws.z,vs[hs+3]=ws.x,vs[hs+4]=ws.y,vs[hs+5]=ws.z,vs[hs+6]=ws.x,vs[hs+7]=ws.y,vs[hs+8]=ws.z;this.normalizeNormals(),us.normal.needsUpdate=!0}},merge:function(ms,us){if(ms&&ms.isBufferGeometry){void 0===us&&(us=0);var fs=this.attributes;for(var gs in fs)if(void 0!==ms.attributes[gs])for(var hs=fs[gs],xs=hs.array,vs=ms.attributes[gs],_s=vs.array,ys=vs.itemSize,bs=0,Ms=ys*us;bs<_s.length;bs++,Ms++)xs[Ms]=_s[bs];return this}},normalizeNormals:function(){var ms=new T;return function(){for(var fs=this.attributes.normal,gs=0,hs=fs.count;gs<hs;gs++)ms.x=fs.getX(gs),ms.y=fs.getY(gs),ms.z=fs.getZ(gs),ms.normalize(),fs.setXYZ(gs,ms.x,ms.y,ms.z)}}(),toNonIndexed:function(){if(null===this.index)return this;var ms=new pe,us=this.index.array,fs=this.attributes;for(var gs in fs){for(var hs=fs[gs],xs=hs.array,vs=hs.itemSize,_s=new xs.constructor(us.length*vs),ys=0,bs=0,Ms=0,Ss=us.length;Ms<Ss;Ms++){ys=us[Ms]*vs;for(var Ls=0;Ls<vs;Ls++)_s[bs++]=xs[ys++]}ms.addAttribute(gs,new Z(_s,vs))}for(var ws=this.groups,Ms=0,Ss=ws.length,Ts;Ms<Ss;Ms++)Ts=ws[Ms],ms.addGroup(Ts.start,Ts.count,Ts.materialIndex);return ms},toJSON:function(){var ms={metadata:{version:4.5,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};if(ms.uuid=this.uuid,ms.type=this.type,''!==this.name&&(ms.name=this.name),0<Object.keys(this.userData).length&&(ms.userData=this.userData),void 0!==this.parameters){var us=this.parameters;for(var fs in us)void 0!==us[fs]&&(ms[fs]=us[fs]);return ms}ms.data={attributes:{}};var gs=this.index;if(null!==gs){var hs=Array.prototype.slice.call(gs.array);ms.data.index={type:gs.array.constructor.name,array:hs}}var xs=this.attributes;for(var fs in xs){var vs=xs[fs],hs=Array.prototype.slice.call(vs.array);ms.data.attributes[fs]={itemSize:vs.itemSize,type:vs.array.constructor.name,array:hs,normalized:vs.normalized}}var _s=this.groups;0<_s.length&&(ms.data.groups=JSON.parse(JSON.stringify(_s)));var ys=this.boundingSphere;return null!==ys&&(ms.data.boundingSphere={center:ys.center.toArray(),radius:ys.radius}),ms},clone:function(){return new pe().copy(this)},copy:function(ms){var us,fs,gs;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=ms.name;var hs=ms.index;null!==hs&&this.setIndex(hs.clone());var xs=ms.attributes;for(us in xs){var vs=xs[us];this.addAttribute(us,vs.clone())}var _s=ms.morphAttributes;for(us in _s){var ys=[],bs=_s[us];for(fs=0,gs=bs.length;fs<gs;fs++)ys.push(bs[fs].clone());this.morphAttributes[us]=ys}var Ms=ms.groups;for(fs=0,gs=Ms.length;fs<gs;fs++){var Ss=Ms[fs];this.addGroup(Ss.start,Ss.count,Ss.materialIndex)}var Ls=ms.boundingBox;null!==Ls&&(this.boundingBox=Ls.clone());var ws=ms.boundingSphere;return null!==ws&&(this.boundingSphere=ws.clone()),this.drawRange.start=ms.drawRange.start,this.drawRange.count=ms.drawRange.count,this.userData=ms.userData,this},dispose:function(){this.dispatchEvent({type:'dispose'})}}),ue.prototype=Object.create(Y.prototype),ue.prototype.constructor=ue,fe.prototype=Object.create(pe.prototype),fe.prototype.constructor=fe,ge.prototype=Object.create(Y.prototype),ge.prototype.constructor=ge,he.prototype=Object.create(pe.prototype),he.prototype.constructor=he;var Ko=0;xe.prototype=Object.assign(Object.create(_.prototype),{constructor:xe,isMaterial:!0,onBeforeCompile:function(){},setValues:function(ms){if(void 0!==ms)for(var us in ms){var fs=ms[us];if(void 0!==fs){if('shading'==us){this.flatShading=fs===1;continue}var gs=this[us];void 0!==gs&&(gs&&gs.isColor?gs.set(fs):gs&&gs.isVector3&&fs&&fs.isVector3?gs.copy(fs):this[us]=fs)}}},toJSON:function(ms){function us(vs){var _s=[];for(var ys in vs){var bs=vs[ys];delete bs.metadata,_s.push(bs)}return _s}var fs=void 0===ms||'string'==typeof ms;fs&&(ms={textures:{},images:{}});var gs={metadata:{version:4.5,type:'Material',generator:'Material.toJSON'}};if(gs.uuid=this.uuid,gs.type=this.type,''!==this.name&&(gs.name=this.name),this.color&&this.color.isColor&&(gs.color=this.color.getHex()),void 0!==this.roughness&&(gs.roughness=this.roughness),void 0!==this.metalness&&(gs.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(gs.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(gs.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(gs.specular=this.specular.getHex()),void 0!==this.shininess&&(gs.shininess=this.shininess),void 0!==this.clearCoat&&(gs.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(gs.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(gs.map=this.map.toJSON(ms).uuid),this.alphaMap&&this.alphaMap.isTexture&&(gs.alphaMap=this.alphaMap.toJSON(ms).uuid),this.lightMap&&this.lightMap.isTexture&&(gs.lightMap=this.lightMap.toJSON(ms).uuid),this.aoMap&&this.aoMap.isTexture&&(gs.aoMap=this.aoMap.toJSON(ms).uuid,gs.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(gs.bumpMap=this.bumpMap.toJSON(ms).uuid,gs.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(gs.normalMap=this.normalMap.toJSON(ms).uuid,gs.normalMapType=this.normalMapType,gs.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(gs.displacementMap=this.displacementMap.toJSON(ms).uuid,gs.displacementScale=this.displacementScale,gs.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(gs.roughnessMap=this.roughnessMap.toJSON(ms).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(gs.metalnessMap=this.metalnessMap.toJSON(ms).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(gs.emissiveMap=this.emissiveMap.toJSON(ms).uuid),this.specularMap&&this.specularMap.isTexture&&(gs.specularMap=this.specularMap.toJSON(ms).uuid),this.envMap&&this.envMap.isTexture&&(gs.envMap=this.envMap.toJSON(ms).uuid,gs.reflectivity=this.reflectivity,void 0!==this.combine&&(gs.combine=this.combine),void 0!==this.envMapIntensity&&(gs.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(gs.gradientMap=this.gradientMap.toJSON(ms).uuid),void 0!==this.size&&(gs.size=this.size),void 0!==this.sizeAttenuation&&(gs.sizeAttenuation=this.sizeAttenuation),this.blending!==Sa&&(gs.blending=this.blending),!0===this.flatShading&&(gs.flatShading=this.flatShading),this.side!==ha&&(gs.side=this.side),this.vertexColors!==ba&&(gs.vertexColors=this.vertexColors),1>this.opacity&&(gs.opacity=this.opacity),!0===this.transparent&&(gs.transparent=this.transparent),gs.depthFunc=this.depthFunc,gs.depthTest=this.depthTest,gs.depthWrite=this.depthWrite,0!==this.rotation&&(gs.rotation=this.rotation),!0===this.polygonOffset&&(gs.polygonOffset=!0),0!==this.polygonOffsetFactor&&(gs.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(gs.polygonOffsetUnits=this.polygonOffsetUnits),1!==this.linewidth&&(gs.linewidth=this.linewidth),void 0!==this.dashSize&&(gs.dashSize=this.dashSize),void 0!==this.gapSize&&(gs.gapSize=this.gapSize),void 0!==this.scale&&(gs.scale=this.scale),!0===this.dithering&&(gs.dithering=!0),0<this.alphaTest&&(gs.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(gs.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(gs.wireframe=this.wireframe),1<this.wireframeLinewidth&&(gs.wireframeLinewidth=this.wireframeLinewidth),'round'!==this.wireframeLinecap&&(gs.wireframeLinecap=this.wireframeLinecap),'round'!==this.wireframeLinejoin&&(gs.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(gs.morphTargets=!0),!0===this.skinning&&(gs.skinning=!0),!1===this.visible&&(gs.visible=!1),'{}'!==JSON.stringify(this.userData)&&(gs.userData=this.userData),fs){var hs=us(ms.textures),xs=us(ms.images);0<hs.length&&(gs.textures=hs),0<xs.length&&(gs.images=xs)}return gs},clone:function(){return new this.constructor().copy(this)},copy:function(ms){this.name=ms.name,this.fog=ms.fog,this.lights=ms.lights,this.blending=ms.blending,this.side=ms.side,this.flatShading=ms.flatShading,this.vertexColors=ms.vertexColors,this.opacity=ms.opacity,this.transparent=ms.transparent,this.blendSrc=ms.blendSrc,this.blendDst=ms.blendDst,this.blendEquation=ms.blendEquation,this.blendSrcAlpha=ms.blendSrcAlpha,this.blendDstAlpha=ms.blendDstAlpha,this.blendEquationAlpha=ms.blendEquationAlpha,this.depthFunc=ms.depthFunc,this.depthTest=ms.depthTest,this.depthWrite=ms.depthWrite,this.colorWrite=ms.colorWrite,this.precision=ms.precision,this.polygonOffset=ms.polygonOffset,this.polygonOffsetFactor=ms.polygonOffsetFactor,this.polygonOffsetUnits=ms.polygonOffsetUnits,this.dithering=ms.dithering,this.alphaTest=ms.alphaTest,this.premultipliedAlpha=ms.premultipliedAlpha,this.visible=ms.visible,this.userData=JSON.parse(JSON.stringify(ms.userData)),this.clipShadows=ms.clipShadows,this.clipIntersection=ms.clipIntersection;var us=ms.clippingPlanes,fs=null;if(null!==us){var gs=us.length;fs=Array(gs);for(var hs=0;hs!==gs;++hs)fs[hs]=us[hs].clone()}return this.clippingPlanes=fs,this.shadowSide=ms.shadowSide,this},dispose:function(){this.dispatchEvent({type:'dispose'})}}),ve.prototype=Object.create(xe.prototype),ve.prototype.constructor=ve,ve.prototype.isShaderMaterial=!0,ve.prototype.copy=function(ms){return xe.prototype.copy.call(this,ms),this.fragmentShader=ms.fragmentShader,this.vertexShader=ms.vertexShader,this.uniforms=U(ms.uniforms),this.defines=Object.assign({},ms.defines),this.wireframe=ms.wireframe,this.wireframeLinewidth=ms.wireframeLinewidth,this.lights=ms.lights,this.clipping=ms.clipping,this.skinning=ms.skinning,this.morphTargets=ms.morphTargets,this.morphNormals=ms.morphNormals,this.extensions=ms.extensions,this},ve.prototype.toJSON=function(ms){var us=xe.prototype.toJSON.call(this,ms);for(var fs in us.uniforms={},this.uniforms){var gs=this.uniforms[fs],hs=gs.value;us.uniforms[fs]=hs&&hs.isTexture?{type:'t',value:hs.toJSON(ms).uuid}:hs&&hs.isColor?{type:'c',value:hs.getHex()}:hs&&hs.isVector2?{type:'v2',value:hs.toArray()}:hs&&hs.isVector3?{type:'v3',value:hs.toArray()}:hs&&hs.isVector4?{type:'v4',value:hs.toArray()}:hs&&hs.isMatrix4?{type:'m4',value:hs.toArray()}:{value:hs}}0<Object.keys(this.defines).length&&(us.defines=this.defines),us.vertexShader=this.vertexShader,us.fragmentShader=this.fragmentShader;var xs={};for(var vs in this.extensions)!0===this.extensions[vs]&&(xs[vs]=!0);return 0<Object.keys(xs).length&&(us.extensions=xs),us},Object.assign(_e.prototype,{set:function(ms,us){return this.origin.copy(ms),this.direction.copy(us),this},clone:function(){return new this.constructor().copy(this)},copy:function(ms){return this.origin.copy(ms.origin),this.direction.copy(ms.direction),this},at:function(ms,us){return void 0===us&&(us=new T),us.copy(this.direction).multiplyScalar(ms).add(this.origin)},lookAt:function(ms){return this.direction.copy(ms).sub(this.origin).normalize(),this},recast:function(){var ms=new T;return function(fs){return this.origin.copy(this.at(fs,ms)),this}}(),closestPointToPoint:function(ms,us){void 0===us&&(us=new T);us.subVectors(ms,this.origin);var fs=us.dot(this.direction);return 0>fs?us.copy(this.origin):us.copy(this.direction).multiplyScalar(fs).add(this.origin)},distanceToPoint:function(ms){return Math.sqrt(this.distanceSqToPoint(ms))},distanceSqToPoint:function(){var ms=new T;return function(fs){var gs=ms.subVectors(fs,this.origin).dot(this.direction);return 0>gs?this.origin.distanceToSquared(fs):(ms.copy(this.direction).multiplyScalar(gs).add(this.origin),ms.distanceToSquared(fs))}}(),distanceSqToSegment:function(){var ms=new T,us=new T,fs=new T;return function(hs,xs,vs,_s){ms.copy(hs).add(xs).multiplyScalar(0.5),us.copy(xs).sub(hs).normalize(),fs.copy(this.origin).sub(ms);var ys=0.5*hs.distanceTo(xs),bs=-this.direction.dot(us),Ms=fs.dot(this.direction),Ss=-fs.dot(us),Ls=fs.lengthSq(),ws=Math.abs(1-bs*bs),Ts,Ps,As,Cs;if(!(0<ws))Ps=0<bs?-ys:ys,Ts=Math.max(0,-(bs*Ps+Ms)),As=-Ts*Ts+Ps*(Ps+2*Ss)+Ls;else if(Ts=bs*Ss-Ms,Ps=bs*Ms-Ss,Cs=ys*ws,!(0<=Ts))Ps<=-Cs?(Ts=Math.max(0,-(-bs*ys+Ms)),Ps=0<Ts?-ys:Math.min(Math.max(-ys,-Ss),ys),As=-Ts*Ts+Ps*(Ps+2*Ss)+Ls):Ps<=Cs?(Ts=0,Ps=Math.min(Math.max(-ys,-Ss),ys),As=Ps*(Ps+2*Ss)+Ls):(Ts=Math.max(0,-(bs*ys+Ms)),Ps=0<Ts?ys:Math.min(Math.max(-ys,-Ss),ys),As=-Ts*Ts+Ps*(Ps+2*Ss)+Ls);else if(!(Ps>=-Cs))Ps=-ys,Ts=Math.max(0,-(bs*Ps+Ms)),As=-Ts*Ts+Ps*(Ps+2*Ss)+Ls;else if(Ps<=Cs){var Es=1/ws;Ts*=Es,Ps*=Es,As=Ts*(Ts+bs*Ps+2*Ms)+Ps*(bs*Ts+Ps+2*Ss)+Ls}else Ps=ys,Ts=Math.max(0,-(bs*Ps+Ms)),As=-Ts*Ts+Ps*(Ps+2*Ss)+Ls;return vs&&vs.copy(this.direction).multiplyScalar(Ts).add(this.origin),_s&&_s.copy(us).multiplyScalar(Ps).add(ms),As}}(),intersectSphere:function(){var ms=new T;return function(fs,gs){ms.subVectors(fs.center,this.origin);var hs=ms.dot(this.direction),xs=ms.dot(ms)-hs*hs,vs=fs.radius*fs.radius;if(xs>vs)return null;var _s=Math.sqrt(vs-xs),ys=hs-_s,bs=hs+_s;return 0>ys&&0>bs?null:0>ys?this.at(bs,gs):this.at(ys,gs)}}(),intersectsSphere:function(ms){return this.distanceSqToPoint(ms.center)<=ms.radius*ms.radius},distanceToPlane:function(ms){var us=ms.normal.dot(this.direction);if(0===us)return 0===ms.distanceToPoint(this.origin)?0:null;var fs=-(this.origin.dot(ms.normal)+ms.constant)/us;return 0<=fs?fs:null},intersectPlane:function(ms,us){var fs=this.distanceToPlane(ms);return null===fs?null:this.at(fs,us)},intersectsPlane:function(ms){var us=ms.distanceToPoint(this.origin);if(0===us)return!0;var fs=ms.normal.dot(this.direction);return!!(0>fs*us)},intersectBox:function(ms,us){var ys=1/this.direction.x,bs=1/this.direction.y,Ms=1/this.direction.z,Ss=this.origin,fs,gs,hs,xs,vs,_s;return(0<=ys?(fs=(ms.min.x-Ss.x)*ys,gs=(ms.max.x-Ss.x)*ys):(fs=(ms.max.x-Ss.x)*ys,gs=(ms.min.x-Ss.x)*ys),0<=bs?(hs=(ms.min.y-Ss.y)*bs,xs=(ms.max.y-Ss.y)*bs):(hs=(ms.max.y-Ss.y)*bs,xs=(ms.min.y-Ss.y)*bs),fs>xs||hs>gs)?null:((hs>fs||fs!=fs)&&(fs=hs),(xs<gs||gs!=gs)&&(gs=xs),0<=Ms?(vs=(ms.min.z-Ss.z)*Ms,_s=(ms.max.z-Ss.z)*Ms):(vs=(ms.max.z-Ss.z)*Ms,_s=(ms.min.z-Ss.z)*Ms),fs>_s||vs>gs)?null:((vs>fs||fs!=fs)&&(fs=vs),(_s<gs||gs!=gs)&&(gs=_s),0>gs?null:this.at(0<=fs?fs:gs,us))},intersectsBox:function(){var ms=new T;return function(fs){return null!==this.intersectBox(fs,ms)}}(),intersectTriangle:function(){var ms=new T,us=new T,fs=new T,gs=new T;return function(xs,vs,_s,ys,bs){us.subVectors(vs,xs),fs.subVectors(_s,xs),gs.crossVectors(us,fs);var Ms=this.direction.dot(gs),Ss;if(0<Ms){if(ys)return null;Ss=1}else if(0>Ms)Ss=-1,Ms=-Ms;else return null;ms.subVectors(this.origin,xs);var Ls=Ss*this.direction.dot(fs.crossVectors(ms,fs));if(0>Ls)return null;var ws=Ss*this.direction.dot(us.cross(ms));if(0>ws)return null;if(Ls+ws>Ms)return null;var Ts=-Ss*ms.dot(gs);return 0>Ts?null:this.at(Ts/Ms,bs)}}(),applyMatrix4:function(ms){return this.origin.applyMatrix4(ms),this.direction.transformDirection(ms),this},equals:function(ms){return ms.origin.equals(this.origin)&&ms.direction.equals(this.direction)}}),Object.assign(ye,{getNormal:function(){var ms=new T;return function(fs,gs,hs,xs){void 0===xs&&(xs=new T);xs.subVectors(hs,gs),ms.subVectors(fs,gs),xs.cross(ms);var vs=xs.lengthSq();return 0<vs?xs.multiplyScalar(1/Math.sqrt(vs)):xs.set(0,0,0)}}(),getBarycoord:function(){var ms=new T,us=new T,fs=new T;return function(hs,xs,vs,_s,ys){ms.subVectors(_s,xs),us.subVectors(vs,xs),fs.subVectors(hs,xs);var bs=ms.dot(ms),Ms=ms.dot(us),Ss=ms.dot(fs),Ls=us.dot(us),ws=us.dot(fs),Ts=bs*Ls-Ms*Ms;if(void 0===ys&&(ys=new T),0==Ts)return ys.set(-2,-1,-1);var Ps=1/Ts,As=(Ls*Ss-Ms*ws)*Ps,Cs=(bs*ws-Ms*Ss)*Ps;return ys.set(1-As-Cs,Cs,As)}}(),containsPoint:function(){var ms=new T;return function(fs,gs,hs,xs){return ye.getBarycoord(fs,gs,hs,xs,ms),0<=ms.x&&0<=ms.y&&1>=ms.x+ms.y}}(),getUV:function(){var ms=new T;return function(fs,gs,hs,xs,vs,_s,ys,bs){return this.getBarycoord(fs,gs,hs,xs,ms),bs.set(0,0),bs.addScaledVector(vs,ms.x),bs.addScaledVector(_s,ms.y),bs.addScaledVector(ys,ms.z),bs}}()}),Object.assign(ye.prototype,{set:function(ms,us,fs){return this.a.copy(ms),this.b.copy(us),this.c.copy(fs),this},setFromPointsAndIndices:function(ms,us,fs,gs){return this.a.copy(ms[us]),this.b.copy(ms[fs]),this.c.copy(ms[gs]),this},clone:function(){return new this.constructor().copy(this)},copy:function(ms){return this.a.copy(ms.a),this.b.copy(ms.b),this.c.copy(ms.c),this},getArea:function(){var ms=new T,us=new T;return function(){return ms.subVectors(this.c,this.b),us.subVectors(this.a,this.b),0.5*ms.cross(us).length()}}(),getMidpoint:function(ms){return void 0===ms&&(ms=new T),ms.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(ms){return ye.getNormal(this.a,this.b,this.c,ms)},getPlane:function(ms){return void 0===ms&&(ms=new T),ms.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(ms,us){return ye.getBarycoord(ms,this.a,this.b,this.c,us)},containsPoint:function(ms){return ye.containsPoint(ms,this.a,this.b,this.c)},getUV:function(ms,us,fs,gs,hs){return ye.getUV(ms,this.a,this.b,this.c,us,fs,gs,hs)},intersectsBox:function(ms){return ms.intersectsTriangle(this)},closestPointToPoint:function(){var ms=new T,us=new T,fs=new T,gs=new T,hs=new T,xs=new T;return function(_s,ys){void 0===ys&&(ys=new T);var bs=this.a,Ms=this.b,Ss=this.c,Ls,ws;ms.subVectors(Ms,bs),us.subVectors(Ss,bs),gs.subVectors(_s,bs);var Ts=ms.dot(gs),Ps=us.dot(gs);if(0>=Ts&&0>=Ps)return ys.copy(bs);hs.subVectors(_s,Ms);var As=ms.dot(hs),Cs=us.dot(hs);if(0<=As&&Cs<=As)return ys.copy(Ms);var Es=Ts*Cs-As*Ps;if(0>=Es&&0<=Ts&&0>=As)return Ls=Ts/(Ts-As),ys.copy(bs).addScaledVector(ms,Ls);xs.subVectors(_s,Ss);var Ds=ms.dot(xs),zs=us.dot(xs);if(0<=zs&&Ds<=zs)return ys.copy(Ss);var Is=Ds*Ps-Ts*zs;if(0>=Is&&0<=Ps&&0>=zs)return ws=Ps/(Ps-zs),ys.copy(bs).addScaledVector(us,ws);var Ns=As*zs-Ds*Cs;if(0>=Ns&&0<=Cs-As&&0<=Ds-zs)return fs.subVectors(Ss,Ms),ws=(Cs-As)/(Cs-As+(Ds-zs)),ys.copy(Ms).addScaledVector(fs,ws);var Us=1/(Ns+Is+Es);return Ls=Is*Us,ws=Es*Us,ys.copy(bs).addScaledVector(ms,Ls).addScaledVector(us,ws)}}(),equals:function(ms){return ms.a.equals(this.a)&&ms.b.equals(this.b)&&ms.c.equals(this.c)}}),Me.prototype=Object.create(xe.prototype),Me.prototype.constructor=Me,Me.prototype.isMeshBasicMaterial=!0,Me.prototype.copy=function(ms){return xe.prototype.copy.call(this,ms),this.color.copy(ms.color),this.map=ms.map,this.lightMap=ms.lightMap,this.lightMapIntensity=ms.lightMapIntensity,this.aoMap=ms.aoMap,this.aoMapIntensity=ms.aoMapIntensity,this.specularMap=ms.specularMap,this.alphaMap=ms.alphaMap,this.envMap=ms.envMap,this.combine=ms.combine,this.reflectivity=ms.reflectivity,this.refractionRatio=ms.refractionRatio,this.wireframe=ms.wireframe,this.wireframeLinewidth=ms.wireframeLinewidth,this.wireframeLinecap=ms.wireframeLinecap,this.wireframeLinejoin=ms.wireframeLinejoin,this.skinning=ms.skinning,this.morphTargets=ms.morphTargets,this},Se.prototype=Object.assign(Object.create(X.prototype),{constructor:Se,isMesh:!0,setDrawMode:function(ms){this.drawMode=ms},copy:function(ms){return X.prototype.copy.call(this,ms),this.drawMode=ms.drawMode,void 0!==ms.morphTargetInfluences&&(this.morphTargetInfluences=ms.morphTargetInfluences.slice()),void 0!==ms.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},ms.morphTargetDictionary)),this},updateMorphTargets:function(){var ms=this.geometry,us,fs,gs;if(ms.isBufferGeometry){var hs=ms.morphAttributes,xs=Object.keys(hs);if(0<xs.length){var vs=hs[xs[0]];if(vs!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},(us=0,fs=vs.length);us<fs;us++)gs=vs[us].name||us+'',this.morphTargetInfluences.push(0),this.morphTargetDictionary[gs]=us}}else{var _s=ms.morphTargets;_s!==void 0&&0<_s.length}},raycast:function(){function ms(As,Cs,Es,Ds,zs,Is,Ns,Us){var Rs;if(Rs=Cs.side===xa?Ds.intersectTriangle(Ns,Is,zs,!0,Us):Ds.intersectTriangle(zs,Is,Ns,Cs.side!==_a,Us),null===Rs)return null;Ps.copy(Us),Ps.applyMatrix4(As.matrixWorld);var Fs=Es.ray.origin.distanceTo(Ps);return Fs<Es.near||Fs>Es.far?null:{distance:Fs,point:Ps.clone(),object:As}}function us(As,Cs,Es,Ds,zs,Is,Ns,Us,Rs){xs.fromBufferAttribute(zs,Ns),vs.fromBufferAttribute(zs,Us),_s.fromBufferAttribute(zs,Rs);var Fs=ms(As,Cs,Es,Ds,xs,vs,_s,Ts);if(Fs){Is&&(Ss.fromBufferAttribute(Is,Ns),Ls.fromBufferAttribute(Is,Us),ws.fromBufferAttribute(Is,Rs),Fs.uv=ye.getUV(Ts,xs,vs,_s,Ss,Ls,ws,new M));var Bs=new G(Ns,Us,Rs);ye.getNormal(xs,vs,_s,Bs.normal),Fs.face=Bs}return Fs}var fs=new S,gs=new _e,hs=new D,xs=new T,vs=new T,_s=new T,ys=new T,bs=new T,Ms=new T,Ss=new M,Ls=new M,ws=new M,Ts=new T,Ps=new T;return function(Cs,Es){var Ds=this.geometry,zs=this.material,Is=this.matrixWorld;if(void 0!==zs&&(null===Ds.boundingSphere&&Ds.computeBoundingSphere(),hs.copy(Ds.boundingSphere),hs.applyMatrix4(Is),!1!==Cs.ray.intersectsSphere(hs))&&(fs.getInverse(Is),gs.copy(Cs.ray).applyMatrix4(fs),null===Ds.boundingBox||!1!==gs.intersectsBox(Ds.boundingBox))){var Ns;if(Ds.isBufferGeometry){var Bs=Ds.index,Vs=Ds.attributes.position,Os=Ds.attributes.uv,Gs=Ds.groups,ks=Ds.drawRange,Us,Rs,Fs,Ws,Hs,Xs,js,qs,Ys,Zs,Js;if(null!==Bs){if(Array.isArray(zs))for(Ws=0,Xs=Gs.length;Ws<Xs;Ws++)for(qs=Gs[Ws],Ys=zs[qs.materialIndex],Zs=Math.max(qs.start,ks.start),Js=Math.min(qs.start+qs.count,ks.start+ks.count),(Hs=Zs,js=Js);Hs<js;Hs+=3)Us=Bs.getX(Hs),Rs=Bs.getX(Hs+1),Fs=Bs.getX(Hs+2),Ns=us(this,Ys,Cs,gs,Vs,Os,Us,Rs,Fs),Ns&&(Ns.faceIndex=Math.floor(Hs/3),Es.push(Ns));else for(Zs=Math.max(0,ks.start),Js=Math.min(Bs.count,ks.start+ks.count),(Ws=Zs,Xs=Js);Ws<Xs;Ws+=3)Us=Bs.getX(Ws),Rs=Bs.getX(Ws+1),Fs=Bs.getX(Ws+2),Ns=us(this,zs,Cs,gs,Vs,Os,Us,Rs,Fs),Ns&&(Ns.faceIndex=Math.floor(Ws/3),Es.push(Ns));}else if(void 0!==Vs)if(Array.isArray(zs))for(Ws=0,Xs=Gs.length;Ws<Xs;Ws++)for(qs=Gs[Ws],Ys=zs[qs.materialIndex],Zs=Math.max(qs.start,ks.start),Js=Math.min(qs.start+qs.count,ks.start+ks.count),(Hs=Zs,js=Js);Hs<js;Hs+=3)Us=Hs,Rs=Hs+1,Fs=Hs+2,Ns=us(this,Ys,Cs,gs,Vs,Os,Us,Rs,Fs),Ns&&(Ns.faceIndex=Math.floor(Hs/3),Es.push(Ns));else for(Zs=Math.max(0,ks.start),Js=Math.min(Vs.count,ks.start+ks.count),(Ws=Zs,Xs=Js);Ws<Xs;Ws+=3)Us=Ws,Rs=Ws+1,Fs=Ws+2,Ns=us(this,zs,Cs,gs,Vs,Os,Us,Rs,Fs),Ns&&(Ns.faceIndex=Math.floor(Ws/3),Es.push(Ns))}else if(Ds.isGeometry){var el=Array.isArray(zs),al=Ds.vertices,rl=Ds.faces,ol=Ds.faceVertexUvs[0],Qs,Ks,$s,nl;0<ol.length&&(nl=ol);for(var sl=0,ll=rl.length;sl<ll;sl++){var dl=rl[sl],cl=el?zs[dl.materialIndex]:zs;if(void 0!==cl){if(Qs=al[dl.a],Ks=al[dl.b],$s=al[dl.c],!0===cl.morphTargets){var ul=Ds.morphTargets,hl=this.morphTargetInfluences;xs.set(0,0,0),vs.set(0,0,0),_s.set(0,0,0);for(var xl=0,_l=ul.length,yl;xl<_l;xl++)if(yl=hl[xl],0!==yl){var bl=ul[xl].vertices;xs.addScaledVector(ys.subVectors(bl[dl.a],Qs),yl),vs.addScaledVector(bs.subVectors(bl[dl.b],Ks),yl),_s.addScaledVector(Ms.subVectors(bl[dl.c],$s),yl)}xs.add(Qs),vs.add(Ks),_s.add($s),Qs=xs,Ks=vs,$s=_s}if(Ns=ms(this,cl,Cs,gs,Qs,Ks,$s,Ts),Ns){if(nl&&nl[sl]){var Ml=nl[sl];Ss.copy(Ml[0]),Ls.copy(Ml[1]),ws.copy(Ml[2]),Ns.uv=ye.getUV(Ts,Qs,Ks,$s,Ss,Ls,ws,new M)}Ns.face=dl,Ns.faceIndex=sl,Es.push(Ns)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ue.prototype=Object.create(A.prototype),Ue.prototype.constructor=Ue,Ue.prototype.isCubeTexture=!0,Object.defineProperty(Ue.prototype,'images',{get:function(){return this.image},set:function(ms){this.image=ms}}),Re.prototype=Object.create(A.prototype),Re.prototype.constructor=Re,Re.prototype.isDataTexture3D=!0;var $o=new A,es=new Re,ts=new Ue,as=[],rs=[],is=new Float32Array(16),ns=new Float32Array(9),os=new Float32Array(4);gt.prototype.updateCache=function(ms){var us=this.cache;ms instanceof Float32Array&&us.length!==ms.length&&(this.cache=new Float32Array(ms.length)),Oe(us,ms)},ht.prototype.setValue=function(ms,us,fs){for(var gs=this.seq,hs=0,xs=gs.length,vs;hs!==xs;++hs)vs=gs[hs],vs.setValue(ms,us[vs.id],fs)};var ss=/([\w\d_]+)(\])?(\[|\.)?/g;_t.prototype.setValue=function(ms,us,fs){var gs=this.map[us];gs!==void 0&&gs.setValue(ms,fs,this.renderer)},_t.prototype.setOptional=function(ms,us,fs){var gs=us[fs];gs!==void 0&&this.setValue(ms,fs,gs)},_t.upload=function(ms,us,fs,gs){for(var hs=0,xs=us.length;hs!==xs;++hs){var vs=us[hs],_s=fs[vs.id];!1!==_s.needsUpdate&&vs.setValue(ms,_s.value,gs)}},_t.seqWithValue=function(ms,us){for(var fs=[],gs=0,hs=ms.length,xs;gs!==hs;++gs)xs=ms[gs],xs.id in us&&fs.push(xs);return fs};var ls=0,ds=0;Xt.prototype=Object.assign(Object.create(_.prototype),{constructor:Xt,isWebGLRenderTarget:!0,setSize:function(ms,us){(this.width!==ms||this.height!==us)&&(this.width=ms,this.height=us,this.dispose()),this.viewport.set(0,0,ms,us),this.scissor.set(0,0,ms,us)},clone:function(){return new this.constructor().copy(this)},copy:function(ms){return this.width=ms.width,this.height=ms.height,this.viewport.copy(ms.viewport),this.texture=ms.texture.clone(),this.depthBuffer=ms.depthBuffer,this.stencilBuffer=ms.stencilBuffer,this.depthTexture=ms.depthTexture,this},dispose:function(){this.dispatchEvent({type:'dispose'})}}),jt.prototype=Object.create(xe.prototype),jt.prototype.constructor=jt,jt.prototype.isMeshDepthMaterial=!0,jt.prototype.copy=function(ms){return xe.prototype.copy.call(this,ms),this.depthPacking=ms.depthPacking,this.skinning=ms.skinning,this.morphTargets=ms.morphTargets,this.map=ms.map,this.alphaMap=ms.alphaMap,this.displacementMap=ms.displacementMap,this.displacementScale=ms.displacementScale,this.displacementBias=ms.displacementBias,this.wireframe=ms.wireframe,this.wireframeLinewidth=ms.wireframeLinewidth,this},qt.prototype=Object.create(xe.prototype),qt.prototype.constructor=qt,qt.prototype.isMeshDistanceMaterial=!0,qt.prototype.copy=function(ms){return xe.prototype.copy.call(this,ms),this.referencePosition.copy(ms.referencePosition),this.nearDistance=ms.nearDistance,this.farDistance=ms.farDistance,this.skinning=ms.skinning,this.morphTargets=ms.morphTargets,this.map=ms.map,this.alphaMap=ms.alphaMap,this.displacementMap=ms.displacementMap,this.displacementScale=ms.displacementScale,this.displacementBias=ms.displacementBias,this},Kt.prototype=Object.assign(Object.create(X.prototype),{constructor:Kt,isGroup:!0}),$t.prototype=Object.assign(Object.create(X.prototype),{constructor:$t,isCamera:!0,copy:function(ms,us){return X.prototype.copy.call(this,ms,us),this.matrixWorldInverse.copy(ms.matrixWorldInverse),this.projectionMatrix.copy(ms.projectionMatrix),this.projectionMatrixInverse.copy(ms.projectionMatrixInverse),this},getWorldDirection:function(ms){void 0===ms&&(ms=new T);this.updateMatrixWorld(!0);var us=this.matrixWorld.elements;return ms.set(-us[8],-us[9],-us[10]).normalize()},updateMatrixWorld:function(ms){X.prototype.updateMatrixWorld.call(this,ms),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}}),ea.prototype=Object.assign(Object.create($t.prototype),{constructor:ea,isPerspectiveCamera:!0,copy:function(ms,us){return $t.prototype.copy.call(this,ms,us),this.fov=ms.fov,this.zoom=ms.zoom,this.near=ms.near,this.far=ms.far,this.focus=ms.focus,this.aspect=ms.aspect,this.view=null===ms.view?null:Object.assign({},ms.view),this.filmGauge=ms.filmGauge,this.filmOffset=ms.filmOffset,this},setFocalLength:function(ms){var us=0.5*this.getFilmHeight()/ms;this.fov=2*Ai.RAD2DEG*Math.atan(us),this.updateProjectionMatrix()},getFocalLength:function(){var ms=Math.tan(0.5*Ai.DEG2RAD*this.fov);return 0.5*this.getFilmHeight()/ms},getEffectiveFOV:function(){return 2*Ai.RAD2DEG*Math.atan(Math.tan(0.5*Ai.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(ms,us,fs,gs,hs,xs){this.aspect=ms/us,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=ms,this.view.fullHeight=us,this.view.offsetX=fs,this.view.offsetY=gs,this.view.width=hs,this.view.height=xs,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var ms=this.near,us=ms*Math.tan(0.5*Ai.DEG2RAD*this.fov)/this.zoom,fs=2*us,gs=this.aspect*fs,hs=-0.5*gs,xs=this.view;if(null!==this.view&&this.view.enabled){var vs=xs.fullWidth,_s=xs.fullHeight;hs+=xs.offsetX*gs/vs,us-=xs.offsetY*fs/_s,gs*=xs.width/vs,fs*=xs.height/_s}var ys=this.filmOffset;0!==ys&&(hs+=ms*ys/this.getFilmWidth()),this.projectionMatrix.makePerspective(hs,hs+gs,us,us-fs,ms,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(ms){var us=X.prototype.toJSON.call(this,ms);return us.object.fov=this.fov,us.object.zoom=this.zoom,us.object.near=this.near,us.object.far=this.far,us.object.focus=this.focus,us.object.aspect=this.aspect,null!==this.view&&(us.object.view=Object.assign({},this.view)),us.object.filmGauge=this.filmGauge,us.object.filmOffset=this.filmOffset,us}}),ta.prototype=Object.assign(Object.create(ea.prototype),{constructor:ta,isArrayCamera:!0});var cs=new T,ps=new T;oa.prototype=Object.assign(Object.create(X.prototype),{constructor:oa,copy:function(ms,us){return X.prototype.copy.call(this,ms,us),null!==ms.background&&(this.background=ms.background.clone()),null!==ms.fog&&(this.fog=ms.fog.clone()),null!==ms.overrideMaterial&&(this.overrideMaterial=ms.overrideMaterial.clone()),this.autoUpdate=ms.autoUpdate,this.matrixAutoUpdate=ms.matrixAutoUpdate,this},toJSON:function(ms){var us=X.prototype.toJSON.call(this,ms);return null!==this.background&&(us.object.background=this.background.toJSON(ms)),null!==this.fog&&(us.object.fog=this.fog.toJSON()),us}}),Object.assign(sa.prototype,{linePrecision:1,set:function(ms,us){this.ray.set(ms,us)},setFromCamera:function(ms,us){us&&us.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(us.matrixWorld),this.ray.direction.set(ms.x,ms.y,0.5).unproject(us).sub(this.ray.origin).normalize()):us&&us.isOrthographicCamera&&(this.ray.origin.set(ms.x,ms.y,(us.near+us.far)/(us.near-us.far)).unproject(us),this.ray.direction.set(0,0,-1).transformDirection(us.matrixWorld))},intersectObject:function(ms,us,fs){var gs=fs||[];return da(ms,this,gs,us),gs.sort(la),gs},intersectObjects:function(ms,us,fs){var gs=fs||[];if(!1===Array.isArray(ms))return gs;for(var hs=0,xs=ms.length;hs<xs;hs++)da(ms[hs],this,gs,us);return gs.sort(la),gs}}),o.WebGLRenderer=function(ms){function us(){return null===sl?Ll:1}function fs(){Rl=new Ae(Nl),Fl=new Te(Nl,Rl,ms),Fl.isWebGL2||(Rl.get('WEBGL_depth_texture'),Rl.get('OES_texture_float'),Rl.get('OES_texture_half_float'),Rl.get('OES_texture_half_float_linear'),Rl.get('OES_standard_derivatives'),Rl.get('OES_element_index_uint'),Rl.get('ANGLE_instanced_arrays')),Rl.get('OES_texture_float_linear'),ed=new Qt(Nl,Rl,Fl),Bl=new Zt(Nl,Rl,ed,Fl),Bl.scissor(_l.copy(Tl).multiplyScalar(Ll)),Bl.viewport(xl.copy(wl).multiplyScalar(Ll)),Vl=new De(Nl),Ol=new Rt,Gl=new Jt(Nl,Rl,Bl,Ol,Fl,ed,Vl),Wl=new O(Nl),Hl=new Ce(Nl,Wl,Vl),Xl=new Ne(Hl,Vl),Ql=new Ie(Nl),ql=new Ut(rl,Rl,Fl),Yl=new Ot,Zl=new Ht,Jl=new Le(rl,Bl,Xl,Qs),Kl=new we(Nl,Rl,Vl,Fl),$l=new Ee(Nl,Rl,Vl,Fl),Vl.programs=ql.programs,rl.context=Nl,rl.capabilities=Fl,rl.extensions=Rl,rl.properties=Ol,rl.renderLists=Yl,rl.state=Bl,rl.info=Vl}function gs(sd){sd.preventDefault(),nl=!0}function hs(){nl=!1,fs()}function xs(sd){var ld=sd.target;ld.removeEventListener('dispose',xs),vs(ld)}function vs(sd){_s(sd),Ol.remove(sd)}function _s(sd){var ld=Ol.get(sd).program;sd.program=void 0,ld!==void 0&&ql.releaseProgram(ld)}function ys(sd,ld){sd.render(function(dd){rl.renderBufferImmediate(dd,ld)})}function bs(sd,ld,dd){if(!(dd&&dd.isInstancedBufferGeometry&!Fl.isWebGL2&&null===Rl.get('ANGLE_instanced_arrays'))){Bl.initAttributes();var cd=dd.attributes,pd=ld.getAttributes(),md=sd.defaultAttributeValues;for(var ud in pd){var fd=pd[ud];if(0<=fd){var gd=cd[ud];if(void 0!==gd){var hd=gd.normalized,xd=gd.itemSize,vd=Wl.get(gd);if(void 0===vd)continue;var _d=vd.buffer,yd=vd.type,Md=vd.bytesPerElement;if(gd.isInterleavedBufferAttribute){var Sd=gd.data,Ld=Sd.stride,wd=gd.offset;Sd&&Sd.isInstancedInterleavedBuffer?(Bl.enableAttributeAndDivisor(fd,Sd.meshPerAttribute),void 0===dd.maxInstancedCount&&(dd.maxInstancedCount=Sd.meshPerAttribute*Sd.count)):Bl.enableAttribute(fd),Nl.bindBuffer(34962,_d),Nl.vertexAttribPointer(fd,xd,yd,hd,Ld*Md,wd*Md)}else gd.isInstancedBufferAttribute?(Bl.enableAttributeAndDivisor(fd,gd.meshPerAttribute),void 0===dd.maxInstancedCount&&(dd.maxInstancedCount=gd.meshPerAttribute*gd.count)):Bl.enableAttribute(fd),Nl.bindBuffer(34962,_d),Nl.vertexAttribPointer(fd,xd,yd,hd,0,0)}else if(void 0!==md){var Td=md[ud];if(void 0!==Td)switch(Td.length){case 2:Nl.vertexAttrib2fv(fd,Td);break;case 3:Nl.vertexAttrib3fv(fd,Td);break;case 4:Nl.vertexAttrib4fv(fd,Td);break;default:Nl.vertexAttrib1fv(fd,Td);}}}}Bl.disableUnusedAttributes()}}function Ss(sd,ld,dd){if(!1!==sd.visible){var cd=sd.layers.test(ld.layers);if(cd)if(sd.isLight)al.pushLight(sd),sd.castShadow&&al.pushShadow(sd);else if(sd.isSprite){if(!sd.frustumCulled||Al.intersectsSprite(sd)){dd&&Il.setFromMatrixPosition(sd.matrixWorld).applyMatrix4(zl);var pd=Xl.update(sd),md=sd.material;el.push(sd,pd,md,Il.z,null)}}else if(sd.isImmediateRenderObject)dd&&Il.setFromMatrixPosition(sd.matrixWorld).applyMatrix4(zl),el.push(sd,null,sd.material,Il.z,null);else if((sd.isMesh||sd.isLine||sd.isPoints)&&(sd.isSkinnedMesh&&sd.skeleton.update(),!sd.frustumCulled||Al.intersectsObject(sd))){dd&&Il.setFromMatrixPosition(sd.matrixWorld).applyMatrix4(zl);var pd=Xl.update(sd),md=sd.material;if(Array.isArray(md))for(var ud=pd.groups,fd=0,gd=ud.length;fd<gd;fd++){var hd=ud[fd],xd=md[hd.materialIndex];xd&&xd.visible&&el.push(sd,pd,xd,Il.z,hd)}else md.visible&&el.push(sd,pd,md,Il.z,null)}for(var vd=sd.children,fd=0,gd=vd.length;fd<gd;fd++)Ss(vd[fd],ld,dd)}}function Ls(sd,ld,dd,cd){for(var pd=0,md=sd.length;pd<md;pd++){var ud=sd[pd],fd=ud.object,gd=ud.geometry,hd=cd===void 0?ud.material:cd,xd=ud.group;if(dd.isArrayCamera){hl=dd;for(var vd=dd.cameras,_d=0,yd=vd.length,Md;_d<yd;_d++)if(Md=vd[_d],fd.layers.test(Md.layers)){if('viewport'in Md)Bl.viewport(xl.copy(Md.viewport));else{var Sd=Md.bounds,Ld=Sd.x*Ml,wd=Sd.y*Sl,Td=Sd.z*Ml,Pd=Sd.w*Sl;Bl.viewport(xl.set(Ld,wd,Td,Pd).multiplyScalar(Ll))}al.setupLights(Md),ws(fd,ld,Md,gd,hd,xd)}}else hl=null,ws(fd,ld,dd,gd,hd,xd)}}function ws(sd,ld,dd,cd,pd,md){if(sd.onBeforeRender(rl,ld,dd,cd,pd,md),al=Zl.get(ld,hl||dd),sd.modelViewMatrix.multiplyMatrices(dd.matrixWorldInverse,sd.matrixWorld),sd.normalMatrix.getNormalMatrix(sd.modelViewMatrix),sd.isImmediateRenderObject){Bl.setMaterial(pd);var ud=Ps(dd,ld.fog,pd,sd);cl.geometry=null,cl.program=null,cl.wireframe=!1,ys(sd,ud)}else rl.renderBufferDirect(dd,ld.fog,cd,pd,sd,md);sd.onAfterRender(rl,ld,dd,cd,pd,md),al=Zl.get(ld,hl||dd)}function Ts(sd,ld,dd){var cd=Ol.get(sd),pd=al.state.lights,md=al.state.shadowsArray,ud=cd.lightsHash,fd=pd.state.hash,gd=ql.getParameters(sd,pd.state,md,ld,Cl.numPlanes,Cl.numIntersection,dd),hd=ql.getProgramCode(sd,gd),xd=cd.program,vd=!0;if(xd===void 0)sd.addEventListener('dispose',xs);else if(xd.code!==hd)_s(sd);else if(ud.stateID!==fd.stateID||ud.directionalLength!==fd.directionalLength||ud.pointLength!==fd.pointLength||ud.spotLength!==fd.spotLength||ud.rectAreaLength!==fd.rectAreaLength||ud.hemiLength!==fd.hemiLength||ud.shadowsLength!==fd.shadowsLength)ud.stateID=fd.stateID,ud.directionalLength=fd.directionalLength,ud.pointLength=fd.pointLength,ud.spotLength=fd.spotLength,ud.rectAreaLength=fd.rectAreaLength,ud.hemiLength=fd.hemiLength,ud.shadowsLength=fd.shadowsLength,vd=!1;else{if(gd.shaderID!==void 0)return;vd=!1}if(vd){if(gd.shaderID){var _d=Yo[gd.shaderID];cd.shader={name:sd.type,uniforms:U(_d.uniforms),vertexShader:_d.vertexShader,fragmentShader:_d.fragmentShader}}else cd.shader={name:sd.type,uniforms:sd.uniforms,vertexShader:sd.vertexShader,fragmentShader:sd.fragmentShader};sd.onBeforeCompile(cd.shader,rl),hd=ql.getProgramCode(sd,gd),xd=ql.acquireProgram(sd,cd.shader,gd,hd),cd.program=xd,sd.program=xd}var yd=xd.getAttributes();if(sd.morphTargets){sd.numSupportedMorphTargets=0;for(var Md=0;Md<rl.maxMorphTargets;Md++)0<=yd['morphTarget'+Md]&&sd.numSupportedMorphTargets++}if(sd.morphNormals){sd.numSupportedMorphNormals=0;for(var Md=0;Md<rl.maxMorphNormals;Md++)0<=yd['morphNormal'+Md]&&sd.numSupportedMorphNormals++}var Sd=cd.shader.uniforms;(sd.isShaderMaterial||sd.isRawShaderMaterial)&&!0!==sd.clipping||(cd.numClippingPlanes=Cl.numPlanes,cd.numIntersection=Cl.numIntersection,Sd.clippingPlanes=Cl.uniform),cd.fog=ld,ud===void 0&&(cd.lightsHash=ud={}),ud.stateID=fd.stateID,ud.directionalLength=fd.directionalLength,ud.pointLength=fd.pointLength,ud.spotLength=fd.spotLength,ud.rectAreaLength=fd.rectAreaLength,ud.hemiLength=fd.hemiLength,ud.shadowsLength=fd.shadowsLength,sd.lights&&(Sd.ambientLightColor.value=pd.state.ambient,Sd.directionalLights.value=pd.state.directional,Sd.spotLights.value=pd.state.spot,Sd.rectAreaLights.value=pd.state.rectArea,Sd.pointLights.value=pd.state.point,Sd.hemisphereLights.value=pd.state.hemi,Sd.directionalShadowMap.value=pd.state.directionalShadowMap,Sd.directionalShadowMatrix.value=pd.state.directionalShadowMatrix,Sd.spotShadowMap.value=pd.state.spotShadowMap,Sd.spotShadowMatrix.value=pd.state.spotShadowMatrix,Sd.pointShadowMap.value=pd.state.pointShadowMap,Sd.pointShadowMatrix.value=pd.state.pointShadowMatrix);var Ld=cd.program.getUniforms(),wd=_t.seqWithValue(Ld.seq,Sd);cd.uniformsList=wd}function Ps(sd,ld,dd,cd){bl=0;var pd=Ol.get(dd),md=al.state.lights,ud=pd.lightsHash,fd=md.state.hash;if(El&&(Dl||sd!==ul)){var gd=sd===ul&&dd.id===dl;Cl.setState(dd.clippingPlanes,dd.clipIntersection,dd.clipShadows,sd,pd,gd)}!1===dd.needsUpdate&&(void 0===pd.program?dd.needsUpdate=!0:dd.fog&&pd.fog!==ld?dd.needsUpdate=!0:dd.lights&&(ud.stateID!==fd.stateID||ud.directionalLength!==fd.directionalLength||ud.pointLength!==fd.pointLength||ud.spotLength!==fd.spotLength||ud.rectAreaLength!==fd.rectAreaLength||ud.hemiLength!==fd.hemiLength||ud.shadowsLength!==fd.shadowsLength)?dd.needsUpdate=!0:void 0!==pd.numClippingPlanes&&(pd.numClippingPlanes!==Cl.numPlanes||pd.numIntersection!==Cl.numIntersection)&&(dd.needsUpdate=!0)),dd.needsUpdate&&(Ts(dd,ld,cd),dd.needsUpdate=!1);var hd=!1,xd=!1,vd=!1,_d=pd.program,yd=_d.getUniforms(),Md=pd.shader.uniforms;if(Bl.useProgram(_d.program)&&(hd=!0,xd=!0,vd=!0),dd.id!==dl&&(dl=dd.id,xd=!0),hd||ul!==sd){if(yd.setValue(Nl,'projectionMatrix',sd.projectionMatrix),Fl.logarithmicDepthBuffer&&yd.setValue(Nl,'logDepthBufFC',2/(Math.log(sd.far+1)/Math.LN2)),ul!==sd&&(ul=sd,xd=!0,vd=!0),dd.isShaderMaterial||dd.isMeshPhongMaterial||dd.isMeshStandardMaterial||dd.envMap){var Sd=yd.map.cameraPosition;void 0!==Sd&&Sd.setValue(Nl,Il.setFromMatrixPosition(sd.matrixWorld))}(dd.isMeshPhongMaterial||dd.isMeshLambertMaterial||dd.isMeshBasicMaterial||dd.isMeshStandardMaterial||dd.isShaderMaterial||dd.skinning)&&yd.setValue(Nl,'viewMatrix',sd.matrixWorldInverse)}if(dd.skinning){yd.setOptional(Nl,cd,'bindMatrix'),yd.setOptional(Nl,cd,'bindMatrixInverse');var Ld=cd.skeleton;if(Ld){var wd=Ld.bones;if(Fl.floatVertexTextures){if(void 0===Ld.boneTexture){var Td=Math.sqrt(4*wd.length);Td=Ai.ceilPowerOfTwo(Td),Td=Math.max(Td,4);var Pd=new Float32Array(4*(Td*Td));Pd.set(Ld.boneMatrices);var Ad=new C(Pd,Td,Td,Or,zr);Ad.needsUpdate=!0,Ld.boneMatrices=Pd,Ld.boneTexture=Ad,Ld.boneTextureSize=Td}yd.setValue(Nl,'boneTexture',Ld.boneTexture),yd.setValue(Nl,'boneTextureSize',Ld.boneTextureSize)}else yd.setOptional(Nl,Ld,'boneMatrices')}}return xd&&(yd.setValue(Nl,'toneMappingExposure',rl.toneMappingExposure),yd.setValue(Nl,'toneMappingWhitePoint',rl.toneMappingWhitePoint),dd.lights&&Ws(Md,vd),ld&&dd.fog&&Is(Md,ld),dd.isMeshBasicMaterial?As(Md,dd):dd.isMeshLambertMaterial?(As(Md,dd),Ns(Md,dd)):dd.isMeshPhongMaterial?(As(Md,dd),dd.isMeshToonMaterial?Rs(Md,dd):Us(Md,dd)):dd.isMeshStandardMaterial?(As(Md,dd),dd.isMeshPhysicalMaterial?Bs(Md,dd):Fs(Md,dd)):dd.isMeshMatcapMaterial?(As(Md,dd),Vs(Md,dd)):dd.isMeshDepthMaterial?(As(Md,dd),Os(Md,dd)):dd.isMeshDistanceMaterial?(As(Md,dd),Gs(Md,dd)):dd.isMeshNormalMaterial?(As(Md,dd),ks(Md,dd)):dd.isLineBasicMaterial?(Cs(Md,dd),dd.isLineDashedMaterial&&Es(Md,dd)):dd.isPointsMaterial?Ds(Md,dd):dd.isSpriteMaterial?zs(Md,dd):dd.isShadowMaterial&&(Md.color.value=dd.color,Md.opacity.value=dd.opacity),void 0!==Md.ltc_1&&(Md.ltc_1.value=qo.LTC_1),void 0!==Md.ltc_2&&(Md.ltc_2.value=qo.LTC_2),_t.upload(Nl,pd.uniformsList,Md,rl)),dd.isShaderMaterial&&!0===dd.uniformsNeedUpdate&&(_t.upload(Nl,pd.uniformsList,Md,rl),dd.uniformsNeedUpdate=!1),dd.isSpriteMaterial&&yd.setValue(Nl,'center',cd.center),yd.setValue(Nl,'modelViewMatrix',cd.modelViewMatrix),yd.setValue(Nl,'normalMatrix',cd.normalMatrix),yd.setValue(Nl,'modelMatrix',cd.matrixWorld),_d}function As(sd,ld){sd.opacity.value=ld.opacity,ld.color&&(sd.diffuse.value=ld.color),ld.emissive&&sd.emissive.value.copy(ld.emissive).multiplyScalar(ld.emissiveIntensity),ld.map&&(sd.map.value=ld.map),ld.alphaMap&&(sd.alphaMap.value=ld.alphaMap),ld.specularMap&&(sd.specularMap.value=ld.specularMap),ld.envMap&&(sd.envMap.value=ld.envMap,sd.flipEnvMap.value=ld.envMap.isCubeTexture?-1:1,sd.reflectivity.value=ld.reflectivity,sd.refractionRatio.value=ld.refractionRatio,sd.maxMipLevel.value=Ol.get(ld.envMap).__maxMipLevel),ld.lightMap&&(sd.lightMap.value=ld.lightMap,sd.lightMapIntensity.value=ld.lightMapIntensity),ld.aoMap&&(sd.aoMap.value=ld.aoMap,sd.aoMapIntensity.value=ld.aoMapIntensity);var dd;ld.map?dd=ld.map:ld.specularMap?dd=ld.specularMap:ld.displacementMap?dd=ld.displacementMap:ld.normalMap?dd=ld.normalMap:ld.bumpMap?dd=ld.bumpMap:ld.roughnessMap?dd=ld.roughnessMap:ld.metalnessMap?dd=ld.metalnessMap:ld.alphaMap?dd=ld.alphaMap:ld.emissiveMap&&(dd=ld.emissiveMap),dd!=void 0&&(dd.isWebGLRenderTarget&&(dd=dd.texture),!0===dd.matrixAutoUpdate&&dd.updateMatrix(),sd.uvTransform.value.copy(dd.matrix))}function Cs(sd,ld){sd.diffuse.value=ld.color,sd.opacity.value=ld.opacity}function Es(sd,ld){sd.dashSize.value=ld.dashSize,sd.totalSize.value=ld.dashSize+ld.gapSize,sd.scale.value=ld.scale}function Ds(sd,ld){sd.diffuse.value=ld.color,sd.opacity.value=ld.opacity,sd.size.value=ld.size*Ll,sd.scale.value=0.5*Sl,sd.map.value=ld.map,null!==ld.map&&(!0===ld.map.matrixAutoUpdate&&ld.map.updateMatrix(),sd.uvTransform.value.copy(ld.map.matrix))}function zs(sd,ld){sd.diffuse.value=ld.color,sd.opacity.value=ld.opacity,sd.rotation.value=ld.rotation,sd.map.value=ld.map,null!==ld.map&&(!0===ld.map.matrixAutoUpdate&&ld.map.updateMatrix(),sd.uvTransform.value.copy(ld.map.matrix))}function Is(sd,ld){sd.fogColor.value=ld.color,ld.isFog?(sd.fogNear.value=ld.near,sd.fogFar.value=ld.far):ld.isFogExp2&&(sd.fogDensity.value=ld.density)}function Ns(sd,ld){ld.emissiveMap&&(sd.emissiveMap.value=ld.emissiveMap)}function Us(sd,ld){sd.specular.value=ld.specular,sd.shininess.value=Math.max(ld.shininess,1e-4),ld.emissiveMap&&(sd.emissiveMap.value=ld.emissiveMap),ld.bumpMap&&(sd.bumpMap.value=ld.bumpMap,sd.bumpScale.value=ld.bumpScale,ld.side===xa&&(sd.bumpScale.value*=-1)),ld.normalMap&&(sd.normalMap.value=ld.normalMap,sd.normalScale.value.copy(ld.normalScale),ld.side===xa&&sd.normalScale.value.negate()),ld.displacementMap&&(sd.displacementMap.value=ld.displacementMap,sd.displacementScale.value=ld.displacementScale,sd.displacementBias.value=ld.displacementBias)}function Rs(sd,ld){Us(sd,ld),ld.gradientMap&&(sd.gradientMap.value=ld.gradientMap)}function Fs(sd,ld){sd.roughness.value=ld.roughness,sd.metalness.value=ld.metalness,ld.roughnessMap&&(sd.roughnessMap.value=ld.roughnessMap),ld.metalnessMap&&(sd.metalnessMap.value=ld.metalnessMap),ld.emissiveMap&&(sd.emissiveMap.value=ld.emissiveMap),ld.bumpMap&&(sd.bumpMap.value=ld.bumpMap,sd.bumpScale.value=ld.bumpScale,ld.side===xa&&(sd.bumpScale.value*=-1)),ld.normalMap&&(sd.normalMap.value=ld.normalMap,sd.normalScale.value.copy(ld.normalScale),ld.side===xa&&sd.normalScale.value.negate()),ld.displacementMap&&(sd.displacementMap.value=ld.displacementMap,sd.displacementScale.value=ld.displacementScale,sd.displacementBias.value=ld.displacementBias),ld.envMap&&(sd.envMapIntensity.value=ld.envMapIntensity)}function Bs(sd,ld){Fs(sd,ld),sd.reflectivity.value=ld.reflectivity,sd.clearCoat.value=ld.clearCoat,sd.clearCoatRoughness.value=ld.clearCoatRoughness}function Vs(sd,ld){ld.matcap&&(sd.matcap.value=ld.matcap),ld.bumpMap&&(sd.bumpMap.value=ld.bumpMap,sd.bumpScale.value=ld.bumpScale,ld.side===xa&&(sd.bumpScale.value*=-1)),ld.normalMap&&(sd.normalMap.value=ld.normalMap,sd.normalScale.value.copy(ld.normalScale),ld.side===xa&&sd.normalScale.value.negate()),ld.displacementMap&&(sd.displacementMap.value=ld.displacementMap,sd.displacementScale.value=ld.displacementScale,sd.displacementBias.value=ld.displacementBias)}function Os(sd,ld){ld.displacementMap&&(sd.displacementMap.value=ld.displacementMap,sd.displacementScale.value=ld.displacementScale,sd.displacementBias.value=ld.displacementBias)}function Gs(sd,ld){ld.displacementMap&&(sd.displacementMap.value=ld.displacementMap,sd.displacementScale.value=ld.displacementScale,sd.displacementBias.value=ld.displacementBias),sd.referencePosition.value.copy(ld.referencePosition),sd.nearDistance.value=ld.nearDistance,sd.farDistance.value=ld.farDistance}function ks(sd,ld){ld.bumpMap&&(sd.bumpMap.value=ld.bumpMap,sd.bumpScale.value=ld.bumpScale,ld.side===xa&&(sd.bumpScale.value*=-1)),ld.normalMap&&(sd.normalMap.value=ld.normalMap,sd.normalScale.value.copy(ld.normalScale),ld.side===xa&&sd.normalScale.value.negate()),ld.displacementMap&&(sd.displacementMap.value=ld.displacementMap,sd.displacementScale.value=ld.displacementScale,sd.displacementBias.value=ld.displacementBias)}function Ws(sd,ld){sd.ambientLightColor.needsUpdate=ld,sd.directionalLights.needsUpdate=ld,sd.pointLights.needsUpdate=ld,sd.spotLights.needsUpdate=ld,sd.rectAreaLights.needsUpdate=ld,sd.hemisphereLights.needsUpdate=ld}ms=ms||{};var Xs=ms.canvas===void 0?document.createElementNS('http://www.w3.org/1999/xhtml','canvas'):ms.canvas,js=ms.context===void 0?null:ms.context,qs=ms.alpha!==void 0&&ms.alpha,Ys=!(ms.depth!==void 0)||ms.depth,Zs=!(ms.stencil!==void 0)||ms.stencil,Js=ms.antialias!==void 0&&ms.antialias,Qs=!(ms.premultipliedAlpha!==void 0)||ms.premultipliedAlpha,Ks=ms.preserveDrawingBuffer!==void 0&&ms.preserveDrawingBuffer,$s=ms.powerPreference===void 0?'default':ms.powerPreference,el=null,al=null;this.domElement=Xs,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=rr,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var rl=this,nl=!1,ol=null,sl=null,ll=null,dl=-1,cl={geometry:null,program:null,wireframe:!1},ul=null,hl=null,xl=new B,_l=new B,yl=null,bl=0,Ml=Xs.width,Sl=Xs.height,Ll=1,wl=new B(0,0,Ml,Sl),Tl=new B(0,0,Ml,Sl),Pl=!1,Al=new N,Cl=new Pe,El=!1,Dl=!1,zl=new S,Il=new T,Nl;try{var Ul={alpha:qs,depth:Ys,stencil:Zs,antialias:Js,premultipliedAlpha:Qs,preserveDrawingBuffer:Ks,powerPreference:$s};if(Xs.addEventListener('webglcontextlost',gs,!1),Xs.addEventListener('webglcontextrestored',hs,!1),Nl=js||Xs.getContext('webgl',Ul)||Xs.getContext('experimental-webgl',Ul),null===Nl)if(null!==Xs.getContext('webgl'))throw new Error;else throw new Error;void 0===Nl.getShaderPrecisionFormat&&(Nl.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(sd){}var Rl,Fl,Bl,Vl,Ol,Gl,Wl,Hl,Xl,ql,Yl,Zl,Jl,Ql,Kl,$l,ed;fs();var td=null;'undefined'!=typeof navigator&&(td='xr'in navigator?new ia(rl):new ra(rl)),this.vr=td;var rd=new Yt(rl,Xl,Fl.maxTextureSize);this.shadowMap=rd,this.getContext=function(){return Nl},this.getContextAttributes=function(){return Nl.getContextAttributes()},this.forceContextLoss=function(){var sd=Rl.get('WEBGL_lose_context');sd&&sd.loseContext()},this.forceContextRestore=function(){var sd=Rl.get('WEBGL_lose_context');sd&&sd.restoreContext()},this.getPixelRatio=function(){return Ll},this.setPixelRatio=function(sd){void 0===sd||(Ll=sd,this.setSize(Ml,Sl,!1))},this.getSize=function(){return{width:Ml,height:Sl}},this.setSize=function(sd,ld,dd){td.isPresenting()||(Ml=sd,Sl=ld,Xs.width=sd*Ll,Xs.height=ld*Ll,!1!==dd&&(Xs.style.width=sd+'px',Xs.style.height=ld+'px'),this.setViewport(0,0,sd,ld))},this.getDrawingBufferSize=function(){return{width:Ml*Ll,height:Sl*Ll}},this.setDrawingBufferSize=function(sd,ld,dd){Ml=sd,Sl=ld,Ll=dd,Xs.width=sd*dd,Xs.height=ld*dd,this.setViewport(0,0,sd,ld)},this.getCurrentViewport=function(){return xl},this.setViewport=function(sd,ld,dd,cd){wl.set(sd,Sl-ld-cd,dd,cd),Bl.viewport(xl.copy(wl).multiplyScalar(Ll))},this.setScissor=function(sd,ld,dd,cd){Tl.set(sd,Sl-ld-cd,dd,cd),Bl.scissor(_l.copy(Tl).multiplyScalar(Ll))},this.setScissorTest=function(sd){Bl.setScissorTest(Pl=sd)},this.getClearColor=function(){return Jl.getClearColor()},this.setClearColor=function(){Jl.setClearColor.apply(Jl,arguments)},this.getClearAlpha=function(){return Jl.getClearAlpha()},this.setClearAlpha=function(){Jl.setClearAlpha.apply(Jl,arguments)},this.clear=function(sd,ld,dd){var cd=0;(sd===void 0||sd)&&(cd|=16384),(ld===void 0||ld)&&(cd|=256),(dd===void 0||dd)&&(cd|=1024),Nl.clear(cd)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){Xs.removeEventListener('webglcontextlost',gs,!1),Xs.removeEventListener('webglcontextrestored',hs,!1),Yl.dispose(),Zl.dispose(),Ol.dispose(),Xl.dispose(),td.dispose(),od.stop()},this.renderBufferImmediate=function(sd,ld){Bl.initAttributes();var dd=Ol.get(sd);sd.hasPositions&&!dd.position&&(dd.position=Nl.createBuffer()),sd.hasNormals&&!dd.normal&&(dd.normal=Nl.createBuffer()),sd.hasUvs&&!dd.uv&&(dd.uv=Nl.createBuffer()),sd.hasColors&&!dd.color&&(dd.color=Nl.createBuffer());var cd=ld.getAttributes();sd.hasPositions&&(Nl.bindBuffer(34962,dd.position),Nl.bufferData(34962,sd.positionArray,35048),Bl.enableAttribute(cd.position),Nl.vertexAttribPointer(cd.position,3,5126,!1,0,0)),sd.hasNormals&&(Nl.bindBuffer(34962,dd.normal),Nl.bufferData(34962,sd.normalArray,35048),Bl.enableAttribute(cd.normal),Nl.vertexAttribPointer(cd.normal,3,5126,!1,0,0)),sd.hasUvs&&(Nl.bindBuffer(34962,dd.uv),Nl.bufferData(34962,sd.uvArray,35048),Bl.enableAttribute(cd.uv),Nl.vertexAttribPointer(cd.uv,2,5126,!1,0,0)),sd.hasColors&&(Nl.bindBuffer(34962,dd.color),Nl.bufferData(34962,sd.colorArray,35048),Bl.enableAttribute(cd.color),Nl.vertexAttribPointer(cd.color,3,5126,!1,0,0)),Bl.disableUnusedAttributes(),Nl.drawArrays(4,0,sd.count),sd.count=0},this.renderBufferDirect=function(sd,ld,dd,cd,pd,md){var ud=pd.isMesh&&0>pd.normalMatrix.determinant();Bl.setMaterial(cd,ud);var fd=Ps(sd,ld,cd,pd),gd=!1;(cl.geometry!==dd.id||cl.program!==fd.id||cl.wireframe!==(!0===cd.wireframe))&&(cl.geometry=dd.id,cl.program=fd.id,cl.wireframe=!0===cd.wireframe,gd=!0),pd.morphTargetInfluences&&(Ql.update(pd,dd,cd,fd),gd=!0);var hd=dd.index,xd=dd.attributes.position,vd=1;!0===cd.wireframe&&(hd=Hl.getWireframeAttribute(dd),vd=2);var _d,yd=Kl;null!==hd&&(_d=Wl.get(hd),yd=$l,yd.setIndex(_d)),gd&&(bs(cd,fd,dd),null!==hd&&Nl.bindBuffer(34963,_d.buffer));var Md=Infinity;null===hd?xd!==void 0&&(Md=xd.count):Md=hd.count;var Sd=dd.drawRange.start*vd,Ld=dd.drawRange.count*vd,wd=null===md?0:md.start*vd,Td=null===md?Infinity:md.count*vd,Pd=Math.max(Sd,wd),Ad=Math.min(Md,Sd+Ld,wd+Td)-1,Cd=Math.max(0,Ad-Pd+1);if(0!==Cd){if(pd.isMesh){if(!0===cd.wireframe)Bl.setLineWidth(cd.wireframeLinewidth*us()),yd.setMode(1);else switch(pd.drawMode){case gi:yd.setMode(4);break;case 1:yd.setMode(5);break;case 2:yd.setMode(6);}}else if(pd.isLine){var Ed=cd.linewidth;void 0===Ed&&(Ed=1),Bl.setLineWidth(Ed*us()),pd.isLineSegments?yd.setMode(1):pd.isLineLoop?yd.setMode(2):yd.setMode(3)}else pd.isPoints?yd.setMode(0):pd.isSprite&&yd.setMode(4);dd&&dd.isInstancedBufferGeometry?0<dd.maxInstancedCount&&yd.renderInstances(dd,Pd,Cd):yd.render(Pd,Cd)}},this.compile=function(sd,ld){al=Zl.get(sd,ld),al.init(),sd.traverse(function(dd){dd.isLight&&(al.pushLight(dd),dd.castShadow&&al.pushShadow(dd))}),al.setupLights(ld),sd.traverse(function(dd){if(dd.material)if(Array.isArray(dd.material))for(var cd=0;cd<dd.material.length;cd++)Ts(dd.material[cd],sd.fog,dd);else Ts(dd.material,sd.fog,dd)})};var nd=null,od=new V;od.setAnimationLoop(function(sd){td.isPresenting()||nd&&nd(sd)}),'undefined'!=typeof window&&od.setContext(window),this.setAnimationLoop=function(sd){nd=sd,td.setAnimationLoop(sd),od.start()},this.render=function(sd,ld,dd,cd){if(ld&&ld.isCamera&&!nl){cl.geometry=null,cl.program=null,cl.wireframe=!1,dl=-1,ul=null,!0===sd.autoUpdate&&sd.updateMatrixWorld(),null===ld.parent&&ld.updateMatrixWorld(),td.enabled&&(ld=td.getCamera(ld)),al=Zl.get(sd,ld),al.init(),sd.onBeforeRender(rl,sd,ld,dd),zl.multiplyMatrices(ld.projectionMatrix,ld.matrixWorldInverse),Al.setFromMatrix(zl),Dl=this.localClippingEnabled,El=Cl.init(this.clippingPlanes,Dl,ld),el=Yl.get(sd,ld),el.init(),Ss(sd,ld,rl.sortObjects),!0===rl.sortObjects&&el.sort(),El&&Cl.beginShadows();var pd=al.state.shadowsArray;rd.render(pd,sd,ld),al.setupLights(ld),El&&Cl.endShadows(),this.info.autoReset&&this.info.reset(),void 0===dd&&(dd=null),this.setRenderTarget(dd),Jl.render(el,sd,ld,cd);var md=el.opaque,ud=el.transparent;if(sd.overrideMaterial){var fd=sd.overrideMaterial;md.length&&Ls(md,sd,ld,fd),ud.length&&Ls(ud,sd,ld,fd)}else md.length&&Ls(md,sd,ld),ud.length&&Ls(ud,sd,ld);dd&&Gl.updateRenderTargetMipmap(dd),Bl.buffers.depth.setTest(!0),Bl.buffers.depth.setMask(!0),Bl.buffers.color.setMask(!0),Bl.setPolygonOffset(!1),sd.onAfterRender(rl,sd,ld),td.enabled&&td.submitFrame(),el=null,al=null}},this.allocTextureUnit=function(){var sd=bl;if(sd>=Fl.maxTextures);return bl+=1,sd},this.setTexture2D=function(){var sd=!1;return function(dd,cd){dd&&dd.isWebGLRenderTarget&&(!sd&&(sd=!0),dd=dd.texture),Gl.setTexture2D(dd,cd)}}(),this.setTexture3D=function(){return function(ld,dd){Gl.setTexture3D(ld,dd)}}(),this.setTexture=function(){var sd=!1;return function(dd,cd){sd||(sd=!0),Gl.setTexture2D(dd,cd)}}(),this.setTextureCube=function(){var sd=!1;return function(dd,cd){dd&&dd.isWebGLRenderTargetCube&&(!sd&&(sd=!0),dd=dd.texture),dd&&dd.isCubeTexture||Array.isArray(dd.image)&&6===dd.image.length?Gl.setTextureCube(dd,cd):Gl.setTextureCubeDynamic(dd,cd)}}(),this.setFramebuffer=function(sd){ol=sd},this.getRenderTarget=function(){return sl},this.setRenderTarget=function(sd){sl=sd,sd&&void 0===Ol.get(sd).__webglFramebuffer&&Gl.setupRenderTarget(sd);var ld=ol,dd=!1;if(sd){var cd=Ol.get(sd).__webglFramebuffer;sd.isWebGLRenderTargetCube?(ld=cd[sd.activeCubeFace],dd=!0):ld=cd,xl.copy(sd.viewport),_l.copy(sd.scissor),yl=sd.scissorTest}else xl.copy(wl).multiplyScalar(Ll),_l.copy(Tl).multiplyScalar(Ll),yl=Pl;if(ll!==ld&&(Nl.bindFramebuffer(36160,ld),ll=ld),Bl.viewport(xl),Bl.scissor(_l),Bl.setScissorTest(yl),dd){var pd=Ol.get(sd.texture);Nl.framebufferTexture2D(36160,36064,34069+sd.activeCubeFace,pd.__webglTexture,sd.activeMipMapLevel)}},this.readRenderTargetPixels=function(sd,ld,dd,cd,pd,md){if(sd&&sd.isWebGLRenderTarget){var ud=Ol.get(sd).__webglFramebuffer;if(ud){var fd=!1;ud!==ll&&(Nl.bindFramebuffer(36160,ud),fd=!0);try{var gd=sd.texture,hd=gd.format,xd=gd.type;if(hd!==Or&&ed.convert(hd)!==Nl.getParameter(35739))return;if(xd!==Tr&&ed.convert(xd)!==Nl.getParameter(35738)&&!(xd===zr&&(Fl.isWebGL2||Rl.get('OES_texture_float')||Rl.get('WEBGL_color_buffer_float')))&&!(xd===Ir&&(Fl.isWebGL2?Rl.get('EXT_color_buffer_float'):Rl.get('EXT_color_buffer_half_float'))))return;36053===Nl.checkFramebufferStatus(36160)&&0<=ld&&ld<=sd.width-cd&&0<=dd&&dd<=sd.height-pd&&Nl.readPixels(ld,dd,cd,pd,ed.convert(hd),ed.convert(xd),md)}finally{fd&&Nl.bindFramebuffer(36160,ll)}}}},this.copyFramebufferToTexture=function(sd,ld,dd){var cd=ld.image.width,pd=ld.image.height,md=ed.convert(ld.format);this.setTexture2D(ld,0),Nl.copyTexImage2D(3553,dd||0,md,sd.x,sd.y,cd,pd,0)},this.copyTextureToTexture=function(sd,ld,dd,cd){var pd=ld.image.width,md=ld.image.height,ud=ed.convert(dd.format),fd=ed.convert(dd.type);this.setTexture2D(dd,0),ld.isDataTexture?Nl.texSubImage2D(3553,cd||0,sd.x,sd.y,pd,md,ud,fd,ld.image.data):Nl.texSubImage2D(3553,cd||0,sd.x,sd.y,ud,fd,ld.image)}},o.Scene=oa,o.Mesh=Se,o.Group=Kt,o.PerspectiveCamera=ea,o.Raycaster=sa,o.EventDispatcher=_,o.Vector3=T,o.Vector2=M,o.Quaternion=L,o.BoxGeometry=ue,o.MeshBasicMaterial=Me,Object.defineProperty(o,'__esModule',{value:!0})});